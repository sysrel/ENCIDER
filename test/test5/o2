KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test5/klee-out-0"
KLEE: Using STP solver backend
Uncov init=830
Couldn't open file 
Using cache line mode (as default)!
KLEE: WARNING: undefined reference to function: printf
arg 0 type %struct.data_t count=20
Symbolizing arg 0 of foo, address 42843728 size=80
is arg 0 type %struct.data_t* single instance? 0
to be made symbolic? 1
clearing foo_arg_0_0 from high
recording address of foo_arg_0_0 42843728 as low security insensitive
arg 1 type %struct.data_t count=20
Symbolizing arg 1 of foo, address 42844128 size=80
is arg 1 type %struct.data_t* single instance? 0
to be made symbolic? 1
high security regions from type def
0,32
setting symbolic region high: foo_arg_1_0
recording address of foo_arg_1_0 42844128 as high security sensitive
High symbolic regions:
foo_arg_1_0
Low symbolic regions:
foo_arg_0_0
Registering publicOutputReturningFName as foo
clearing return_value from high
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %L = alloca %struct.public_t, align 8
Alloc size: 8 or 8 vs MAX: 10240 0
adjusted alloc size: 8
next instruction:   %H = alloca %struct.secret_t, align 8
Alloc size: 8 or 8 vs MAX: 10240 0
adjusted alloc size: 8
next instruction:   %2 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0
extracting region from 41498792
next instruction:   store %struct.data_t* %L.coerce, %struct.data_t** %2, align 8
reached foo
state=0x2858000 memory operation (inside foo) 
  store %struct.data_t* %L.coerce, %struct.data_t** %2, align 8
 address: 41498792
executeMemoryOperation isWrite? 1
storing value 42843728
address for memop 41498792
default offset for target address 0
base memory address 41498792
next instruction:   %3 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0
extracting region from 41498856
next instruction:   store %struct.data_t* %H.coerce, %struct.data_t** %3, align 8
state=0x2858000 memory operation (inside foo) 
  store %struct.data_t* %H.coerce, %struct.data_t** %3, align 8
 address: 41498856
executeMemoryOperation isWrite? 1
storing value 42844128
address for memop 41498856
default offset for target address 0
base memory address 41498856
next instruction:   %4 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !131
extracting region from 41498856
next instruction:   %5 = load %struct.data_t*, %struct.data_t** %4, align 8, !dbg !131
state=0x2858000 memory operation (inside foo) 
  %5 = load %struct.data_t*, %struct.data_t** %4, align 8, !dbg !131
 address: 41498856
executeMemoryOperation isWrite? 0
address for memop 41498856
default offset for target address 0
base memory address 41498856
next instruction:   %6 = getelementptr inbounds %struct.data_t, %struct.data_t* %5, i32 0, i32 0, !dbg !133
extracting region from 42844128
next instruction:   %7 = load i32, i32* %6, align 4, !dbg !133
state=0x2858000 memory operation (inside foo) 
  %7 = load i32, i32* %6, align 4, !dbg !133
 address: 42844128
executeMemoryOperation isWrite? 0
address for memop 42844128
default offset for target address 0
base memory address 42844128
next instruction:   %8 = icmp sgt i32 %7, 0, !dbg !134
next instruction:   %9 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0, !dbg !135
extracting region from 41498792
next instruction:   %10 = load %struct.data_t*, %struct.data_t** %9, align 8, !dbg !135
state=0x2858000 memory operation (inside foo) 
  %10 = load %struct.data_t*, %struct.data_t** %9, align 8, !dbg !135
 address: 41498792
executeMemoryOperation isWrite? 0
address for memop 41498792
default offset for target address 0
base memory address 41498792
next instruction:   %11 = getelementptr inbounds %struct.data_t, %struct.data_t* %10, i32 0, i32 0, !dbg !138
extracting region from 42843728
next instruction:   %12 = load i32, i32* %11, align 4, !dbg !138
state=0x2858000 memory operation (inside foo) 
  %12 = load i32, i32* %11, align 4, !dbg !138
 address: 42843728
executeMemoryOperation isWrite? 0
address for memop 42843728
default offset for target address 0
base memory address 42843728
next instruction:   br i1 %8, label %13, label %30, !dbg !139
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %8, label %13, label %30, !dbg !139
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %8, label %13, label %30, !dbg !139
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %8, label %13, label %30, !dbg !139
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %8, label %13, label %30, !dbg !139
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32
next instruction:   %31 = icmp slt i32 %12, 0, !dbg !159
next instruction:   %14 = icmp slt i32 %12, 1, !dbg !140
next instruction:   br i1 %14, label %15, label %18, !dbg !141
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 1
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 1
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
  br i1 %14, label %15, label %18, !dbg !141
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 1
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          1))
  br i1 %14, label %15, label %18, !dbg !141
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
has high? 0
has low? 1
next instruction:   br i1 %31, label %32, label %57, !dbg !162
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 0
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 0
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
  br i1 %31, label %32, label %57, !dbg !162
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 0
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 0
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          0))
  br i1 %31, label %32, label %57, !dbg !162
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
has high? 0
has low? 1
next instruction:   %33 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !163
extracting region from 41498856
next instruction:   %16 = call i32 @loop(i32 3, i32 2), !dbg !142
next instruction:   %19 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0, !dbg !146
extracting region from 41498792
next instruction:   %58 = call i32 @loop(i32 10, i32 2), !dbg !194
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %34 = load %struct.data_t*, %struct.data_t** %33, align 8, !dbg !163
state=0x2858500 memory operation (inside foo) 
  %34 = load %struct.data_t*, %struct.data_t** %33, align 8, !dbg !163
 address: 41498856
executeMemoryOperation isWrite? 0
address for memop 41498856
default offset for target address 0
base memory address 41498856
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x2858f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41498536
executeMemoryOperation isWrite? 1
storing value 10
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   store i32 %base, i32* %2, align 4
state=0x2858f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41498968
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2858f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %35 = getelementptr inbounds %struct.data_t, %struct.data_t* %34, i32 0, i32 0, !dbg !166
extracting region from 42844128
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2858f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2858f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %20 = load %struct.data_t*, %struct.data_t** %19, align 8, !dbg !146
state=0x2858a00 memory operation (inside foo) 
  %20 = load %struct.data_t*, %struct.data_t** %19, align 8, !dbg !146
 address: 41498792
executeMemoryOperation isWrite? 0
address for memop 41498792
default offset for target address 0
base memory address 41498792
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %36 = load i32, i32* %35, align 4, !dbg !166
state=0x2858500 memory operation (inside foo) 
  %36 = load i32, i32* %35, align 4, !dbg !166
 address: 42844128
executeMemoryOperation isWrite? 0
address for memop 42844128
default offset for target address 0
base memory address 42844128
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2858000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41498992
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41498992
default offset for target address 0
base memory address 41498992
next instruction:   br label %4, !dbg !135
next instruction:   %37 = icmp sgt i32 %36, -10, !dbg !167
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %38 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0, !dbg !168
extracting region from 41498792
next instruction:   %21 = getelementptr inbounds %struct.data_t, %struct.data_t* %20, i32 0, i32 0, !dbg !148
extracting region from 42843728
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   store i32 %base, i32* %2, align 4
state=0x2858000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41499008
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499008
default offset for target address 0
base memory address 41499008
next instruction:   %22 = load i32, i32* %21, align 4, !dbg !148
state=0x2858a00 memory operation (inside foo) 
  %22 = load i32, i32* %21, align 4, !dbg !148
 address: 42843728
executeMemoryOperation isWrite? 0
address for memop 42843728
default offset for target address 0
base memory address 42843728
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2858000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41499008
executeMemoryOperation isWrite? 0
address for memop 41499008
default offset for target address 0
base memory address 41499008
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %39 = load %struct.data_t*, %struct.data_t** %38, align 8, !dbg !168
state=0x2858500 memory operation (inside foo) 
  %39 = load %struct.data_t*, %struct.data_t** %38, align 8, !dbg !168
 address: 41498792
executeMemoryOperation isWrite? 0
address for memop 41498792
default offset for target address 0
base memory address 41498792
next instruction:   %23 = icmp slt i32 %22, 5, !dbg !149
next instruction:   br i1 %23, label %24, label %27, !dbg !150
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 5
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 5
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
  br i1 %23, label %24, label %27, !dbg !150
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:37
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 5
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 5
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          5))
  br i1 %23, label %24, label %27, !dbg !150
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:37
has high? 0
has low? 1
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %40 = getelementptr inbounds %struct.data_t, %struct.data_t* %39, i32 0, i32 0, !dbg !171
extracting region from 42843728
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %28 = call i32 @loop(i32 5, i32 2), !dbg !155
next instruction:   %41 = load i32, i32* %40, align 4, !dbg !171
state=0x2858500 memory operation (inside foo) 
  %41 = load i32, i32* %40, align 4, !dbg !171
 address: 42843728
executeMemoryOperation isWrite? 0
address for memop 42843728
default offset for target address 0
base memory address 42843728
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2858000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499064
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2858000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499096
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %25 = call i32 @loop(i32 4, i32 2), !dbg !151
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !135
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %42 = icmp eq i32 %41, -1, !dbg !172
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498992
executeMemoryOperation isWrite? 0
address for memop 41498992
default offset for target address 0
base memory address 41498992
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499064
executeMemoryOperation isWrite? 0
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   br i1 %37, label %43, label %50, !dbg !173
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %37, label %43, label %50, !dbg !173
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %37, label %43, label %50, !dbg !173
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %37, label %43, label %50, !dbg !173
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %37, label %43, label %50, !dbg !173
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   br i1 %42, label %51, label %54, !dbg !183
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
  br i1 %42, label %51, label %54, !dbg !183
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:59
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
  br i1 %42, label %51, label %54, !dbg !183
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:59
has high? 0
has low? 1
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %52 = call i32 @loop(i32 8, i32 2), !dbg !185
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499008
executeMemoryOperation isWrite? 0
address for memop 41499008
default offset for target address 0
base memory address 41499008
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499064
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   br i1 %42, label %44, label %47, !dbg !174
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
  br i1 %42, label %44, label %47, !dbg !174
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:49
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
  br i1 %42, label %44, label %47, !dbg !174
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:49
has high? 0
has low? 1
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2859400 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41499208
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %base, i32* %2, align 4
state=0x2859400 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41499152
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %55 = call i32 @loop(i32 9, i32 2), !dbg !190
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2859900 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41499128
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %base, i32* %2, align 4
state=0x2859900 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41498912
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %45 = call i32 @loop(i32 6, i32 2), !dbg !175
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2859900 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499096
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2859400 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41499152
executeMemoryOperation isWrite? 0
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !146
next instruction:   %48 = call i32 @loop(i32 7, i32 2), !dbg !179
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2859400 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499216
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !146
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2858a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41499192
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499192
default offset for target address 0
base memory address 41499192
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2859400 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499344
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2859900 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   br label %4, !dbg !135
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499208
executeMemoryOperation isWrite? 0
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498992
executeMemoryOperation isWrite? 0
address for memop 41498992
default offset for target address 0
base memory address 41498992
next instruction:   store i32 %base, i32* %2, align 4
state=0x2858a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41499664
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499664
default offset for target address 0
base memory address 41499664
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2858a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41499664
executeMemoryOperation isWrite? 0
address for memop 41499664
default offset for target address 0
base memory address 41499664
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2858a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499376
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2859e00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41499424
executeMemoryOperation isWrite? 1
storing value 9
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2858a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499480
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %ru, i32* %1, align 4
state=0x285a300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41499440
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499064
executeMemoryOperation isWrite? 0
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   br label %4, !dbg !135
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2858500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41499496
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499192
executeMemoryOperation isWrite? 0
address for memop 41499192
default offset for target address 0
base memory address 41499192
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %base, i32* %2, align 4
state=0x2859e00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41499448
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499216
executeMemoryOperation isWrite? 0
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   store i32 %base, i32* %2, align 4
state=0x285a300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41499536
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2859e00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x285a300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2859e00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2859900 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2859e00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499152
executeMemoryOperation isWrite? 0
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   br label %4, !dbg !135
next instruction:   store i32 %base, i32* %2, align 4
state=0x2858500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41499576
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499008
executeMemoryOperation isWrite? 0
address for memop 41499008
default offset for target address 0
base memory address 41499008
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !131
state=0x2858500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !131
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499216
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499064
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499376
executeMemoryOperation isWrite? 0
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x285a300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x285a300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %3, i32* %result, align 4, !dbg !132
state=0x2858500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !132
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   br label %4, !dbg !146
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499664
executeMemoryOperation isWrite? 0
address for memop 41499664
default offset for target address 0
base memory address 41499664
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   store i32 0, i32* %i, align 4, !dbg !133
state=0x2858500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !133
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499208
executeMemoryOperation isWrite? 0
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   br label %4, !dbg !135
next instruction:   br label %4, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499096
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499216
executeMemoryOperation isWrite? 0
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499376
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   br label %4, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499152
executeMemoryOperation isWrite? 0
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499216
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498992
executeMemoryOperation isWrite? 0
address for memop 41498992
default offset for target address 0
base memory address 41498992
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499064
executeMemoryOperation isWrite? 0
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499008
executeMemoryOperation isWrite? 0
address for memop 41499008
default offset for target address 0
base memory address 41499008
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499064
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499192
executeMemoryOperation isWrite? 0
address for memop 41499192
default offset for target address 0
base memory address 41499192
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   br label %4, !dbg !146
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br label %4, !dbg !146
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499096
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499208
executeMemoryOperation isWrite? 0
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   br label %4, !dbg !146
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499096
executeMemoryOperation isWrite? 0
address for memop 41499096
default offset for target address 0
base memory address 41499096
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498992
executeMemoryOperation isWrite? 0
address for memop 41498992
default offset for target address 0
base memory address 41498992
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499376
executeMemoryOperation isWrite? 0
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499064
executeMemoryOperation isWrite? 0
address for memop 41499064
default offset for target address 0
base memory address 41499064
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   ret i32 %8, !dbg !147
state :0x2858000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499664
executeMemoryOperation isWrite? 0
address for memop 41499664
default offset for target address 0
base memory address 41499664
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499376
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %16), !dbg !144
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(41498608, 16) at /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:35
next instruction:   store i32 1, i32* %1, align 4, !dbg !145
state=0x2858000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !145
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   br label %60, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2858000 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499216
executeMemoryOperation isWrite? 0
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   ret i32 %61, !dbg !198
state :0x2858000 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499152
executeMemoryOperation isWrite? 0
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !146
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499216
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499192
executeMemoryOperation isWrite? 0
address for memop 41499192
default offset for target address 0
base memory address 41499192
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499208
executeMemoryOperation isWrite? 0
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499376
executeMemoryOperation isWrite? 0
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499216
executeMemoryOperation isWrite? 0
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   br label %4, !dbg !146
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499152
executeMemoryOperation isWrite? 0
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   br label %4, !dbg !146
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499216
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   br label %4, !dbg !146
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499208
executeMemoryOperation isWrite? 0
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499216
executeMemoryOperation isWrite? 0
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499664
executeMemoryOperation isWrite? 0
address for memop 41499664
default offset for target address 0
base memory address 41499664
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499376
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499152
executeMemoryOperation isWrite? 0
address for memop 41499152
default offset for target address 0
base memory address 41499152
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499216
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   br label %4, !dbg !146
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499192
executeMemoryOperation isWrite? 0
address for memop 41499192
default offset for target address 0
base memory address 41499192
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499376
executeMemoryOperation isWrite? 0
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499664
executeMemoryOperation isWrite? 0
address for memop 41499664
default offset for target address 0
base memory address 41499664
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499344
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 512
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499376
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499344
executeMemoryOperation isWrite? 0
address for memop 41499344
default offset for target address 0
base memory address 41499344
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499208
executeMemoryOperation isWrite? 0
address for memop 41499208
default offset for target address 0
base memory address 41499208
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499480
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499216
executeMemoryOperation isWrite? 0
address for memop 41499216
default offset for target address 0
base memory address 41499216
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499480
executeMemoryOperation isWrite? 0
address for memop 41499480
default offset for target address 0
base memory address 41499480
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499192
executeMemoryOperation isWrite? 0
address for memop 41499192
default offset for target address 0
base memory address 41499192
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499376
executeMemoryOperation isWrite? 0
address for memop 41499376
default offset for target address 0
base memory address 41499376
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   ret i32 %8, !dbg !147
state :0x2859400 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %28), !dbg !157
treating as external function: printf
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   ret i32 %8, !dbg !147
state :0x2858a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %25), !dbg !153
treating as external function: printf
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   store i32 1, i32* %1, align 4, !dbg !158
state=0x2859400 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !158
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 1, i32* %1, align 4, !dbg !154
state=0x2858a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !154
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   br label %60, !dbg !154
next instruction:   br label %60, !dbg !158
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2859400 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   br label %4, !dbg !146
next instruction:   ret i32 %61, !dbg !198
state :0x2859400 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2858a00 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   ret i32 %61, !dbg !198
state :0x2858a00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 9
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !146
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498968
executeMemoryOperation isWrite? 0
address for memop 41498968
default offset for target address 0
base memory address 41498968
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499048
executeMemoryOperation isWrite? 1
storing value 2048
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   br label %4, !dbg !146
next instruction:   br label %4, !dbg !146
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41498896
executeMemoryOperation isWrite? 1
storing value 10
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   br label %4, !dbg !146
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41498896
executeMemoryOperation isWrite? 0
address for memop 41498896
default offset for target address 0
base memory address 41498896
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   br label %4, !dbg !146
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41498536
executeMemoryOperation isWrite? 0
address for memop 41498536
default offset for target address 0
base memory address 41498536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499048
executeMemoryOperation isWrite? 0
address for memop 41499048
default offset for target address 0
base memory address 41499048
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   br label %4, !dbg !146
next instruction:   ret i32 %8, !dbg !147
state :0x2858f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %58), !dbg !196
treating as external function: printf
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   store i32 1, i32* %1, align 4, !dbg !197
state=0x2858f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !197
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   br label %4, !dbg !146
next instruction:   br label %60, !dbg !197
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2858f00 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   ret i32 %61, !dbg !198
state :0x2858f00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   br label %4, !dbg !146
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   br label %4, !dbg !146
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   br label %4, !dbg !146
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2858500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499576
executeMemoryOperation isWrite? 0
address for memop 41499576
default offset for target address 0
base memory address 41499576
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2858500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499512
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2858500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499616
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   br label %4, !dbg !146
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   br label %4, !dbg !146
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2858500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499616
executeMemoryOperation isWrite? 0
address for memop 41499616
default offset for target address 0
base memory address 41499616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2858500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499496
executeMemoryOperation isWrite? 0
address for memop 41499496
default offset for target address 0
base memory address 41499496
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2858500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499512
executeMemoryOperation isWrite? 0
address for memop 41499512
default offset for target address 0
base memory address 41499512
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   ret i32 %8, !dbg !147
state :0x2858500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %45), !dbg !177
treating as external function: printf
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 1, i32* %1, align 4, !dbg !178
state=0x2858500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !178
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   br label %60, !dbg !178
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2858500 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   ret i32 %61, !dbg !198
state :0x2858500 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
16
64
32
2048
128
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   br label %4, !dbg !146
next instruction:   br label %4, !dbg !146
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   br label %4, !dbg !146
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 512
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x285a300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499536
executeMemoryOperation isWrite? 0
address for memop 41499536
default offset for target address 0
base memory address 41499536
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41498912
executeMemoryOperation isWrite? 0
address for memop 41498912
default offset for target address 0
base memory address 41498912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x285a300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499472
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x285a300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499560
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   br label %4, !dbg !146
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x285a300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499560
executeMemoryOperation isWrite? 0
address for memop 41499560
default offset for target address 0
base memory address 41499560
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x285a300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499440
executeMemoryOperation isWrite? 0
address for memop 41499440
default offset for target address 0
base memory address 41499440
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499392
executeMemoryOperation isWrite? 1
storing value 512
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499416
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x285a300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499472
executeMemoryOperation isWrite? 0
address for memop 41499472
default offset for target address 0
base memory address 41499472
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   br label %4, !dbg !146
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499416
executeMemoryOperation isWrite? 0
address for memop 41499416
default offset for target address 0
base memory address 41499416
next instruction:   ret i32 %8, !dbg !147
state :0x285a300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499128
executeMemoryOperation isWrite? 0
address for memop 41499128
default offset for target address 0
base memory address 41499128
next instruction:   %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %48), !dbg !181
treating as external function: printf
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !142
state=0x2859e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !142
 address: 41499448
executeMemoryOperation isWrite? 0
address for memop 41499448
default offset for target address 0
base memory address 41499448
next instruction:   store i32 1, i32* %1, align 4, !dbg !182
state=0x285a300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !182
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !144
state=0x2859e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !144
 address: 41499520
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %13 = add nsw i32 %12, 1, !dbg !145
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499392
executeMemoryOperation isWrite? 0
address for memop 41499392
default offset for target address 0
base memory address 41499392
next instruction:   br label %60, !dbg !182
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x285a300 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   ret i32 %61, !dbg !198
state :0x285a300 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !145
state=0x2859e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !145
 address: 41499600
executeMemoryOperation isWrite? 1
storing value 9
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   br label %4, !dbg !146
next instruction:   ret i32 %8, !dbg !147
state :0x2859900 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !136
state=0x2859e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !136
 address: 41499600
executeMemoryOperation isWrite? 0
address for memop 41499600
default offset for target address 0
base memory address 41499600
next instruction:   %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %52), !dbg !188
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !189
state=0x2859900 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !189
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   br label %60, !dbg !189
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2859900 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !138
state=0x2859e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !138
 address: 41499424
executeMemoryOperation isWrite? 0
address for memop 41499424
default offset for target address 0
base memory address 41499424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !140
state=0x2859e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !140
 address: 41499520
executeMemoryOperation isWrite? 0
address for memop 41499520
default offset for target address 0
base memory address 41499520
next instruction:   br i1 %7, label %9, label %14, !dbg !141
next instruction:   ret i32 %61, !dbg !198
state :0x2859900 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   ret i32 %8, !dbg !147
state :0x2859e00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %55), !dbg !192
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !193
state=0x2859e00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !193
 address: 41498816
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   br label %60, !dbg !193
next instruction:   %61 = load i32, i32* %1, align 4, !dbg !198
state=0x2859e00 memory operation (inside foo) 
  %61 = load i32, i32* %1, align 4, !dbg !198
 address: 41498816
executeMemoryOperation isWrite? 0
address for memop 41498816
default offset for target address 0
base memory address 41498816
next instruction:   ret i32 %61, !dbg !198
state :0x2859e00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
256
512
1024
Size of rdmap : 15

===============
Found Violation at : 
diff : 24
Instruction:
  %33 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !163

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48

[ (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
(And (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 124 , 124 ]

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 148 , 148 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:59
  br i1 %42, label %51, label %54, !dbg !183

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:49
  br i1 %42, label %44, label %47, !dbg !174

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %33 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !163

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48

[ (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 foo_arg_0_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 136 , 136 ]

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 foo_arg_0_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:59
  br i1 %42, label %51, label %54, !dbg !183

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:49
  br i1 %42, label %44, label %47, !dbg !174

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

===============

===============
Found Violation at : 
diff : 66
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1))
           (Slt N0 5))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 94 , 94 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 54
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 106 , 106 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 84
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 60
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 136 , 136 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 136 , 136 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 160 , 160 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 48
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 124 , 124 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 124 , 124 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 148 , 148 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 84
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 160 , 160 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 72
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 148 , 148 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:47
  %31 = icmp slt i32 %12, 0, !dbg !159

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:33
  %14 = icmp slt i32 %12, 1, !dbg !140

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:48
	=====================

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test5/test5.c:32
	=====================

>>>> Found violations at  : 2 locations.
Info Flow Summary for function 
all high sym regions: 
foo_arg_1_0
offset=0, size=32
all low sym regions: 
foo_arg_0_0
offset=0, size=32
return_value
offset=0, size=32
 Code loc with leaks:

KLEE: done: #Timing Side Channel  Locs = 2
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 76
KLEE: done: maxInst = 161
KLEE: done: HAncestors = 2
KLEE: done: HLeaksOnStack = 0
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 840
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
Lazy initialization is ON 
lazy single spec file? 
 low function foo arg 0
 high function foo arg 1
