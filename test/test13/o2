KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test13/klee-out-0"
KLEE: Using STP solver backend
Uncov init=821
Couldn't open file 
Using cache line mode (as default)!
KLEE: WARNING: undefined reference to function: printf
arg 0 type %struct.mytest count=20
Symbolizing arg 0 of foo, address 67756272 size=240
is arg 0 type %struct.mytest* single instance? 0
to be made symbolic? 1
clearing foo_arg_0_0 from high
high security regions from type def
0,32
setting symbolic region high: foo_arg_0_0
High symbolic regions:
foo_arg_0_0
Low symbolic regions:
foo_arg_0_0
Registering publicOutputReturningFName as foo
clearing return_value from high
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca %struct.mytest*, align 8
Alloc size: 8 or 8 vs MAX: 10240 0
adjusted alloc size: 8
next instruction:   store %struct.mytest* %t, %struct.mytest** %2, align 8
reached foo
state=0x4146000 memory operation (inside foo) 
  store %struct.mytest* %t, %struct.mytest** %2, align 8
 address: 67623016
executeMemoryOperation isWrite? 1
storing value 67756272
address for memop 67623016
default offset for target address 0
base memory address 67623016
next instruction:   %3 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !127
state=0x4146000 memory operation (inside foo) 
  %3 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !127
 address: 67623016
executeMemoryOperation isWrite? 0
address for memop 67623016
default offset for target address 0
base memory address 67623016
next instruction:   %4 = getelementptr inbounds %struct.mytest, %struct.mytest* %3, i32 0, i32 2, !dbg !129
extracting region from 8
extracting region from 67756280
next instruction:   %5 = load i32, i32* %4, align 4, !dbg !129
state=0x4146000 memory operation (inside foo) 
  %5 = load i32, i32* %4, align 4, !dbg !129
 address: 67756280
executeMemoryOperation isWrite? 0
address for memop 67756280
default offset for target address 8
base memory address 67756272
next instruction:   %6 = icmp sgt i32 %5, 0, !dbg !130
next instruction:   %7 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !131
state=0x4146000 memory operation (inside foo) 
  %7 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !131
 address: 67623016
executeMemoryOperation isWrite? 0
address for memop 67623016
default offset for target address 0
base memory address 67623016
next instruction:   %8 = getelementptr inbounds %struct.mytest, %struct.mytest* %7, i32 0, i32 1, !dbg !134
extracting region from 4
extracting region from 67756276
next instruction:   %9 = load i32, i32* %8, align 4, !dbg !134
state=0x4146000 memory operation (inside foo) 
  %9 = load i32, i32* %8, align 4, !dbg !134
 address: 67756276
executeMemoryOperation isWrite? 0
address for memop 67756276
default offset for target address 4
base memory address 67756272
next instruction:   br i1 %6, label %10, label %26, !dbg !135
extracting region from (Slt 0
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 0
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 0,31 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 0,31 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 0,31 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 0,31 AND 64,71
read expr range: 64,8
extracting region from (Slt 0
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 0
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Slt 0
      (ReadLSB w32 8 foo_arg_0_0))
  br i1 %6, label %10, label %26, !dbg !135
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:26
has high? 0
has low? 0
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 8 foo_arg_0_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 0
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 0,31 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 0,31 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 0,31 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 0,31 AND 64,71
read expr range: 64,8
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 8 foo_arg_0_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 0
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Eq false
     (Slt 0
          (ReadLSB w32 8 foo_arg_0_0)))
  br i1 %6, label %10, label %26, !dbg !135
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:26
has high? 0
has low? 0
next instruction:   %27 = icmp slt i32 %9, 0, !dbg !158
next instruction:   br i1 %27, label %28, label %51, !dbg !161
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from 0
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 0
expr has high=0 32,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 4 foo_arg_0_0)
      0)
  br i1 %27, label %28, label %51, !dbg !161
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:41
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from 0
extracting region from (Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 0
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          0))
  br i1 %27, label %28, label %51, !dbg !161
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:41
has high? 0
has low? 1
next instruction:   %11 = icmp slt i32 %9, 1, !dbg !136
next instruction:   %29 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !162
state=0x4146500 memory operation (inside foo) 
  %29 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !162
 address: 67623016
executeMemoryOperation isWrite? 0
address for memop 67623016
default offset for target address 0
base memory address 67623016
next instruction:   br i1 %11, label %12, label %15, !dbg !137
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from 1
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 1
expr has high=0 32,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 4 foo_arg_0_0)
      1)
  br i1 %11, label %12, label %15, !dbg !137
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:27
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 1
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          1))
  br i1 %11, label %12, label %15, !dbg !137
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:27
has high? 0
has low? 1
next instruction:   %13 = call i32 @loop(i32 3, i32 2), !dbg !138
next instruction:   %52 = call i32 @loop(i32 10, i32 2), !dbg !197
next instruction:   %16 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !143
state=0x4146f00 memory operation (inside foo) 
  %16 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !143
 address: 67623016
executeMemoryOperation isWrite? 0
address for memop 67623016
default offset for target address 0
base memory address 67623016
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %30 = getelementptr inbounds %struct.mytest, %struct.mytest* %29, i32 0, i32 2, !dbg !165
extracting region from 8
extracting region from 67756280
next instruction:   %17 = getelementptr inbounds %struct.mytest, %struct.mytest* %16, i32 0, i32 1, !dbg !145
extracting region from 4
extracting region from 67756276
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %18 = load i32, i32* %17, align 4, !dbg !145
state=0x4146f00 memory operation (inside foo) 
  %18 = load i32, i32* %17, align 4, !dbg !145
 address: 67756276
executeMemoryOperation isWrite? 0
address for memop 67756276
default offset for target address 4
base memory address 67756272
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %19 = icmp slt i32 %18, 5, !dbg !146
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %19, label %20, label %23, !dbg !147
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from 5
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 5
expr has high=0 32,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 4 foo_arg_0_0)
      5)
  br i1 %19, label %20, label %23, !dbg !147
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:31
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from 5
extracting region from (Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 5
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 4 foo_arg_0_0)
          5))
  br i1 %19, label %20, label %23, !dbg !147
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:31
has high? 0
has low? 1
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x4146a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623232
executeMemoryOperation isWrite? 1
storing value 10
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %24 = call i32 @loop(i32 5, i32 2), !dbg !153
next instruction:   %21 = call i32 @loop(i32 4, i32 2), !dbg !148
next instruction:   store i32 %base, i32* %2, align 4
state=0x4146a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623216
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %31 = load i32, i32* %30, align 4, !dbg !165
state=0x4146500 memory operation (inside foo) 
  %31 = load i32, i32* %30, align 4, !dbg !165
 address: 67756280
executeMemoryOperation isWrite? 0
address for memop 67756280
default offset for target address 8
base memory address 67756272
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4146000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67622808
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67622808
default offset for target address 0
base memory address 67622808
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x4146000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623152
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623152
default offset for target address 0
base memory address 67623152
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4146a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4146a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4146a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   br label %4, !dbg !131
next instruction:   %32 = icmp sgt i32 %31, -10, !dbg !166
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4146000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623152
executeMemoryOperation isWrite? 0
address for memop 67623152
default offset for target address 0
base memory address 67623152
next instruction:   %33 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !167
state=0x4146500 memory operation (inside foo) 
  %33 = load %struct.mytest*, %struct.mytest** %2, align 8, !dbg !167
 address: 67623016
executeMemoryOperation isWrite? 0
address for memop 67623016
default offset for target address 0
base memory address 67623016
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %34 = getelementptr inbounds %struct.mytest, %struct.mytest* %33, i32 0, i32 1, !dbg !170
extracting region from 4
extracting region from 67756276
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %35 = load i32, i32* %34, align 4, !dbg !170
state=0x4146500 memory operation (inside foo) 
  %35 = load i32, i32* %34, align 4, !dbg !170
 address: 67756276
executeMemoryOperation isWrite? 0
address for memop 67756276
default offset for target address 4
base memory address 67756272
next instruction:   %36 = icmp eq i32 %35, -1, !dbg !171
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %32, label %37, label %44, !dbg !172
extracting region from (Slt 4294967286
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 0,31 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 0,31 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 0,31 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 0,31 AND 64,71
read expr range: 64,8
extracting region from (Slt 4294967286
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Slt 4294967286
      (ReadLSB w32 8 foo_arg_0_0))
  br i1 %32, label %37, label %44, !dbg !172
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:42
has high? 0
has low? 0
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 foo_arg_0_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 0,31 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 0,31 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 0,31 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 0,31 AND 64,71
read expr range: 64,8
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 foo_arg_0_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 8 foo_arg_0_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 foo_arg_0_0)
extracting region from (Read w8 11 foo_arg_0_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 foo_arg_0_0)
extracting region from (Read w8 10 foo_arg_0_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 foo_arg_0_0)
extracting region from (Read w8 9 foo_arg_0_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 foo_arg_0_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Eq false
     (Slt 4294967286
          (ReadLSB w32 8 foo_arg_0_0)))
  br i1 %32, label %37, label %44, !dbg !172
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:42
has high? 0
has low? 0
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br i1 %36, label %45, label %48, !dbg !184
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
  br i1 %36, label %45, label %48, !dbg !184
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:53
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 4 foo_arg_0_0)))
  br i1 %36, label %45, label %48, !dbg !184
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:53
has high? 0
has low? 1
next instruction:   br i1 %36, label %38, label %41, !dbg !173
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
  br i1 %36, label %38, label %41, !dbg !173
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:43
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 0,31 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 0,31 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 0,31 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 0,31 AND 32,39
read expr range: 32,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 foo_arg_0_0)
extracting region from (Read w8 7 foo_arg_0_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 foo_arg_0_0)
extracting region from (Read w8 6 foo_arg_0_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 foo_arg_0_0)
extracting region from (Read w8 5 foo_arg_0_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 foo_arg_0_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 4 foo_arg_0_0)))
  br i1 %36, label %38, label %41, !dbg !173
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:43
has high? 0
has low? 1
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4146000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623368
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %49 = call i32 @loop(i32 9, i32 2), !dbg !192
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4146000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623440
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4146f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623416
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623416
default offset for target address 0
base memory address 67623416
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !131
next instruction:   %39 = call i32 @loop(i32 6, i32 2), !dbg !174
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %42 = call i32 @loop(i32 7, i32 2), !dbg !179
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x4146f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623344
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623344
default offset for target address 0
base memory address 67623344
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4147e00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623784
executeMemoryOperation isWrite? 1
storing value 9
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4146f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623344
executeMemoryOperation isWrite? 0
address for memop 67623344
default offset for target address 0
base memory address 67623344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67622808
executeMemoryOperation isWrite? 0
address for memop 67622808
default offset for target address 0
base memory address 67622808
next instruction:   %46 = call i32 @loop(i32 8, i32 2), !dbg !186
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4147400 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623328
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623368
executeMemoryOperation isWrite? 0
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4146f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623376
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   store i32 %base, i32* %2, align 4
state=0x4147400 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623384
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4146f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623496
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4147400 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623384
executeMemoryOperation isWrite? 0
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   br label %4, !dbg !131
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x4147e00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623776
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4147e00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4147e00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623152
executeMemoryOperation isWrite? 0
address for memop 67623152
default offset for target address 0
base memory address 67623152
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4147900 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623656
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %base, i32* %2, align 4
state=0x4147900 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623608
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623368
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623416
executeMemoryOperation isWrite? 0
address for memop 67623416
default offset for target address 0
base memory address 67623416
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4147400 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623816
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4147e00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4147400 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623696
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623376
executeMemoryOperation isWrite? 0
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623344
executeMemoryOperation isWrite? 0
address for memop 67623344
default offset for target address 0
base memory address 67623344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br label %4, !dbg !131
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4146500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623728
executeMemoryOperation isWrite? 1
storing value 6
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   store i32 %base, i32* %2, align 4
state=0x4146500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623680
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623440
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br label %4, !dbg !144
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4146500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %ru, i32* %1, align 4
state=0x4148300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 67623632
executeMemoryOperation isWrite? 1
storing value 7
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623376
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67622808
executeMemoryOperation isWrite? 0
address for memop 67622808
default offset for target address 0
base memory address 67622808
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4146500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   store i32 %base, i32* %2, align 4
state=0x4148300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 67623568
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4148300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4148300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4148300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623368
executeMemoryOperation isWrite? 0
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br label %4, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623328
executeMemoryOperation isWrite? 0
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4146500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x4147900 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x4147900 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   br label %4, !dbg !144
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x4147900 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623816
executeMemoryOperation isWrite? 0
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   br label %4, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623416
executeMemoryOperation isWrite? 0
address for memop 67623416
default offset for target address 0
base memory address 67623416
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623152
executeMemoryOperation isWrite? 0
address for memop 67623152
default offset for target address 0
base memory address 67623152
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623384
executeMemoryOperation isWrite? 0
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623376
executeMemoryOperation isWrite? 0
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623368
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   br label %4, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623344
executeMemoryOperation isWrite? 0
address for memop 67623344
default offset for target address 0
base memory address 67623344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623376
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623816
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623440
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br label %4, !dbg !144
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br label %4, !dbg !144
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67622808
executeMemoryOperation isWrite? 0
address for memop 67622808
default offset for target address 0
base memory address 67622808
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623328
executeMemoryOperation isWrite? 0
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br label %4, !dbg !144
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br label %4, !dbg !144
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623816
executeMemoryOperation isWrite? 0
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623368
executeMemoryOperation isWrite? 0
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623152
executeMemoryOperation isWrite? 0
address for memop 67623152
default offset for target address 0
base memory address 67623152
next instruction:   br label %4, !dbg !144
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623416
executeMemoryOperation isWrite? 0
address for memop 67623416
default offset for target address 0
base memory address 67623416
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623368
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623384
executeMemoryOperation isWrite? 0
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623440
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br label %4, !dbg !144
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623440
executeMemoryOperation isWrite? 0
address for memop 67623440
default offset for target address 0
base memory address 67623440
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67622808
executeMemoryOperation isWrite? 0
address for memop 67622808
default offset for target address 0
base memory address 67622808
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br label %4, !dbg !144
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623376
executeMemoryOperation isWrite? 0
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623816
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623344
executeMemoryOperation isWrite? 0
address for memop 67623344
default offset for target address 0
base memory address 67623344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623368
executeMemoryOperation isWrite? 0
address for memop 67623368
default offset for target address 0
base memory address 67623368
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   ret i32 %8, !dbg !145
state :0x4146000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %13), !dbg !140
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(67622864, 16) at /home/tuba/Documents/tools/pmguidedsymex/test/test13/test13.c:29
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 1, i32* %1, align 4, !dbg !142
state=0x4146000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !142
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   br label %54, !dbg !142
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4146000 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   ret i32 %55, !dbg !202
state :0x4146000 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623328
executeMemoryOperation isWrite? 0
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623376
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623816
executeMemoryOperation isWrite? 0
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623384
executeMemoryOperation isWrite? 0
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 64
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623816
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623416
executeMemoryOperation isWrite? 0
address for memop 67623416
default offset for target address 0
base memory address 67623416
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623376
executeMemoryOperation isWrite? 0
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623344
executeMemoryOperation isWrite? 0
address for memop 67623344
default offset for target address 0
base memory address 67623344
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   br label %4, !dbg !144
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623376
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br label %4, !dbg !144
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623496
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   br label %4, !dbg !144
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623328
executeMemoryOperation isWrite? 0
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623496
executeMemoryOperation isWrite? 0
address for memop 67623496
default offset for target address 0
base memory address 67623496
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623416
executeMemoryOperation isWrite? 0
address for memop 67623416
default offset for target address 0
base memory address 67623416
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623376
executeMemoryOperation isWrite? 0
address for memop 67623376
default offset for target address 0
base memory address 67623376
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623816
executeMemoryOperation isWrite? 0
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623384
executeMemoryOperation isWrite? 0
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623816
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   ret i32 %8, !dbg !145
state :0x4146f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 128
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %21), !dbg !150
treating as external function: printf
next instruction:   br label %4, !dbg !144
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   br label %4, !dbg !144
next instruction:   store i32 1, i32* %1, align 4, !dbg !152
state=0x4146f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !152
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623328
executeMemoryOperation isWrite? 0
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   br label %54, !dbg !152
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 6
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   br label %4, !dbg !144
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4146f00 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623816
executeMemoryOperation isWrite? 0
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   ret i32 %55, !dbg !202
state :0x4146f00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623384
executeMemoryOperation isWrite? 0
address for memop 67623384
default offset for target address 0
base memory address 67623384
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623816
executeMemoryOperation isWrite? 1
storing value 64
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623696
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623696
executeMemoryOperation isWrite? 0
address for memop 67623696
default offset for target address 0
base memory address 67623696
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623328
executeMemoryOperation isWrite? 0
address for memop 67623328
default offset for target address 0
base memory address 67623328
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br label %4, !dbg !144
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623816
executeMemoryOperation isWrite? 0
address for memop 67623816
default offset for target address 0
base memory address 67623816
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   ret i32 %8, !dbg !145
state :0x4147400 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %24), !dbg !155
treating as external function: printf
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   store i32 1, i32* %1, align 4, !dbg !157
state=0x4147400 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !157
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   br label %54, !dbg !157
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4147400 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   ret i32 %55, !dbg !202
state :0x4147400 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 256
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br label %4, !dbg !144
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 7
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   br label %4, !dbg !144
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 512
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 2
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   br label %4, !dbg !144
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br label %4, !dbg !144
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   br label %4, !dbg !144
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 9
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   br label %4, !dbg !144
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623216
executeMemoryOperation isWrite? 0
address for memop 67623216
default offset for target address 0
base memory address 67623216
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623256
executeMemoryOperation isWrite? 1
storing value 2048
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 16
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623280
executeMemoryOperation isWrite? 1
storing value 10
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br label %4, !dbg !144
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623280
executeMemoryOperation isWrite? 0
address for memop 67623280
default offset for target address 0
base memory address 67623280
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623232
executeMemoryOperation isWrite? 0
address for memop 67623232
default offset for target address 0
base memory address 67623232
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 3
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623256
executeMemoryOperation isWrite? 0
address for memop 67623256
default offset for target address 0
base memory address 67623256
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   ret i32 %8, !dbg !145
state :0x4146a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !144
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %52), !dbg !199
treating as external function: printf
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 1, i32* %1, align 4, !dbg !201
state=0x4146a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !201
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   br label %54, !dbg !201
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4146a00 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   ret i32 %55, !dbg !202
state :0x4146a00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 64
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 32
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br label %4, !dbg !144
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 4
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 64
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br label %4, !dbg !144
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 64
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br label %4, !dbg !144
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 128
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 64
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4146500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623680
executeMemoryOperation isWrite? 0
address for memop 67623680
default offset for target address 0
base memory address 67623680
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4146500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623704
executeMemoryOperation isWrite? 1
storing value 128
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 6
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 5
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4146500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623432
executeMemoryOperation isWrite? 1
storing value 6
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 128
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   br label %4, !dbg !144
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   br label %4, !dbg !144
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 6
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4146500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623432
executeMemoryOperation isWrite? 0
address for memop 67623432
default offset for target address 0
base memory address 67623432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4146500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623728
executeMemoryOperation isWrite? 0
address for memop 67623728
default offset for target address 0
base memory address 67623728
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br label %4, !dbg !144
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4146500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623704
executeMemoryOperation isWrite? 0
address for memop 67623704
default offset for target address 0
base memory address 67623704
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 256
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   ret i32 %8, !dbg !145
state :0x4146500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %39), !dbg !176
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !178
state=0x4146500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !178
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 128
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   br label %54, !dbg !178
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4146500 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   ret i32 %55, !dbg !202
state :0x4146500 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
16
32
64
2048
128
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 7
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br label %4, !dbg !144
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 6
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   br label %4, !dbg !144
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4148300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623568
executeMemoryOperation isWrite? 0
address for memop 67623568
default offset for target address 0
base memory address 67623568
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4148300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623616
executeMemoryOperation isWrite? 1
storing value 256
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4148300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623504
executeMemoryOperation isWrite? 1
storing value 7
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4148300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623504
executeMemoryOperation isWrite? 0
address for memop 67623504
default offset for target address 0
base memory address 67623504
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4148300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623632
executeMemoryOperation isWrite? 0
address for memop 67623632
default offset for target address 0
base memory address 67623632
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4148300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623616
executeMemoryOperation isWrite? 0
address for memop 67623616
default offset for target address 0
base memory address 67623616
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 512
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   ret i32 %8, !dbg !145
state :0x4148300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %42), !dbg !181
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !183
state=0x4148300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !183
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   br label %4, !dbg !144
next instruction:   br label %54, !dbg !183
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 256
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4148300 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   ret i32 %55, !dbg !202
state :0x4148300 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 7
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   br label %4, !dbg !144
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623776
executeMemoryOperation isWrite? 0
address for memop 67623776
default offset for target address 0
base memory address 67623776
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623736
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !139
state=0x4147900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !139
 address: 67623608
executeMemoryOperation isWrite? 0
address for memop 67623608
default offset for target address 0
base memory address 67623608
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !140
next instruction:   store i32 %11, i32* %result, align 4, !dbg !141
state=0x4147900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !141
 address: 67623640
executeMemoryOperation isWrite? 1
storing value 512
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %13 = add nsw i32 %12, 1, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623584
executeMemoryOperation isWrite? 1
storing value 8
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623584
executeMemoryOperation isWrite? 0
address for memop 67623584
default offset for target address 0
base memory address 67623584
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623656
executeMemoryOperation isWrite? 0
address for memop 67623656
default offset for target address 0
base memory address 67623656
next instruction:   store i32 %13, i32* %i, align 4, !dbg !142
state=0x4147e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !142
 address: 67623792
executeMemoryOperation isWrite? 1
storing value 9
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   br label %4, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x4147e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 67623792
executeMemoryOperation isWrite? 0
address for memop 67623792
default offset for target address 0
base memory address 67623792
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !135
state=0x4147e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !135
 address: 67623784
executeMemoryOperation isWrite? 0
address for memop 67623784
default offset for target address 0
base memory address 67623784
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623736
executeMemoryOperation isWrite? 0
address for memop 67623736
default offset for target address 0
base memory address 67623736
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !137
state=0x4147900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !137
 address: 67623640
executeMemoryOperation isWrite? 0
address for memop 67623640
default offset for target address 0
base memory address 67623640
next instruction:   ret i32 %8, !dbg !145
state :0x4147e00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %49), !dbg !194
treating as external function: printf
next instruction:   br i1 %7, label %9, label %14, !dbg !138
next instruction:   store i32 1, i32* %1, align 4, !dbg !196
state=0x4147e00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !196
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   ret i32 %8, !dbg !145
state :0x4147900 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %46), !dbg !189
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !191
state=0x4147900 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !191
 address: 67623064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   br label %54, !dbg !191
next instruction:   br label %54, !dbg !196
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4147e00 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   ret i32 %55, !dbg !202
state :0x4147e00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
next instruction:   %55 = load i32, i32* %1, align 4, !dbg !202
state=0x4147900 memory operation (inside foo) 
  %55 = load i32, i32* %1, align 4, !dbg !202
 address: 67623064
executeMemoryOperation isWrite? 0
address for memop 67623064
default offset for target address 0
base memory address 67623064
next instruction:   ret i32 %55, !dbg !202
state :0x4147900 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
checking done
256
1024
512
Size of rdmap : 15




>>>> Listing violations :  

>>>> Found violations at  : 0 locations.
Info Flow Summary for function 
all high sym regions: 
foo_arg_0_0
offset=0, size=32
all low sym regions: 
foo_arg_0_0
offset=32, size=32
return_value
offset=0, size=32
 Code loc with leaks:

KLEE: done: #Timing Side Channel  Locs = 0
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 70
KLEE: done: maxInst = 155
KLEE: done: HAncestors = 0
KLEE: done: HLeaksOnStack = 0
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 831
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
Lazy initialization is ON 
lazy single spec file? 
 mixed function foo arg 0
