KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test14/klee-out-4"
KLEE: Using STP solver backend
Uncov init=816
Couldn't open file 
input function: bar
Using cache line mode (as default)!
KLEE: WARNING: undefined reference to function: bar
KLEE: WARNING: undefined reference to function: printf
High symbolic regions:
Low symbolic regions:
Registering publicOutputReturningFName as foo
clearing return_value from high
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %t = alloca %struct.mytest, align 4
Alloc size: 12 or 12 vs MAX: 10240 0
adjusted alloc size: 12
next instruction:   call void @bar(%struct.mytest* %t), !dbg !121
treating as external function: bar
KLEE: WARNING ONCE: calling external: bar(55766640) at /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:30
Handling functions with sensitive args bar
handling arg 0 55766640
cexpr: 0x3651fe0
width: 64
mob: 0x3666020
width: 64
0x35e2000 calling setSymRegionSensitive from OnCall 2bar for arg 0
clearing bar_0 from high
calling setHighSym from setSymRegionSensitive for bar
setting symbolic region high: bar_0
checking bar to see if an input function
next instruction:   %2 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 2, !dbg !122
extracting region from 8
extracting region from 55766648
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
reached foo
state=0x35e2000 memory operation (inside foo) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 55766648
executeMemoryOperation isWrite? 0
address for memop 55766648
default offset for target address 8
base memory address 55766640
next instruction:   %4 = icmp sgt i32 %3, 0, !dbg !124
next instruction:   %5 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 1, !dbg !125
extracting region from 4
extracting region from 55766644
next instruction:   %6 = load i32, i32* %5, align 4, !dbg !125
state=0x35e2000 memory operation (inside foo) 
  %6 = load i32, i32* %5, align 4, !dbg !125
 address: 55766644
executeMemoryOperation isWrite? 0
address for memop 55766644
default offset for target address 4
base memory address 55766640
next instruction:   br i1 %4, label %7, label %22, !dbg !128
extracting region from (Slt 0
      (ReadLSB w32 8 bar_0))
extracting region from 0
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 64,95 AND 88,95
ranges intersect: 64,95 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 64,95 AND 80,87
ranges intersect: 64,95 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 64,95 AND 72,79
ranges intersect: 64,95 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 64,95 AND 64,71
ranges intersect: 64,95 AND 64,71
read expr range: 64,8
expr has high=1 64,32
extracting region from (Slt 0
      (ReadLSB w32 8 bar_0))
extracting region from 0
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Slt 0
      (ReadLSB w32 8 bar_0))
  br i1 %4, label %7, label %22, !dbg !128
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:30
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 0
      (ReadLSB w32 8 bar_0))
  br i1 %4, label %7, label %22, !dbg !128
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:30
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 8 bar_0))
extracting region from 0
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 64,95 AND 88,95
ranges intersect: 64,95 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 64,95 AND 80,87
ranges intersect: 64,95 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 64,95 AND 72,79
ranges intersect: 64,95 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 64,95 AND 64,71
ranges intersect: 64,95 AND 64,71
read expr range: 64,8
expr has high=1 64,32
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 8 bar_0))
extracting region from 0
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
  br i1 %4, label %7, label %22, !dbg !128
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:30
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
  br i1 %4, label %7, label %22, !dbg !128
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:30
next instruction:   %8 = icmp slt i32 %6, 1, !dbg !129
next instruction:   %23 = icmp slt i32 %6, 0, !dbg !150
next instruction:   br i1 %23, label %24, label %45, !dbg !153
extracting region from (Slt (ReadLSB w32 4 bar_0)
      0)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from 0
extracting region from (Slt (ReadLSB w32 4 bar_0)
      0)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 0
expr has high=0 32,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 4 bar_0)
      0)
  br i1 %23, label %24, label %45, !dbg !153
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 bar_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 bar_0)
      0)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from 0
extracting region from (Eq false
     (Slt (ReadLSB w32 4 bar_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 bar_0)
      0)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 0
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 4 bar_0)
          0))
  br i1 %23, label %24, label %45, !dbg !153
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
has high? 0
has low? 1
next instruction:   br i1 %8, label %9, label %12, !dbg !130
extracting region from (Slt (ReadLSB w32 4 bar_0)
      1)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from 1
extracting region from (Slt (ReadLSB w32 4 bar_0)
      1)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 1
expr has high=0 32,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 4 bar_0)
      1)
  br i1 %8, label %9, label %12, !dbg !130
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 bar_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 bar_0)
      1)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 bar_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 bar_0)
      1)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 1
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 4 bar_0)
          1))
  br i1 %8, label %9, label %12, !dbg !130
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
has high? 0
has low? 1
next instruction:   %46 = call i32 @loop(i32 10, i32 2), !dbg !187
next instruction:   %13 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 1, !dbg !136
extracting region from 4
extracting region from 55766644
next instruction:   %10 = call i32 @loop(i32 3, i32 2), !dbg !131
next instruction:   %25 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 2, !dbg !154
extracting region from 8
extracting region from 55766648
next instruction:   %26 = load i32, i32* %25, align 4, !dbg !154
state=0x35e2500 memory operation (inside foo) 
  %26 = load i32, i32* %25, align 4, !dbg !154
 address: 55766648
executeMemoryOperation isWrite? 0
address for memop 55766648
default offset for target address 8
base memory address 55766640
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %14 = load i32, i32* %13, align 4, !dbg !136
state=0x35e2f00 memory operation (inside foo) 
  %14 = load i32, i32* %13, align 4, !dbg !136
 address: 55766644
executeMemoryOperation isWrite? 0
address for memop 55766644
default offset for target address 4
base memory address 55766640
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %15 = icmp slt i32 %14, 5, !dbg !138
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %27 = icmp sgt i32 %26, -10, !dbg !157
next instruction:   br i1 %15, label %16, label %19, !dbg !139
extracting region from (Slt (ReadLSB w32 4 bar_0)
      5)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from 5
extracting region from (Slt (ReadLSB w32 4 bar_0)
      5)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 5
expr has high=0 32,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 4 bar_0)
      5)
  br i1 %15, label %16, label %19, !dbg !139
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:35
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 4 bar_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 bar_0)
      5)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from 5
extracting region from (Eq false
     (Slt (ReadLSB w32 4 bar_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 4 bar_0)
      5)
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
extracting region from 5
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 4 bar_0)
          5))
  br i1 %15, label %16, label %19, !dbg !139
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:35
has high? 0
has low? 1
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x35e2a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679192
executeMemoryOperation isWrite? 1
storing value 10
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %20 = call i32 @loop(i32 5, i32 2), !dbg !145
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e2a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679288
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e2a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %17 = call i32 @loop(i32 4, i32 2), !dbg !140
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e2000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55678848
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55678848
default offset for target address 0
base memory address 55678848
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e2a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e2000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679344
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679344
default offset for target address 0
base memory address 55679344
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %28 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 1, !dbg !158
extracting region from 4
extracting region from 55766644
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e2a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %29 = load i32, i32* %28, align 4, !dbg !158
state=0x35e2500 memory operation (inside foo) 
  %29 = load i32, i32* %28, align 4, !dbg !158
 address: 55766644
executeMemoryOperation isWrite? 0
address for memop 55766644
default offset for target address 4
base memory address 55766640
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !125
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e2000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679344
executeMemoryOperation isWrite? 0
address for memop 55679344
default offset for target address 0
base memory address 55679344
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e2000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679448
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e3400 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679480
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %30 = icmp eq i32 %29, -1, !dbg !161
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e3400 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679464
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e2f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679432
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679432
default offset for target address 0
base memory address 55679432
next instruction:   br i1 %27, label %31, label %38, !dbg !162
extracting region from (Slt 4294967286
      (ReadLSB w32 8 bar_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 64,95 AND 88,95
ranges intersect: 64,95 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 64,95 AND 80,87
ranges intersect: 64,95 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 64,95 AND 72,79
ranges intersect: 64,95 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 64,95 AND 64,71
ranges intersect: 64,95 AND 64,71
read expr range: 64,8
expr has high=1 64,32
extracting region from (Slt 4294967286
      (ReadLSB w32 8 bar_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Slt 4294967286
      (ReadLSB w32 8 bar_0))
  br i1 %27, label %31, label %38, !dbg !162
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 4294967286
      (ReadLSB w32 8 bar_0))
  br i1 %27, label %31, label %38, !dbg !162
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 bar_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 8 bar_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 64,95 AND 88,95
ranges intersect: 64,95 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 64,95 AND 80,87
ranges intersect: 64,95 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 64,95 AND 72,79
ranges intersect: 64,95 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 64,95 AND 64,71
ranges intersect: 64,95 AND 64,71
read expr range: 64,8
expr has high=1 64,32
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 bar_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 8 bar_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 8 bar_0)
extracting region from (Read w8 11 bar_0)
do ranges intersect: 32,63 AND 88,95
read expr range: 88,8
extracting region from (ReadLSB w24 8 bar_0)
extracting region from (Read w8 10 bar_0)
do ranges intersect: 32,63 AND 80,87
read expr range: 80,8
extracting region from (ReadLSB w16 8 bar_0)
extracting region from (Read w8 9 bar_0)
do ranges intersect: 32,63 AND 72,79
read expr range: 72,8
extracting region from (Read w8 8 bar_0)
do ranges intersect: 32,63 AND 64,71
read expr range: 64,8

>>>> Branch Condition : 
(Eq false
     (Slt 4294967286
          (ReadLSB w32 8 bar_0)))
  br i1 %27, label %31, label %38, !dbg !162
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 bar_0)))
  br i1 %27, label %31, label %38, !dbg !162
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e3400 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679464
executeMemoryOperation isWrite? 0
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e3400 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679440
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e3400 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679520
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e2f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679488
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679488
default offset for target address 0
base memory address 55679488
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e2000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679376
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   br i1 %30, label %32, label %35, !dbg !163
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 4 bar_0))
  br i1 %30, label %32, label %35, !dbg !163
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:47
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 bar_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 bar_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 4 bar_0)))
  br i1 %30, label %32, label %35, !dbg !163
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:47
has high? 0
has low? 1
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e2f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679488
executeMemoryOperation isWrite? 0
address for memop 55679488
default offset for target address 0
base memory address 55679488
next instruction:   br label %4, !dbg !125
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   br label %4, !dbg !125
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e2f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679368
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %33 = call i32 @loop(i32 6, i32 2), !dbg !164
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55678848
executeMemoryOperation isWrite? 0
address for memop 55678848
default offset for target address 0
base memory address 55678848
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br i1 %30, label %39, label %42, !dbg !174
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 4 bar_0))
  br i1 %30, label %39, label %42, !dbg !174
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:57
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 bar_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 64,95 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 64,95 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 64,95 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 64,95 AND 32,39
read expr range: 32,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 4 bar_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 4 bar_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 4 bar_0)
extracting region from (Read w8 7 bar_0)
do ranges intersect: 32,63 AND 56,63
ranges intersect: 32,63 AND 56,63
read expr range: 56,8
extracting region from (ReadLSB w24 4 bar_0)
extracting region from (Read w8 6 bar_0)
do ranges intersect: 32,63 AND 48,55
ranges intersect: 32,63 AND 48,55
read expr range: 48,8
extracting region from (ReadLSB w16 4 bar_0)
extracting region from (Read w8 5 bar_0)
do ranges intersect: 32,63 AND 40,47
ranges intersect: 32,63 AND 40,47
read expr range: 40,8
extracting region from (Read w8 4 bar_0)
do ranges intersect: 32,63 AND 32,39
ranges intersect: 32,63 AND 32,39
read expr range: 32,8
expr has high=0 32,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 4 bar_0)))
  br i1 %30, label %39, label %42, !dbg !174
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:57
has high? 0
has low? 1
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %40 = call i32 @loop(i32 8, i32 2), !dbg !176
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679448
executeMemoryOperation isWrite? 0
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %43 = call i32 @loop(i32 9, i32 2), !dbg !182
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e2f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679168
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679344
executeMemoryOperation isWrite? 0
address for memop 55679344
default offset for target address 0
base memory address 55679344
next instruction:   br label %4, !dbg !125
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %36 = call i32 @loop(i32 7, i32 2), !dbg !169
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679448
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679480
executeMemoryOperation isWrite? 0
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679432
executeMemoryOperation isWrite? 0
address for memop 55679432
default offset for target address 0
base memory address 55679432
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679440
executeMemoryOperation isWrite? 0
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e3900 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679592
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e3900 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679704
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679376
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br label %4, !dbg !138
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679464
executeMemoryOperation isWrite? 0
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !138
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e3900 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679440
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e4300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679648
executeMemoryOperation isWrite? 1
storing value 9
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e3e00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679616
executeMemoryOperation isWrite? 1
storing value 7
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   store i32 %ru, i32* %1, align 4
state=0x35e2500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 55679640
executeMemoryOperation isWrite? 1
storing value 6
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55678848
executeMemoryOperation isWrite? 0
address for memop 55678848
default offset for target address 0
base memory address 55678848
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e3e00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679728
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   br label %4, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679368
executeMemoryOperation isWrite? 0
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e3e00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e2500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679752
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %base, i32* %2, align 4
state=0x35e4300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 55679776
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679448
executeMemoryOperation isWrite? 0
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e2500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679488
executeMemoryOperation isWrite? 0
address for memop 55679488
default offset for target address 0
base memory address 55679488
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e3e00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   br label %4, !dbg !138
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e3e00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !121
state=0x35e4300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !121
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e4300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e4300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e3900 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   br label %4, !dbg !125
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679480
executeMemoryOperation isWrite? 0
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   store i32 %3, i32* %result, align 4, !dbg !122
state=0x35e2500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !122
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679344
executeMemoryOperation isWrite? 0
address for memop 55679344
default offset for target address 0
base memory address 55679344
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e2500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679440
executeMemoryOperation isWrite? 0
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679448
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679368
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   br label %4, !dbg !125
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   br label %4, !dbg !125
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679464
executeMemoryOperation isWrite? 0
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679440
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679376
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   store i32 0, i32* %i, align 4, !dbg !123
state=0x35e3900 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !123
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br label %4, !dbg !125
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   br label %4, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br label %4, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679480
executeMemoryOperation isWrite? 0
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679440
executeMemoryOperation isWrite? 0
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55678848
executeMemoryOperation isWrite? 0
address for memop 55678848
default offset for target address 0
base memory address 55678848
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679448
executeMemoryOperation isWrite? 0
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679432
executeMemoryOperation isWrite? 0
address for memop 55679432
default offset for target address 0
base memory address 55679432
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679368
executeMemoryOperation isWrite? 0
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679344
executeMemoryOperation isWrite? 0
address for memop 55679344
default offset for target address 0
base memory address 55679344
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679448
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679488
executeMemoryOperation isWrite? 0
address for memop 55679488
default offset for target address 0
base memory address 55679488
next instruction:   br label %4, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679464
executeMemoryOperation isWrite? 0
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679440
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679376
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br label %4, !dbg !138
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679376
executeMemoryOperation isWrite? 0
address for memop 55679376
default offset for target address 0
base memory address 55679376
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55678848
executeMemoryOperation isWrite? 0
address for memop 55678848
default offset for target address 0
base memory address 55678848
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679368
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679448
executeMemoryOperation isWrite? 0
address for memop 55679448
default offset for target address 0
base memory address 55679448
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   ret i32 %8, !dbg !139
state :0x35e2000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !138
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 64
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %10), !dbg !133
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(55678904, 16) at /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:33
next instruction:   store i32 1, i32* %1, align 4, !dbg !135
state=0x35e2000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !135
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br label %48, !dbg !135
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679432
executeMemoryOperation isWrite? 0
address for memop 55679432
default offset for target address 0
base memory address 55679432
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e2000 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679368
executeMemoryOperation isWrite? 0
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   br label %4, !dbg !138
next instruction:   ret i32 %49, !dbg !192
state :0x35e2000 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   br label %4, !dbg !138
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679480
executeMemoryOperation isWrite? 0
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679488
executeMemoryOperation isWrite? 0
address for memop 55679488
default offset for target address 0
base memory address 55679488
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br label %4, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679440
executeMemoryOperation isWrite? 0
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679368
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679464
executeMemoryOperation isWrite? 0
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679440
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 128
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br label %4, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   br label %4, !dbg !138
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679480
executeMemoryOperation isWrite? 0
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679440
executeMemoryOperation isWrite? 0
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679464
executeMemoryOperation isWrite? 0
address for memop 55679464
default offset for target address 0
base memory address 55679464
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679440
executeMemoryOperation isWrite? 1
storing value 64
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 6
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679520
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   br label %4, !dbg !138
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679432
executeMemoryOperation isWrite? 0
address for memop 55679432
default offset for target address 0
base memory address 55679432
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679520
executeMemoryOperation isWrite? 0
address for memop 55679520
default offset for target address 0
base memory address 55679520
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679368
executeMemoryOperation isWrite? 0
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679488
executeMemoryOperation isWrite? 0
address for memop 55679488
default offset for target address 0
base memory address 55679488
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679480
executeMemoryOperation isWrite? 0
address for memop 55679480
default offset for target address 0
base memory address 55679480
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679440
executeMemoryOperation isWrite? 0
address for memop 55679440
default offset for target address 0
base memory address 55679440
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679368
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   br label %4, !dbg !138
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 256
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   ret i32 %8, !dbg !139
state :0x35e3400 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 7
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679168
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %20), !dbg !147
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !149
state=0x35e3400 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !149
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679168
executeMemoryOperation isWrite? 0
address for memop 55679168
default offset for target address 0
base memory address 55679168
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   br label %48, !dbg !149
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e3400 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   ret i32 %49, !dbg !192
state :0x35e3400 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679432
executeMemoryOperation isWrite? 0
address for memop 55679432
default offset for target address 0
base memory address 55679432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679368
executeMemoryOperation isWrite? 0
address for memop 55679368
default offset for target address 0
base memory address 55679368
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   ret i32 %8, !dbg !139
state :0x35e2f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %17), !dbg !142
treating as external function: printf
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   store i32 1, i32* %1, align 4, !dbg !144
state=0x35e2f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !144
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 512
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   br label %48, !dbg !144
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e2f00 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   ret i32 %49, !dbg !192
state :0x35e2f00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   br label %4, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 2
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   br label %4, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   br label %4, !dbg !138
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 9
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   br label %4, !dbg !138
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   br label %4, !dbg !138
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 16
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679288
executeMemoryOperation isWrite? 0
address for memop 55679288
default offset for target address 0
base memory address 55679288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679216
executeMemoryOperation isWrite? 1
storing value 2048
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 3
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   br label %4, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679320
executeMemoryOperation isWrite? 1
storing value 10
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679320
executeMemoryOperation isWrite? 0
address for memop 55679320
default offset for target address 0
base memory address 55679320
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679192
executeMemoryOperation isWrite? 0
address for memop 55679192
default offset for target address 0
base memory address 55679192
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679216
executeMemoryOperation isWrite? 0
address for memop 55679216
default offset for target address 0
base memory address 55679216
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   br label %4, !dbg !138
next instruction:   ret i32 %8, !dbg !139
state :0x35e2a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %46), !dbg !189
treating as external function: printf
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   store i32 1, i32* %1, align 4, !dbg !191
state=0x35e2a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !191
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   br label %48, !dbg !191
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e2a00 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 32
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   ret i32 %49, !dbg !192
state :0x35e2a00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 64
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 4
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   br label %4, !dbg !138
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 64
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   br label %4, !dbg !138
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   br label %4, !dbg !138
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 64
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 64
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679752
executeMemoryOperation isWrite? 0
address for memop 55679752
default offset for target address 0
base memory address 55679752
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 128
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679824
executeMemoryOperation isWrite? 1
storing value 128
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 128
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 5
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679872
executeMemoryOperation isWrite? 1
storing value 6
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br label %4, !dbg !138
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 6
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 6
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   br label %4, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679872
executeMemoryOperation isWrite? 0
address for memop 55679872
default offset for target address 0
base memory address 55679872
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679640
executeMemoryOperation isWrite? 0
address for memop 55679640
default offset for target address 0
base memory address 55679640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679824
executeMemoryOperation isWrite? 0
address for memop 55679824
default offset for target address 0
base memory address 55679824
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679728
executeMemoryOperation isWrite? 0
address for memop 55679728
default offset for target address 0
base memory address 55679728
next instruction:   ret i32 %8, !dbg !139
state :0x35e2500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %33), !dbg !166
treating as external function: printf
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 1, i32* %1, align 4, !dbg !168
state=0x35e2500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !168
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br label %48, !dbg !168
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e2500 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 128
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   ret i32 %49, !dbg !192
state :0x35e2500 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
16
64
32
2048
128
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679808
executeMemoryOperation isWrite? 1
storing value 256
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 256
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679840
executeMemoryOperation isWrite? 1
storing value 7
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   br label %4, !dbg !138
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 7
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679840
executeMemoryOperation isWrite? 0
address for memop 55679840
default offset for target address 0
base memory address 55679840
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 6
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679616
executeMemoryOperation isWrite? 0
address for memop 55679616
default offset for target address 0
base memory address 55679616
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679808
executeMemoryOperation isWrite? 0
address for memop 55679808
default offset for target address 0
base memory address 55679808
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   ret i32 %8, !dbg !139
state :0x35e3e00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %36), !dbg !171
treating as external function: printf
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   store i32 1, i32* %1, align 4, !dbg !173
state=0x35e3e00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !173
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br label %4, !dbg !138
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   br label %48, !dbg !173
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e3e00 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   ret i32 %49, !dbg !192
state :0x35e3e00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679704
executeMemoryOperation isWrite? 0
address for memop 55679704
default offset for target address 0
base memory address 55679704
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679536
executeMemoryOperation isWrite? 1
storing value 512
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679760
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   br label %4, !dbg !138
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 256
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 7
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679760
executeMemoryOperation isWrite? 0
address for memop 55679760
default offset for target address 0
base memory address 55679760
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679592
executeMemoryOperation isWrite? 0
address for memop 55679592
default offset for target address 0
base memory address 55679592
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679536
executeMemoryOperation isWrite? 0
address for memop 55679536
default offset for target address 0
base memory address 55679536
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   ret i32 %8, !dbg !139
state :0x35e3900 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %40), !dbg !179
treating as external function: printf
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 512
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   store i32 1, i32* %1, align 4, !dbg !181
state=0x35e3900 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !181
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br label %48, !dbg !181
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e3900 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   ret i32 %49, !dbg !192
state :0x35e3900 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 8
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !133
state=0x35e4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !133
 address: 55679776
executeMemoryOperation isWrite? 0
address for memop 55679776
default offset for target address 0
base memory address 55679776
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !135
state=0x35e4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !135
 address: 55679688
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !136
next instruction:   store i32 %13, i32* %i, align 4, !dbg !136
state=0x35e4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !136
 address: 55679856
executeMemoryOperation isWrite? 1
storing value 9
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   br label %4, !dbg !138
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !126
state=0x35e4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !126
 address: 55679856
executeMemoryOperation isWrite? 0
address for memop 55679856
default offset for target address 0
base memory address 55679856
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !129
state=0x35e4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !129
 address: 55679648
executeMemoryOperation isWrite? 0
address for memop 55679648
default offset for target address 0
base memory address 55679648
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !130
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !131
state=0x35e4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !131
 address: 55679688
executeMemoryOperation isWrite? 0
address for memop 55679688
default offset for target address 0
base memory address 55679688
next instruction:   br i1 %7, label %9, label %14, !dbg !132
next instruction:   ret i32 %8, !dbg !139
state :0x35e4300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %43), !dbg !184
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !186
state=0x35e4300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !186
 address: 55679064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   br label %48, !dbg !186
next instruction:   %49 = load i32, i32* %1, align 4, !dbg !192
state=0x35e4300 memory operation (inside foo) 
  %49 = load i32, i32* %1, align 4, !dbg !192
 address: 55679064
executeMemoryOperation isWrite? 0
address for memop 55679064
default offset for target address 0
base memory address 55679064
next instruction:   ret i32 %49, !dbg !192
state :0x35e4300 checking foo to see if an input function
terminating state with foo
checking leak in foo with 3locals 
Sensitive leak via local variable 2 in function foo
checking done
256
512
1024
Size of rdmap : 15

===============
Found Violation at : 
diff : 24
Instruction:
  %25 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 2, !dbg !154

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 bar_0)))
(And (Eq 4294967295
          (ReadLSB w32 4 bar_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 136 , 136 ]

[ (Slt 4294967286
      (ReadLSB w32 8 bar_0))
(And (Eq 4294967295
          (ReadLSB w32 4 bar_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 112 , 112 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:57
  br i1 %30, label %39, label %42, !dbg !174

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:47
  br i1 %30, label %32, label %35, !dbg !163

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %25 = getelementptr inbounds %struct.mytest, %struct.mytest* %t, i32 0, i32 2, !dbg !154

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 8 bar_0)))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 4 bar_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 148 , 148 ]

[ (Slt 4294967286
      (ReadLSB w32 8 bar_0))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 4 bar_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 124 , 124 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:57
  br i1 %30, label %39, label %42, !dbg !174

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:47
  br i1 %30, label %32, label %35, !dbg !163

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

===============

===============
Found Violation at : 
diff : 68
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 136 , 136 ]

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (Slt (ReadLSB w32 4 bar_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 136 , 136 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 112 , 112 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 80
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 148 , 148 ]

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (Slt (ReadLSB w32 4 bar_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 148 , 148 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 124 , 124 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 68
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 4 bar_0)
                    1))
           (Slt N0 5))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 84 , 84 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
(And (Eq false
          (Slt (ReadLSB w32 4 bar_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 56
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 4 bar_0)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 96 , 96 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
(And (Eq false
          (Slt (ReadLSB w32 4 bar_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 44
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (Slt (ReadLSB w32 4 bar_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 112 , 112 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 56
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (Slt (ReadLSB w32 4 bar_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 8 bar_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 4 bar_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 124 , 124 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 84
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29

[ (Slt 0
      (ReadLSB w32 8 bar_0))
(And (Slt (ReadLSB w32 4 bar_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 8 bar_0)))
(And (Eq false
          (Slt (ReadLSB w32 4 bar_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:45
  %23 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:31
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:46
	=====================

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c:29
	=====================

>>>> Found violations at  : 2 locations.
Info Flow Summary for function 
all high sym regions: 
bar_0
offset=64, size=32
all low sym regions: 
bar_0
offset=32, size=32
return_value
offset=0, size=32
 Code loc with leaks:
/home/tuba/Documents/tools/pmguidedsymex/test/test14/test14.c 72: 



KLEE: done: #Timing Side Channel  Locs = 2
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 68
KLEE: done: maxInst = 153
KLEE: done: HAncestors = 2
KLEE: done: HLeaksOnStack = 1
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 826
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
Lazy initialization is ON 
lazy single spec file? 
 mixed function bar arg 0
 mixed function bar arg 0
