KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test8/klee-out-0"
KLEE: Using STP solver backend
Uncov init=784
Couldn't open file 
lazy init arg foo_0_arg_0
 setting low security region offset= 0 size= 32
lazy init arg foo_0_arg_1
 setting high security region offset= 0 size= 32
High symbolic regions:
foo_0_arg_1
Low symbolic regions:
foo_0_arg_0
Registering publicOutputReturningFName as foo
reached foo
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 2 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=2 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 1 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=1 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 0 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=0 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 2 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=2 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 1 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=1 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 0 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=0 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
 high projection on (And (Sle 0
           N0:(ReadLSB w32 0 foo_0_arg_1))
      (Slt N0 128)) : (And (Sle 0
           N0:(ReadLSB w32 0 foo_0_arg_1))
      (Slt N0 128))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 2 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=2 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 1 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=1 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 0 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=0 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 2 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=2 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 1 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=1 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 0 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=0 size=8 is (high?) 0
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
 high projection on (Eq false
     (And (Sle 0
               N0:(ReadLSB w32 0 foo_0_arg_1))
          (Slt N0 128))) : (Eq false
     (And (Sle 0
               N0:(ReadLSB w32 0 foo_0_arg_1))
          (Slt N0 128)))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 2 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=2 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 1 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=1 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 0 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=0 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 0
[0,31] vs [24,31]
 low projection on (Slt 0
      (ReadLSB w32 0 foo_0_arg_0)) : (Slt 0
      (ReadLSB w32 0 foo_0_arg_0))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 2 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=2 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 1 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=1 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 0 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=0 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 0
[0,31] vs [24,31]
 low projection on (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_0_arg_0))) : (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_0_arg_0)))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 2 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=2 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 1 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=1 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 0 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=0 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 0
[0,31] vs [24,31]
 low projection on (Slt 10
      (ReadLSB w32 0 foo_0_arg_0)) : (Slt 10
      (ReadLSB w32 0 foo_0_arg_0))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 2 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=2 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 1 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=1 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 0 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=0 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 0
[0,31] vs [24,31]
 low projection on (Eq false
     (Slt 10
          (ReadLSB w32 0 foo_0_arg_0))) : (Eq false
     (Slt 10
          (ReadLSB w32 0 foo_0_arg_0)))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
CRITICAL: Security sensitive index in GetElementPtr:
  %14 = getelementptr inbounds [128 x i32], [128 x i32]* @table, i64 0, i64 %13(SExt w64 (ReadLSB w32 0 foo_0_arg_1))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
Checking for cache based side channel:
Renaming of (Add w64 69897216
          (Mul w64 4
                   (SExt w64 (ReadLSB w32 0 foo_0_arg_1)))):
(Add w64 69897216
          (Mul w64 4
                   (SExt w64 (ReadLSB w32 0 foo_0_arg_1_r_0))))
CACHE BASED SIDE CHANNEL: 
  %14 = getelementptr inbounds [128 x i32], [128 x i32]* @table, i64 0, i64 %13address: (Add w64 69897216
          (Mul w64 4
                   (SExt w64 (ReadLSB w32 0 foo_0_arg_1)))) cache line size: 6.400000e+01
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 2 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=2 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 1 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=1 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 0 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=0 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
CRITICAL: Security sensitive index in GetElementPtr:
  %21 = getelementptr inbounds [128 x i32], [128 x i32]* @table, i64 0, i64 %20(SExt w64 (Add w32 (ReadLSB w32 0 foo_0_arg_0)
                    (ReadLSB w32 0 foo_0_arg_1)))
Checking sensitivity of read expression (Read w8 3 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=3 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 2 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=2 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 1 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=1 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 0 foo_0_arg_0)
Checking if symbolic region foo_0_arg_0 offset=0 size=8 is (high?) 1
Checking sensitivity of read expression (Read w8 3 foo_0_arg_1)
Checking if symbolic region foo_0_arg_1 offset=3 size=8 is (high?) 1
[0,31] vs [24,31]
Checking for cache based side channel:
Renaming of (Add w64 69897216
          (Mul w64 4
                   (SExt w64 (Add w32 (ReadLSB w32 0 foo_0_arg_0)
                                      (ReadLSB w32 0 foo_0_arg_1))))):
(Add w64 69897216
          (Mul w64 4
                   (SExt w64 (Add w32 (ReadLSB w32 0 foo_0_arg_0)
                                      (ReadLSB w32 0 foo_0_arg_1_r_1)))))
CACHE BASED SIDE CHANNEL: 
  %21 = getelementptr inbounds [128 x i32], [128 x i32]* @table, i64 0, i64 %20address: (Add w64 69897216
          (Mul w64 4
                   (SExt w64 (Add w32 (ReadLSB w32 0 foo_0_arg_0)
                                      (ReadLSB w32 0 foo_0_arg_1))))) cache line size: 6.400000e+01
KLEE: ERROR: (location information missing) memory error: out of bound pointer
KLEE: NOTE: now ignoring this error at this location
Size of rdmap : 7

===============
Found Violation at : 
diff : 1666
Instruction:
  %1 = alloca i32, align 4
KLEE: : (location information missing) 

[ (And (Sle 0
           N0:(ReadLSB w32 0 foo_0_arg_1))
      (Slt N0 128))
(And (Slt 10
           (ReadLSB w32 0 foo_0_arg_0))
      (Eq (ReadLSB w32 0 return_value)
          (ReadLSB w32 N0:(Extract w32 0 (Mul w64 4
                                                  (SExt w64 (ReadLSB w32 0 foo_0_arg_1)))) const_arr1)))
 ]   ---->  [ 22 , 22 ]

[ (Eq false
     (And (Sle 0
               N0:(ReadLSB w32 0 foo_0_arg_1))
          (Slt N0 128)))
(And (Slt 0
           (ReadLSB w32 0 foo_0_arg_0))
      (Eq 254
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 1688 , 1688 ]

Successors : 
KLEE: : (location information missing) 
  %24 = icmp sgt i32 %8, 0

foo
KLEE: : (location information missing) 
  %10 = icmp sgt i32 %8, 10

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 1619
Instruction:
  %1 = alloca i32, align 4
KLEE: : (location information missing) 

[ (And (Sle 0
           N0:(ReadLSB w32 0 foo_0_arg_1))
      (Slt N0 128))
(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (Slt 10
                                                                                          N0:(ReadLSB w32 0 foo_0_arg_0)))
                                                                                 (Eq N1:(ReadLSB w32 0 return_value)
                                                                                     (ReadLSB w32 N2:(Extract w32 0 N3:(Mul w64 4
                                                                                                                                (SExt w64 (Add w32 N0
                                                                                                                                                   (ReadLSB w32 0 foo_0_arg_1))))) const_arr1)))
                                                                            (Eq N1
                                                                                (ReadLSB w32 N4:(Extract w32 0 (Add w64 205856 N3)) const_arr2)))
                                                                       (Eq N1
                                                                           (ReadLSB w32 N5:(Extract w32 0 (Add w64 292048 N3)) return_value)))
                                                                  (Eq N1
                                                                      (ReadLSB w32 N6:(Extract w32 0 (Add w64 205888 N3)) const_arr3)))
                                                             (Eq N1
                                                                 (ReadLSB w32 N7:(Extract w32 0 (Add w64 205920 N3)) const_arr4)))
                                                        (Eq N1
                                                            (ReadLSB w32 N8:(Extract w32 0 (Add w64 207328 N3)) const_arr6)))
                                                   (Eq N1
                                                       (ReadLSB w32 N9:(Extract w32 0 (Add w64 292096 N3)) foo_0_arg_0)))
                                              (Eq N1
                                                  (ReadLSB w32 N10:(Extract w32 0 (Add w64 292120 N3)) const_arr11)))
                                         (Eq N1
                                             (ReadLSB w32 N11:(Extract w32 0 (Add w64 292040 N3)) foo_0_arg_1)))
                                    (Eq N1
                                        (ReadLSB w32 N12:(Extract w32 0 (Add w64 291856 N3)) U0:[3=N13:(Read w8 3 foo_0_arg_1),
                                                                                                 2=N14:(Read w8 2 foo_0_arg_1),
                                                                                                 1=N15:(Read w8 1 foo_0_arg_1),
                                                                                                 0=N16:(Read w8 0 foo_0_arg_1)] @ const_arr8)))
                               (Eq N1
                                   (ReadLSB w32 N17:(Extract w32 0 (Add w64 291904 N3)) const_arr10)))
                          (Eq N1
                              (ReadLSB w32 N18:(Extract w32 0 (Add w64 205952 N3)) const_arr5)))
                     (Eq N1
                         (ReadLSB w32 N19:(Extract w32 0 (Add w64 291840 N3)) const_arr7)))
                (Eq N1
                    (ReadLSB w32 N20:(Extract w32 0 (Add w64 292152 N3)) const_arr13)))
           (Eq N1
               (ReadLSB w32 N21:(Extract w32 0 (Add w64 291872 N3)) U1:[3=N22:(Read w8 3 foo_0_arg_0),
                                                                        2=N23:(Read w8 2 foo_0_arg_0),
                                                                        1=N24:(Read w8 1 foo_0_arg_0),
                                                                        0=N25:(Read w8 0 foo_0_arg_0)] @ const_arr9)))
      (Eq N1
          (ReadLSB w32 N26:(Extract w32 0 (Add w64 292136 N3)) const_arr12)))
 ]   ---->  [ 69 , 69 ]

[ (Eq false
     (And (Sle 0
               N0:(ReadLSB w32 0 foo_0_arg_1))
          (Slt N0 128)))
(And (Slt 0
           (ReadLSB w32 0 foo_0_arg_0))
      (Eq 254
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 1688 , 1688 ]

Successors : 
KLEE: : (location information missing) 
  %24 = icmp sgt i32 %8, 0

foo
KLEE: : (location information missing) 
  %10 = icmp sgt i32 %8, 10

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 50
Instruction:
  %1 = alloca i32, align 4
KLEE: : (location information missing) 

[ (And (Sle 0
           N0:(ReadLSB w32 0 foo_0_arg_1))
      (Slt N0 128))
(And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq false
                                                                                     (Slt 10
                                                                                          N0:(ReadLSB w32 0 foo_0_arg_0)))
                                                                                 (Eq N1:(ReadLSB w32 0 return_value)
                                                                                     (ReadLSB w32 N2:(Extract w32 0 N3:(Mul w64 4
                                                                                                                                (SExt w64 (Add w32 N0
                                                                                                                                                   (ReadLSB w32 0 foo_0_arg_1))))) const_arr1)))
                                                                            (Eq N1
                                                                                (ReadLSB w32 N4:(Extract w32 0 (Add w64 205856 N3)) const_arr2)))
                                                                       (Eq N1
                                                                           (ReadLSB w32 N5:(Extract w32 0 (Add w64 292048 N3)) return_value)))
                                                                  (Eq N1
                                                                      (ReadLSB w32 N6:(Extract w32 0 (Add w64 205888 N3)) const_arr3)))
                                                             (Eq N1
                                                                 (ReadLSB w32 N7:(Extract w32 0 (Add w64 205920 N3)) const_arr4)))
                                                        (Eq N1
                                                            (ReadLSB w32 N8:(Extract w32 0 (Add w64 207328 N3)) const_arr6)))
                                                   (Eq N1
                                                       (ReadLSB w32 N9:(Extract w32 0 (Add w64 292096 N3)) foo_0_arg_0)))
                                              (Eq N1
                                                  (ReadLSB w32 N10:(Extract w32 0 (Add w64 292120 N3)) const_arr11)))
                                         (Eq N1
                                             (ReadLSB w32 N11:(Extract w32 0 (Add w64 292040 N3)) foo_0_arg_1)))
                                    (Eq N1
                                        (ReadLSB w32 N12:(Extract w32 0 (Add w64 291856 N3)) U0:[3=N13:(Read w8 3 foo_0_arg_1),
                                                                                                 2=N14:(Read w8 2 foo_0_arg_1),
                                                                                                 1=N15:(Read w8 1 foo_0_arg_1),
                                                                                                 0=N16:(Read w8 0 foo_0_arg_1)] @ const_arr8)))
                               (Eq N1
                                   (ReadLSB w32 N17:(Extract w32 0 (Add w64 291904 N3)) const_arr10)))
                          (Eq N1
                              (ReadLSB w32 N18:(Extract w32 0 (Add w64 205952 N3)) const_arr5)))
                     (Eq N1
                         (ReadLSB w32 N19:(Extract w32 0 (Add w64 291840 N3)) const_arr7)))
                (Eq N1
                    (ReadLSB w32 N20:(Extract w32 0 (Add w64 292152 N3)) const_arr13)))
           (Eq N1
               (ReadLSB w32 N21:(Extract w32 0 (Add w64 291872 N3)) U1:[3=N22:(Read w8 3 foo_0_arg_0),
                                                                        2=N23:(Read w8 2 foo_0_arg_0),
                                                                        1=N24:(Read w8 1 foo_0_arg_0),
                                                                        0=N25:(Read w8 0 foo_0_arg_0)] @ const_arr9)))
      (Eq N1
          (ReadLSB w32 N26:(Extract w32 0 (Add w64 292136 N3)) const_arr12)))
 ]   ---->  [ 69 , 69 ]

[ (Eq false
     (And (Sle 0
               N0:(ReadLSB w32 0 foo_0_arg_1))
          (Slt N0 128)))
(And (Eq false
          (Slt 0
               (ReadLSB w32 0 foo_0_arg_0)))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 19 , 19 ]

Successors : 
KLEE: : (location information missing) 
  %24 = icmp sgt i32 %8, 0

foo
KLEE: : (location information missing) 
  %10 = icmp sgt i32 %8, 10

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : foo
KLEE: : (location information missing) 
	=====================

>>>> Found violations at  : 1 locations.
all high sym regions: 
foo_0_arg_1
all low sym regions: 
foo_0_arg_0
return_value

KLEE: done: #Timing Side Channel  Locs = 1
KLEE: done: #Cache Side Channel  Locs = 1
KLEE: done: minInst = 20
KLEE: done: maxInst = 1689
KLEE: done: HAncestors = 1
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 1774
KLEE: done: completed paths = 20
KLEE: done: generated tests = 20
Lazy initialization is ON 
lazy single spec file? 
 low function foo arg 0
 high function foo arg 1
