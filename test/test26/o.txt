KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test26/klee-out-2"
KLEE: Using STP solver backend
Uncov init=835
Couldn't open file 
Using cache line mode (as default)!
Loop bound is 2
KLEE: WARNING: undefined reference to function: printf
base type pointer=0x2e88620
lazy init arg bar_arg_0_0
base type pointer=0x2e88620
lazy init arg bar_arg_1_0
base type pointer=0x2e88620
lazy init arg bar_arg_2_0
High symbolic regions:
Low symbolic regions:
Registering publicOutputReturningFName as bar
clearing return_value from high
Using searcher <InterleavedSearcher> containing 2 searchers:
RandomPathSearcher
WeightedRandomSearcher::CoveringNew
</InterleavedSearcher>

next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48142712
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48142728
next instruction:   %3 = alloca i32, align 4
Local alloc:   %3 = alloca i32, align 4 at address 48142744
next instruction:   store i32 %L, i32* %1, align 4
reached bar
state=0x2efa000 memory operation (inside bar) 
  store i32 %L, i32* %1, align 4
 address: 48142712
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 bar_arg_0_0)
address width 64
address for memop 48142712
default offset for target address 0
base memory address 48142712
next instruction:   store i32 %H, i32* %2, align 4
state=0x2efa000 memory operation (inside bar) 
  store i32 %H, i32* %2, align 4
 address: 48142728
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 bar_arg_1_0)
address width 64
address for memop 48142728
default offset for target address 0
base memory address 48142728
next instruction:   store i32 %i, i32* %3, align 4
state=0x2efa000 memory operation (inside bar) 
  store i32 %i, i32* %3, align 4
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 bar_arg_2_0)
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !122
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efa000 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %6, label %7, label %17, !dbg !128
cloning state 0x2efa000 to 0x2efa500
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 1 times
executingPM on successor second
next instruction:   ret i32 0, !dbg !140
state :0x2efa500 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efa500 to 0x7fffe0abc4f0
next instruction:   %8 = load i32, i32* %3, align 4, !dbg !129
state=0x2efa000 memory operation (inside bar) 
  %8 = load i32, i32* %3, align 4, !dbg !129
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %8 = load i32, i32* %3, align 4, !dbg !129
next instruction:   %9 = icmp eq i32 %8, 14, !dbg !132
next instruction:   br i1 %9, label %10, label %14, !dbg !133
cloning state 0x2efa000 to 0x2efa500
stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70 false branch 1 times
executingPM on successor second
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efa500 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   %11 = load i32, i32* %1, align 4, !dbg !134
state=0x2efa000 memory operation (inside bar) 
  %11 = load i32, i32* %1, align 4, !dbg !134
 address: 48142712
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142712
default offset for target address 0
base memory address 48142712
Is i32* (count=0) to be lazy init?
  %11 = load i32, i32* %1, align 4, !dbg !134
next instruction:   %12 = load i32, i32* %2, align 4, !dbg !135
state=0x2efa000 memory operation (inside bar) 
  %12 = load i32, i32* %2, align 4, !dbg !135
 address: 48142728
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142728
default offset for target address 0
base memory address 48142728
Is i32* (count=0) to be lazy init?
  %12 = load i32, i32* %2, align 4, !dbg !135
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %13 = call i32 @foo(i32 %11, i32 %12), !dbg !136
before check 2
Handling functions with sensitive args foo
handling arg 0 (ReadLSB w32 0 bar_arg_0_0)
0x2efa000 calling setSymRegionSensitive from OnCall 3foo for arg 0
clearing foo_low_0_0 from high
handling arg 1 (ReadLSB w32 0 bar_arg_1_0)
0x2efa000 calling setSymRegionSensitive from OnCall 3foo for arg 1
setting region size of foo_high_1_0 to 32 while memobj size is 32
0x2efa000 calling setHighSym from setSymRegionSensitive for foo for arg 1
setting symbolic region high: foo_high_1_0
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48142936
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efa500 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !139
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efa500 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 1 times
next instruction:   %8 = load i32, i32* %3, align 4, !dbg !129
state=0x2efa500 memory operation (inside bar) 
  %8 = load i32, i32* %3, align 4, !dbg !129
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %8 = load i32, i32* %3, align 4, !dbg !129
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143112
next instruction:   %9 = icmp eq i32 %8, 14, !dbg !132
next instruction:   br i1 %9, label %10, label %14, !dbg !133
cloning state 0x2efa500 to 0x2efaa00
stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

stack trace=	#000000164 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:70 false branch 1 times
executingPM on successor second
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efaa00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %3 = alloca i32, align 4
Local alloc:   %3 = alloca i32, align 4 at address 48143128
next instruction:   store i32 %L, i32* %2, align 4
reached foo
state=0x2efa000 memory operation (inside foo) 
  store i32 %L, i32* %2, align 4
 address: 48143112
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_low_0_0)
address width 64
address for memop 48143112
default offset for target address 0
base memory address 48143112
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efaa00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %H, i32* %3, align 4
state=0x2efa000 memory operation (inside foo) 
  store i32 %H, i32* %3, align 4
 address: 48143128
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_high_1_0)
address width 64
address for memop 48143128
default offset for target address 0
base memory address 48143128
next instruction:   %4 = load i32, i32* %3, align 4, !dbg !122
state=0x2efa000 memory operation (inside foo) 
  %4 = load i32, i32* %3, align 4, !dbg !122
 address: 48143128
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143128
default offset for target address 0
base memory address 48143128
Is i32* (count=0) to be lazy init?
  %4 = load i32, i32* %3, align 4, !dbg !122
next instruction:   %5 = icmp sgt i32 %4, 0, !dbg !124
next instruction:   %6 = load i32, i32* %2, align 4, !dbg !125
state=0x2efa000 memory operation (inside foo) 
  %6 = load i32, i32* %2, align 4, !dbg !125
 address: 48143112
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143112
default offset for target address 0
base memory address 48143112
Is i32* (count=0) to be lazy init?
  %6 = load i32, i32* %2, align 4, !dbg !125
next instruction:   br i1 %5, label %7, label %21, !dbg !128
cloning state 0x2efa000 to 0x2efaf00
stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20 false branch 1 times
executingPM on successor second
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efaa00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 1 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %22 = icmp slt i32 %6, 0, !dbg !150
next instruction:   ret i32 0, !dbg !140
state :0x2efaa00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efaa00 to 0x7fffe0abc4f0
next instruction:   %11 = load i32, i32* %1, align 4, !dbg !134
state=0x2efa500 memory operation (inside bar) 
  %11 = load i32, i32* %1, align 4, !dbg !134
 address: 48142712
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142712
default offset for target address 0
base memory address 48142712
Is i32* (count=0) to be lazy init?
  %11 = load i32, i32* %1, align 4, !dbg !134
next instruction:   %12 = load i32, i32* %2, align 4, !dbg !135
state=0x2efa500 memory operation (inside bar) 
  %12 = load i32, i32* %2, align 4, !dbg !135
 address: 48142728
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142728
default offset for target address 0
base memory address 48142728
Is i32* (count=0) to be lazy init?
  %12 = load i32, i32* %2, align 4, !dbg !135
next instruction:   br i1 %22, label %23, label %42, !dbg !153
cloning state 0x2efaf00 to 0x2efaa00
stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35 false branch 1 times
executingPM on successor second
next instruction:   %8 = icmp slt i32 %6, 1, !dbg !129
next instruction:   %13 = call i32 @foo(i32 %11, i32 %12), !dbg !136
before check 2
Handling functions with sensitive args foo
handling arg 0 (ReadLSB w32 0 bar_arg_0_0)
0x2efa500 calling setSymRegionSensitive from OnCall 3foo for arg 0
clearing foo_low_0_1 from high
handling arg 1 (ReadLSB w32 0 bar_arg_1_0)
0x2efa500 calling setSymRegionSensitive from OnCall 3foo for arg 1
setting region size of foo_high_1_1 to 32 while memobj size is 32
0x2efa500 calling setHighSym from setSymRegionSensitive for foo for arg 1
setting symbolic region high: foo_high_1_1
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143264
next instruction:   br i1 %8, label %9, label %12, !dbg !130
cloning state 0x2efa000 to 0x2efb400
stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21 false branch 1 times
executingPM on successor second
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143664
next instruction:   %24 = load i32, i32* %3, align 4, !dbg !154
state=0x2efaf00 memory operation (inside foo) 
  %24 = load i32, i32* %3, align 4, !dbg !154
 address: 48143128
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143128
default offset for target address 0
base memory address 48143128
Is i32* (count=0) to be lazy init?
  %24 = load i32, i32* %3, align 4, !dbg !154
next instruction:   %3 = alloca i32, align 4
Local alloc:   %3 = alloca i32, align 4 at address 48143656
next instruction:   store i32 %L, i32* %2, align 4
state=0x2efa500 memory operation (inside foo) 
  store i32 %L, i32* %2, align 4
 address: 48143664
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_low_0_1)
address width 64
address for memop 48143664
default offset for target address 0
base memory address 48143664
next instruction:   store i32 %H, i32* %3, align 4
state=0x2efa500 memory operation (inside foo) 
  store i32 %H, i32* %3, align 4
 address: 48143656
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_high_1_1)
address width 64
address for memop 48143656
default offset for target address 0
base memory address 48143656
next instruction:   %25 = icmp sgt i32 %24, -10, !dbg !157
next instruction:   %4 = load i32, i32* %3, align 4, !dbg !122
state=0x2efa500 memory operation (inside foo) 
  %4 = load i32, i32* %3, align 4, !dbg !122
 address: 48143656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143656
default offset for target address 0
base memory address 48143656
Is i32* (count=0) to be lazy init?
  %4 = load i32, i32* %3, align 4, !dbg !122
next instruction:   %43 = call i32 @loop(i32 10, i32 2), !dbg !187
before check 2
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143624
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143600
next instruction:   %5 = icmp sgt i32 %4, 0, !dbg !124
next instruction:   %10 = call i32 @loop(i32 3, i32 2), !dbg !131
before check 2
after check 2
next instruction:   %13 = load i32, i32* %2, align 4, !dbg !136
state=0x2efb400 memory operation (inside foo) 
  %13 = load i32, i32* %2, align 4, !dbg !136
 address: 48143112
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143112
default offset for target address 0
base memory address 48143112
Is i32* (count=0) to be lazy init?
  %13 = load i32, i32* %2, align 4, !dbg !136
next instruction:   %6 = load i32, i32* %2, align 4, !dbg !125
state=0x2efa500 memory operation (inside foo) 
  %6 = load i32, i32* %2, align 4, !dbg !125
 address: 48143664
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143664
default offset for target address 0
base memory address 48143664
Is i32* (count=0) to be lazy init?
  %6 = load i32, i32* %2, align 4, !dbg !125
next instruction:   br i1 %5, label %7, label %21, !dbg !128
cloning state 0x2efa500 to 0x2efb900
stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000063 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:20 false branch 1 times
executingPM on successor second
next instruction:   %14 = icmp slt i32 %13, 5, !dbg !138
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143552
next instruction:   %8 = icmp slt i32 %6, 1, !dbg !129
next instruction:   %26 = load i32, i32* %2, align 4, !dbg !158
state=0x2efaf00 memory operation (inside foo) 
  %26 = load i32, i32* %2, align 4, !dbg !158
 address: 48143112
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143112
default offset for target address 0
base memory address 48143112
Is i32* (count=0) to be lazy init?
  %26 = load i32, i32* %2, align 4, !dbg !158
next instruction:   %22 = icmp slt i32 %6, 0, !dbg !150
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143528
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48143608
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48143496
next instruction:   br i1 %22, label %23, label %42, !dbg !153
cloning state 0x2efb900 to 0x2efbe00
stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000094 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35 false branch 1 times
executingPM on successor second
next instruction:   %24 = load i32, i32* %3, align 4, !dbg !154
state=0x2efb900 memory operation (inside foo) 
  %24 = load i32, i32* %3, align 4, !dbg !154
 address: 48143656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143656
default offset for target address 0
base memory address 48143656
Is i32* (count=0) to be lazy init?
  %24 = load i32, i32* %3, align 4, !dbg !154
next instruction:   %25 = icmp sgt i32 %24, -10, !dbg !157
next instruction:   br i1 %8, label %9, label %12, !dbg !130
cloning state 0x2efa500 to 0x2efc300
stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000067 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21 false branch 1 times
executingPM on successor second
next instruction:   %10 = call i32 @loop(i32 3, i32 2), !dbg !131
before check 2
after check 2
next instruction:   %27 = icmp eq i32 %26, -1, !dbg !161
next instruction:   %43 = call i32 @loop(i32 10, i32 2), !dbg !187
before check 2
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143384
next instruction:   br i1 %25, label %28, label %35, !dbg !162
cloning state 0x2efaf00 to 0x2efc800
stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36 false branch 1 times
executingPM on successor second
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x2efa000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143552
executeMemoryOperation isWrite? 1
storing value 3
address width 64
address for memop 48143552
default offset for target address 0
base memory address 48143552
next instruction:   %26 = load i32, i32* %2, align 4, !dbg !158
state=0x2efb900 memory operation (inside foo) 
  %26 = load i32, i32* %2, align 4, !dbg !158
 address: 48143664
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143664
default offset for target address 0
base memory address 48143664
Is i32* (count=0) to be lazy init?
  %26 = load i32, i32* %2, align 4, !dbg !158
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144096
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48144104
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144120
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143352
next instruction:   %27 = icmp eq i32 %26, -1, !dbg !161
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efa000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48143528
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143528
default offset for target address 0
base memory address 48143528
next instruction:   br i1 %25, label %28, label %35, !dbg !162
cloning state 0x2efb900 to 0x2efcd00
stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000101 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:36 false branch 1 times
executingPM on successor second
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efa000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48143528
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143528
default offset for target address 0
base memory address 48143528
next instruction:   br i1 %14, label %15, label %18, !dbg !139
cloning state 0x2efb400 to 0x2efd200
stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25 false branch 1 times
executingPM on successor second
next instruction:   %16 = call i32 @loop(i32 4, i32 2), !dbg !140
before check 2
after check 2
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efaa00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143624
executeMemoryOperation isWrite? 1
storing value 10
address width 64
address for memop 48143624
default offset for target address 0
base memory address 48143624
next instruction:   br i1 %27, label %29, label %32, !dbg !163
cloning state 0x2efb900 to 0x2efd700
stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37 false branch 1 times
executingPM on successor second
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efaa00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48143600
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143600
default offset for target address 0
base memory address 48143600
next instruction:   %30 = call i32 @loop(i32 6, i32 2), !dbg !164
before check 2
after check 2
next instruction:   %13 = load i32, i32* %2, align 4, !dbg !136
state=0x2efc300 memory operation (inside foo) 
  %13 = load i32, i32* %2, align 4, !dbg !136
 address: 48143664
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143664
default offset for target address 0
base memory address 48143664
Is i32* (count=0) to be lazy init?
  %13 = load i32, i32* %2, align 4, !dbg !136
next instruction:   br i1 %27, label %36, label %39, !dbg !174
cloning state 0x2efcd00 to 0x2fd8000
stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47 false branch 1 times
executingPM on successor second
next instruction:   %14 = icmp slt i32 %13, 5, !dbg !138
next instruction:   %33 = call i32 @loop(i32 7, i32 2), !dbg !169
before check 2
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143928
next instruction:   %19 = call i32 @loop(i32 5, i32 2), !dbg !145
before check 2
after check 2
next instruction:   br i1 %27, label %29, label %32, !dbg !163
cloning state 0x2efaf00 to 0x2fd8500
stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000104 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:37 false branch 1 times
executingPM on successor second
next instruction:   %37 = call i32 @loop(i32 8, i32 2), !dbg !176
before check 2
after check 2
next instruction:   br i1 %14, label %15, label %18, !dbg !139
cloning state 0x2efc300 to 0x2fd8a00
stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000078 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:25 false branch 1 times
executingPM on successor second
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efa000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48143608
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143608
default offset for target address 0
base memory address 48143608
next instruction:   %16 = call i32 @loop(i32 4, i32 2), !dbg !140
before check 2
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143848
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143824
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143872
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efa000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48143496
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143024
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efaa00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48143600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143600
default offset for target address 0
base memory address 48143600
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143440
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48143568
next instruction:   br i1 %27, label %36, label %39, !dbg !174
cloning state 0x2efc800 to 0x2fd8f00
stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000119 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47
	#100000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:47 false branch 1 times
executingPM on successor second
next instruction:   %37 = call i32 @loop(i32 8, i32 2), !dbg !176
before check 2
after check 2
next instruction:   %19 = call i32 @loop(i32 5, i32 2), !dbg !145
before check 2
after check 2
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144200
next instruction:   %40 = call i32 @loop(i32 9, i32 2), !dbg !182
before check 2
after check 2
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144176
next instruction:   br label %4, !dbg !126
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143400
next instruction:   %33 = call i32 @loop(i32 7, i32 2), !dbg !169
before check 2
after check 2
next instruction:   %30 = call i32 @loop(i32 6, i32 2), !dbg !164
before check 2
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143976
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144184
next instruction:   %40 = call i32 @loop(i32 9, i32 2), !dbg !182
before check 2
after check 2
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48144240
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144264
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efbe00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143384
executeMemoryOperation isWrite? 1
storing value 10
address width 64
address for memop 48143384
default offset for target address 0
base memory address 48143384
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efbe00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48143024
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143024
default offset for target address 0
base memory address 48143024
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efbe00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48143024
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143024
default offset for target address 0
base memory address 48143024
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144280
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efa500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48144104
executeMemoryOperation isWrite? 1
storing value 3
address width 64
address for memop 48144104
default offset for target address 0
base memory address 48144104
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efaa00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144096
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144096
default offset for target address 0
base memory address 48144096
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48143456
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48143800
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144320
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48144336
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144360
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144352
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144312
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48144392
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144416
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144432
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144448
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144464
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144480
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efa000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48143496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efbe00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48143568
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143568
default offset for target address 0
base memory address 48143568
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144496
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144512
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144408
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144256
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144544
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efaf00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48144336
executeMemoryOperation isWrite? 1
storing value 6
address width 64
address for memop 48144336
default offset for target address 0
base memory address 48144336
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144192
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efa500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48143352
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143352
default offset for target address 0
base memory address 48143352
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144568
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efaa00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144120
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144584
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48144392
executeMemoryOperation isWrite? 1
storing value 9
address width 64
address for memop 48144392
default offset for target address 0
base memory address 48144392
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efa500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48143352
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143352
default offset for target address 0
base memory address 48143352
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efcd00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143872
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48143872
default offset for target address 0
base memory address 48143872
Lazy initialization is ON 
lazy single spec file? 
Parsed Prog Model Spec 
 low function foo arg 0
 high function foo arg 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for tanext instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144600
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efa500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144200
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144200
default offset for target address 0
base memory address 48144200
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efcd00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144280
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144280
default offset for target address 0
base memory address 48144280
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efa500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144184
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144616
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efbe00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144264
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48143360
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144640
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efd200 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143848
executeMemoryOperation isWrite? 1
storing value 5
address width 64
address for memop 48143848
default offset for target address 0
base memory address 48143848
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144656
next instruction:   br label %4, !dbg !126
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efb900 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143928
executeMemoryOperation isWrite? 1
storing value 6
address width 64
address for memop 48143928
default offset for target address 0
base memory address 48143928
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48144672
next instruction:   br label %4, !dbg !126
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efaf00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144360
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144360
default offset for target address 0
base memory address 48144360
next instruction:   br label %4, !dbg !126
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144696
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efa000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143552
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143552
default offset for target address 0
base memory address 48143552
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efbe00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efb900 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48143400
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143400
default offset for target address 0
base memory address 48143400
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efa500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144184
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efcd00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144280
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144280
default offset for target address 0
base memory address 48144280
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efb900 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48143400
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143400
default offset for target address 0
base memory address 48143400
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efb900 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144432
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144432
default offset for target address 0
base memory address 48144432
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efbe00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143384
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143384
default offset for target address 0
base memory address 48143384
next instruction:   store i32 %base, i32* %2, align 4
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144512
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144512
default offset for target address 0
base memory address 48144512
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efb400 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143824
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48143824
default offset for target address 0
base memory address 48143824
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efaa00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144120
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efa500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144104
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144104
default offset for target address 0
base memory address 48144104
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efaa00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143624
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143624
default offset for target address 0
base memory address 48143624
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efbe00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143568
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143568
default offset for target address 0
base memory address 48143568
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efa000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143608
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143608
default offset for target address 0
base memory address 48143608
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144688
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144720
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efb400 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48143456
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143456
default offset for target address 0
base memory address 48143456
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144736
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efd700 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143440
executeMemoryOperation isWrite? 1
storing value 7
address width 64
address for memop 48143440
default offset for target address 0
base memory address 48143440
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efbe00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143024
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143024
default offset for target address 0
base memory address 48143024
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144752
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2fd8500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143976
executeMemoryOperation isWrite? 1
storing value 7
address width 64
address for memop 48143976
default offset for target address 0
base memory address 48143976
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efcd00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144312
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144312
default offset for target address 0
base memory address 48144312
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efb400 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48143456
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143456
default offset for target address 0
base memory address 48143456
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efa500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144200
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144200
default offset for target address 0
base memory address 48144200
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 48144768
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efaf00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144360
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144360
default offset for target address 0
base memory address 48144360
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efb900 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144656
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 48144792
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144784
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144816
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efd700 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144616
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144616
default offset for target address 0
base memory address 48144616
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48144240
executeMemoryOperation isWrite? 1
storing value 5
address width 64
address for memop 48144240
default offset for target address 0
base memory address 48144240
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2fd8f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144512
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144512
default offset for target address 0
base memory address 48144512
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efd700 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144616
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144616
default offset for target address 0
base memory address 48144616
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   store i32 %base, i32* %2, align 4
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144408
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144408
default offset for target address 0
base memory address 48144408
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efd200 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144176
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144176
default offset for target address 0
base memory address 48144176
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efc800 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48144672
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144672
default offset for target address 0
base memory address 48144672
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efc800 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144696
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144696
default offset for target address 0
base memory address 48144696
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efb400 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144320
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144320
default offset for target address 0
base memory address 48144320
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efc800 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144696
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144696
default offset for target address 0
base memory address 48144696
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efcd00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144448
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 48144832
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efa500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143352
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143352
default offset for target address 0
base memory address 48143352
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efc800 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144720
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144720
default offset for target address 0
base memory address 48144720
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efbe00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48143568
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48143568
default offset for target address 0
base memory address 48143568
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 48144848
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efa000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143528
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143528
default offset for target address 0
base memory address 48143528
next instruction:   store i32 %base, i32* %2, align 4
state=0x2fd8500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144544
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144544
default offset for target address 0
base memory address 48144544
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efaa00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144096
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144096
default offset for target address 0
base memory address 48144096
next instruction:   br label %4, !dbg !126
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2efc300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48144768
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144768
default offset for target address 0
base memory address 48144768
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efbe00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144192
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144192
default offset for target address 0
base memory address 48144192
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efa000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48143608
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48143608
default offset for target address 0
base memory address 48143608
rget address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) onext instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efa000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48143496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
next instruction:   br label %4, !dbg !126
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2fd8f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144584
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efcd00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144448
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efb900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2fd8000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 48143800
executeMemoryOperation isWrite? 1
storing value 9
address width 64
address for memop 48143800
default offset for target address 0
base memory address 48143800
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efd200 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144176
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144176
default offset for target address 0
base memory address 48144176
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efb900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143928
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143928
default offset for target address 0
base memory address 48143928
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2fd8500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144544
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144544
default offset for target address 0
base memory address 48144544
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efaf00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144416
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144416
default offset for target address 0
base memory address 48144416
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efa000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48143496
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efd700 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48143360
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143360
default offset for target address 0
base memory address 48143360
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efd200 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144480
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144480
default offset for target address 0
base memory address 48144480
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efaa00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143600
default offset for target address 0
base memory address 48143600
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efd700 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144688
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efb400 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144464
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
next instruction:   br label %4, !dbg !126
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efaf00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144496
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br label %4, !dbg !126
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efb400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144464
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efb400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143824
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143824
default offset for target address 0
base memory address 48143824
next instruction:   store i32 %base, i32* %2, align 4
state=0x2fd8000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144352
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144352
default offset for target address 0
base memory address 48144352
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2fd8000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144352
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144352
default offset for target address 0
base memory address 48144352
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efa500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144200
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144200
default offset for target address 0
base memory address 48144200
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efa500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144184
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efd200 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144256
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   br label %4, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   br label %4, !dbg !126
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2fd8000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144568
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144568
default offset for target address 0
base memory address 48144568
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efc800 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144784
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efa500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144184
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
next instruction:   store i32 %base, i32* %2, align 4
state=0x2efc300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 48144792
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144792
default offset for target address 0
base memory address 48144792
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144584
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
next instruction:   br label %4, !dbg !126
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efaa00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144096
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144096
default offset for target address 0
base memory address 48144096
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efaa00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144120
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efbe00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efa000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48143496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
address to be dest: 0
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2fd8000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144600
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efd200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144256
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efa000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143552
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143552
default offset for target address 0
base memory address 48143552
address to be dest: 3
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efb400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144320
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144320
default offset for target address 0
base memory address 48144320
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   br label %4, !dbg !126
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efd200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143848
default offset for target address 0
base memory address 48143848
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2fd8500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144640
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144640
default offset for target address 0
base memory address 48144640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144392
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144392
default offset for target address 0
base memory address 48144392
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efa000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143608
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143608
default offset for target address 0
base memory address 48143608
address to be dest: 2
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2fd8500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144752
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
next instruction:   br label %4, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efb400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143456
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143456
default offset for target address 0
base memory address 48143456
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efbe00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
address to be dest: 0
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efaa00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144120
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efaf00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
next instruction:   br label %4, !dbg !139
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efc800 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144784
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efc800 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144672
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144672
default offset for target address 0
base memory address 48144672
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2fd8a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144408
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144408
default offset for target address 0
base memory address 48144408
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efbe00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143384
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143384
default offset for target address 0
base memory address 48143384
address to be dest: 10
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efa000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143528
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143528
default offset for target address 0
base memory address 48143528
address to be dest: 2
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efaa00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144120
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
ffset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? address to be dest: 0
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efb900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144432
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144432
default offset for target address 0
base memory address 48144432
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144736
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144736
default offset for target address 0
base memory address 48144736
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efaa00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143624
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143624
default offset for target address 0
base memory address 48143624
address to be dest: 10
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efaf00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144336
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144336
default offset for target address 0
base memory address 48144336
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !122
state=0x2efc300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !122
 address: 48144792
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144792
default offset for target address 0
base memory address 48144792
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efa000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48143608
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48143608
default offset for target address 0
base memory address 48143608
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efb400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144320
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144320
default offset for target address 0
base memory address 48144320
next instruction:   store i32 %3, i32* %result, align 4, !dbg !123
state=0x2efc300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !123
 address: 48144832
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144832
default offset for target address 0
base memory address 48144832
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144192
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144192
default offset for target address 0
base memory address 48144192
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efbe00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143568
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143568
default offset for target address 0
base memory address 48143568
address to be dest: 2
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efd200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144480
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144480
default offset for target address 0
base memory address 48144480
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efa500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144184
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
address to be dest: 0
next instruction:   br label %4, !dbg !126
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efa000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48143496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
address to be dest: 0
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efcd00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143872
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143872
default offset for target address 0
base memory address 48143872
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efa000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48143496
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efbe00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143024
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143024
default offset for target address 0
base memory address 48143024
address to be dest: 2
next instruction:   br label %4, !dbg !139
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2fd8a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144816
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efb400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144464
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
next instruction:   store i32 0, i32* %i, align 4, !dbg !124
state=0x2efc300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !124
 address: 48144848
executeMemoryOperation isWrite? 1
storing value 0
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   br label %4, !dbg !126
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efaa00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144096
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144096
default offset for target address 0
base memory address 48144096
address to be dest: 2
next instruction:   br label %4, !dbg !126
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efc300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efa500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144104
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144104
default offset for target address 0
base memory address 48144104
address to be dest: 3
next instruction:   br label %4, !dbg !126
next instruction:   br label %4, !dbg !126
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efb400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144464
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144816
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efd200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144176
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144176
default offset for target address 0
base memory address 48144176
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143800
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143800
default offset for target address 0
base memory address 48143800
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efc300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144768
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144768
default offset for target address 0
base memory address 48144768
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efb900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143400
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143400
default offset for target address 0
base memory address 48143400
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efbe00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48143568
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48143568
default offset for target address 0
base memory address 48143568
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144512
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144512
default offset for target address 0
base memory address 48144512
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144752
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efb900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144432
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144432
default offset for target address 0
base memory address 48144432
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efa000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48143496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143496
default offset for target address 0
base memory address 48143496
address to be dest: 1
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efbe00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
address to be dest: 0
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efc300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144832
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144832
default offset for target address 0
base memory address 48144832
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efb900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efb400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144464
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
address to be dest: 0
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efaa00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143600
default offset for target address 0
base memory address 48143600
address to be dest: 2
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144240
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144240
default offset for target address 0
base memory address 48144240
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efaa00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144096
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144096
default offset for target address 0
base memory address 48144096
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143976
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143976
default offset for target address 0
base memory address 48143976
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efa500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144200
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144200
default offset for target address 0
base memory address 48144200
address to be dest: 2
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efbe00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144264
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efcd00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144312
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144312
default offset for target address 0
base memory address 48144312
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efd700 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144688
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efc300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144792
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144792
default offset for target address 0
base memory address 48144792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efc800 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144720
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144720
default offset for target address 0
base memory address 48144720
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efaa00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144120
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
address to be dest: 0
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efd700 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143440
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143440
default offset for target address 0
base memory address 48143440
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efaf00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144416
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144416
default offset for target address 0
base memory address 48144416
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efa500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143352
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143352
default offset for target address 0
base memory address 48143352
1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression trueaddress to be dest: 2
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144192
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144192
default offset for target address 0
base memory address 48144192
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144584
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
next instruction:   br label %4, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efbe00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144264
default offset for target address 0
base memory address 48144264
address to be dest: 1
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efa000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143552
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143552
default offset for target address 0
base memory address 48143552
address to be dest: 3
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efbe00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143384
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143384
default offset for target address 0
base memory address 48143384
address to be dest: 10
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efa500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144200
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144200
default offset for target address 0
base memory address 48144200
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144568
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144568
default offset for target address 0
base memory address 48144568
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efa500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144184
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
address to be dest: 0
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efd200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144480
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144480
default offset for target address 0
base memory address 48144480
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144640
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144640
default offset for target address 0
base memory address 48144640
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efaa00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144120
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144736
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144736
default offset for target address 0
base memory address 48144736
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efd200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144256
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efaf00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144360
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144360
default offset for target address 0
base memory address 48144360
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efc300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144832
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144832
default offset for target address 0
base memory address 48144832
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efd200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144256
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
next instruction:   br label %4, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efb400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143824
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143824
default offset for target address 0
base memory address 48143824
address to be dest: 4
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br label %4, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144352
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144352
default offset for target address 0
base memory address 48144352
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efaa00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144120
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144120
default offset for target address 0
base memory address 48144120
address to be dest: 1
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efc300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efd200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144256
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
address to be dest: 0
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efaa00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143624
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143624
default offset for target address 0
base memory address 48143624
address to be dest: 10
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efd200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143848
default offset for target address 0
base memory address 48143848
address to be dest: 5
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efbe00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143568
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143568
default offset for target address 0
base memory address 48143568
address to be dest: 4
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efb900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144656
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efa000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143608
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143608
default offset for target address 0
base memory address 48143608
address to be dest: 4
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efd700 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143360
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143360
default offset for target address 0
base memory address 48143360
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efaf00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144416
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144416
default offset for target address 0
base memory address 48144416
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efaa00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144096
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144096
default offset for target address 0
base memory address 48144096
address to be dest: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=10, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000134 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:58
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   ret i32 %8, !dbg !140
state :0x2efaa00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efa500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144184
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efaf00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   br label %4, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144408
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144408
default offset for target address 0
base memory address 48144408
next instruction:   %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %43), !dbg !189
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(48142416, 8) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:59
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efd200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144480
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144480
default offset for target address 0
base memory address 48144480
address to be dest: 2
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144544
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144544
default offset for target address 0
base memory address 48144544
next instruction:   ret i32 %8, !dbg !140
state :0x2efa000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efc800 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144696
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144696
default offset for target address 0
base memory address 48144696
next instruction:   ret i32 %8, !dbg !140
state :0x2efbe00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 1, i32* %1, align 4, !dbg !191
state=0x2efaa00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !191
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144568
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144568
default offset for target address 0
base memory address 48144568
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efa500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144184
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144184
default offset for target address 0
base memory address 48144184
address to be dest: 1
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efa500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144104
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144104
default offset for target address 0
base memory address 48144104
address to be dest: 3
next instruction:   %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %10), !dbg !133
treating as external function: printf
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   br label %45, !dbg !191
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
next instruction:   store i32 1, i32* %1, align 4, !dbg !135
state=0x2efa000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !135
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efb400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144320
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144320
default offset for target address 0
base memory address 48144320
address to be dest: 2
next instruction:   %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %43), !dbg !189
treating as external function: printf
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efaf00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144496
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efaa00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efb900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
address to be dest: 0
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efa500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144200
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144200
default offset for target address 0
base memory address 48144200
address to be dest: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efd200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144176
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144176
default offset for target address 0
base memory address 48144176
address to be dest: 2
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144584
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
next instruction:   ret i32 %46, !dbg !192
state :0x2efaa00 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   br label %4, !dbg !139
next instruction:   store i32 1, i32* %1, align 4, !dbg !191
state=0x2efbe00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !191
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efcd00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144280
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144280
default offset for target address 0
base memory address 48144280
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=3, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000070 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:22
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efaf00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
address to be dest: 0
next instruction:   ret i32 %8, !dbg !140
state :0x2efa500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efaf00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144336
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144336
default offset for target address 0
base memory address 48144336

in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expaddress to be dest: 6
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br label %45, !dbg !191
next instruction:   br label %14, !dbg !136
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efbe00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %10), !dbg !133
treating as external function: printf
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efaa00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efc300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144848
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efb400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143456
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143456
default offset for target address 0
base memory address 48143456
address to be dest: 2
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efd200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144480
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144480
default offset for target address 0
base memory address 48144480
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efaa00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   ret i32 %46, !dbg !192
state :0x2efbe00 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   br label %45, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144736
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144736
default offset for target address 0
base memory address 48144736
next instruction:   br label %14, !dbg !136
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144584
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
address to be dest: 0
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efbe00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efa000 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efd700 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144616
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144616
default offset for target address 0
base memory address 48144616
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   ret i32 %46, !dbg !192
state :0x2efa000 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144600
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efb900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143928
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143928
default offset for target address 0
base memory address 48143928
address to be dest: 6
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br label %4, !dbg !139
next instruction:   br label %4, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efb400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144320
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144320
default offset for target address 0
base memory address 48144320
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144640
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144640
default offset for target address 0
base memory address 48144640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144816
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efaf00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144416
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144416
default offset for target address 0
base memory address 48144416
address to be dest: 2
next instruction:   br label %14, !dbg !136
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efc800 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144720
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144720
default offset for target address 0
base memory address 48144720
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efc300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
address to be dest: 0
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efa000 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efaa00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efb400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144464
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
address to be dest: 0
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 1, i32* %1, align 4, !dbg !135
state=0x2efa500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !135
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efbe00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efb900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144432
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144432
default offset for target address 0
base memory address 48144432
address to be dest: 2
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efc800 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144784
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144816
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
next instruction:   br label %45, !dbg !135
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efd200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144256
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
address to be dest: 0
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efa000 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efbe00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efd700 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48143360
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48143360
default offset for target address 0
base memory address 48143360
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efa500 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efb400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144464
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
next instruction:   ret i32 %46, !dbg !192
state :0x2efa500 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144816
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
address to be dest: 0
next instruction:   br label %14, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efc300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144768
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144768
default offset for target address 0
base memory address 48144768
address to be dest: 4
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efcd00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144312
executeMemoryOperation isWrite? 1
storing value 4
address width 64
address for memop 48144312
default offset for target address 0
base memory address 48144312
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efd700 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144688
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efa500 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efc800 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144784
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
next instruction:   br label %4, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   ret i32 0, !dbg !140
state :0x2efbe00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efbe00 to 0x7fffe0abc4f0
8
8
8
8
next instruction:   br label %4, !dbg !139
next instruction:   br label %4, !dbg !139
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efcd00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144448
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efb400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144464
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144464
default offset for target address 0
base memory address 48144464
address to be dest: 1
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efb400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143824
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143824
default offset for target address 0
base memory address 48143824
address to be dest: 4
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144392
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144392
default offset for target address 0
base memory address 48144392
address to be dest: 9
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
address to be dest: 0
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efaf00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144360
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144360
default offset for target address 0
base memory address 48144360
address to be dest: 2
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144240
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144240
default offset for target address 0
base memory address 48144240
address to be dest: 5
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143800
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143800
default offset for target address 0
base memory address 48143800
address to be dest: 9
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   ret i32 0, !dbg !140
state :0x2efaa00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efaa00 to 0x7fffe0abc4f0
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efb900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48143400
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143400
default offset for target address 0
base memory address 48143400
address to be dest: 2
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efa000 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efc300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144832
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144832
default offset for target address 0
base memory address 48144832
address to be dest: 2
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144192
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144192
default offset for target address 0
base memory address 48144192
address to be dest: 2
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efa500 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
ression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounnext instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   ret i32 0, !dbg !140
state :0x2efa000 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efa000 to 0x7fffe0abc4f0
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efd700 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144688
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
next instruction:   br label %4, !dbg !139
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efb900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144432
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144432
default offset for target address 0
base memory address 48144432
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144736
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144736
default offset for target address 0
base memory address 48144736
address to be dest: 2
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efd200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144256
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efb400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144320
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144320
default offset for target address 0
base memory address 48144320
address to be dest: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efc800 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144784
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
address to be dest: 0
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efa500 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144568
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144568
default offset for target address 0
base memory address 48144568
address to be dest: 2
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efc300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144792
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144792
default offset for target address 0
base memory address 48144792
address to be dest: 2
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efd700 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144688
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
address to be dest: 0
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efb900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
address to be dest: 0
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efcd00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144448
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144512
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144512
default offset for target address 0
base memory address 48144512
address to be dest: 2
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efc800 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144672
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144672
default offset for target address 0
base memory address 48144672
address to be dest: 8
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efd700 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143440
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143440
default offset for target address 0
base memory address 48143440
address to be dest: 7
next instruction:   br label %4, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   br label %4, !dbg !139
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efd200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144256
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144256
default offset for target address 0
base memory address 48144256
address to be dest: 1
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efc800 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144720
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144720
default offset for target address 0
base memory address 48144720
address to be dest: 2
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efd700 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143360
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143360
default offset for target address 0
base memory address 48143360
address to be dest: 2
next instruction:   ret i32 %8, !dbg !140
state :0x2efb400 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efb900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144656
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %16), !dbg !142
treating as external function: printf
next instruction:   br label %4, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efc800 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144696
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144696
default offset for target address 0
base memory address 48144696
address to be dest: 2
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144408
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144408
default offset for target address 0
base memory address 48144408
address to be dest: 2
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 1, i32* %1, align 4, !dbg !144
state=0x2efb400 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !144
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efc300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144832
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144832
default offset for target address 0
base memory address 48144832
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efcd00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144448
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
address to be dest: 0
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efaf00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144416
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144416
default offset for target address 0
base memory address 48144416
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144752
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efc800 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144720
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144720
default offset for target address 0
base memory address 48144720
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efc300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
address to be dest: 0
next instruction:   br label %45, !dbg !144
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144352
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144352
default offset for target address 0
base memory address 48144352
address to be dest: 2
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efb900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144656
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144656
default offset for target address 0
base memory address 48144656
address to be dest: 1
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efd200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143848
default offset for target address 0
base memory address 48143848
address to be dest: 5
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efb400 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   ret i32 %46, !dbg !192
state :0x2efb400 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efcd00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143872
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143872
default offset for target address 0
base memory address 48143872
address to be dest: 8
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144752
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
next instruction:   br label %14, !dbg !136
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144736
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144736
default offset for target address 0
base memory address 48144736
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efb400 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   br label %4, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efd700 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144616
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144616
default offset for target address 0
base memory address 48144616
address to be dest: 2
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144816
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
address to be dest: 0
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efc800 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144784
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
address to be dest: 0
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144192
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144192
default offset for target address 0
base memory address 48144192
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efb400 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efaf00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
address to be dest: 0
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144584
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
address to be dest: 0
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efd200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144480
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144480
default offset for target address 0
base memory address 48144480
address to be dest: 4
next instruction:   ret i32 0, !dbg !140
state :0x2efa500 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efa500 to 0x7fffe0abc4f0
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144568
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144568
default offset for target address 0
base memory address 48144568
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efc800 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144784
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
address to be dest: 0
next instruction:   ret i32 %8, !dbg !140
state :0x2efd200 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144816
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efb400 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   br label %4, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efc300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144848
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efb900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143928
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143928
default offset for target address 0
base memory address 48143928
address to be dest: 6
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144816
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144816
default offset for target address 0
base memory address 48144816
ds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target adaddress to be dest: 1
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144752
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
address to be dest: 0
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144240
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144240
default offset for target address 0
base memory address 48144240
address to be dest: 5
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %19), !dbg !147
treating as external function: printf
next instruction:   br label %4, !dbg !139
next instruction:   store i32 1, i32* %1, align 4, !dbg !149
state=0x2efd200 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !149
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144600
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
next instruction:   br label %4, !dbg !139
next instruction:   br label %45, !dbg !149
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144600
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144600
default offset for target address 0
base memory address 48144600
address to be dest: 1
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efaf00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144496
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efc300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144848
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144848
default offset for target address 0
base memory address 48144848
address to be dest: 1
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efcd00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144312
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144312
default offset for target address 0
base memory address 48144312
address to be dest: 2
next instruction:   ret i32 0, !dbg !140
state :0x2efb400 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efb400 to 0x7fffe0abc4f0
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144736
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144736
default offset for target address 0
base memory address 48144736
address to be dest: 4
next instruction:   br label %4, !dbg !139
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efd200 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   ret i32 %46, !dbg !192
state :0x2efd200 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143976
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143976
default offset for target address 0
base memory address 48143976
address to be dest: 7
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efd700 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48143360
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48143360
default offset for target address 0
base memory address 48143360
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   br label %14, !dbg !136
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143800
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143800
default offset for target address 0
base memory address 48143800
address to be dest: 9
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efd200 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   br label %4, !dbg !139
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efd700 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144688
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
address to be dest: 0
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efc300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144768
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144768
default offset for target address 0
base memory address 48144768
address to be dest: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=5, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000087 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:30
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efc800 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144784
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144784
default offset for target address 0
base memory address 48144784
address to be dest: 1
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efb900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144432
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144432
default offset for target address 0
base memory address 48144432
address to be dest: 4
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efd200 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efc800 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144672
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144672
default offset for target address 0
base memory address 48144672
address to be dest: 8
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144584
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
next instruction:   ret i32 %8, !dbg !140
state :0x2fd8a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144568
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144568
default offset for target address 0
base memory address 48144568
address to be dest: 4
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efc300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144832
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144832
default offset for target address 0
base memory address 48144832
address to be dest: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=4, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000081 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:26
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efd200 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efaf00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144496
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144496
default offset for target address 0
base memory address 48144496
address to be dest: 1
next instruction:   ret i32 %8, !dbg !140
state :0x2efc300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efaf00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144336
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144336
default offset for target address 0
base memory address 48144336
address to be dest: 6
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efaf00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144416
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144416
default offset for target address 0
base memory address 48144416
address to be dest: 4
next instruction:   %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %16), !dbg !142
treating as external function: printf
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efd700 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144688
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
next instruction:   ret i32 0, !dbg !140
state :0x2efd200 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efd200 to 0x7fffe0abc4f0
next instruction:   ret i32 %8, !dbg !140
state :0x2fd8000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %19), !dbg !147
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !149
state=0x2fd8a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !149
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144640
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144640
default offset for target address 0
base memory address 48144640
address to be dest: 2
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efc800 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144720
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144720
default offset for target address 0
base memory address 48144720
address to be dest: 4
next instruction:   store i32 1, i32* %1, align 4, !dbg !144
state=0x2efc300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !144
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   br label %45, !dbg !144
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144584
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144584
default offset for target address 0
base memory address 48144584
address to be dest: 1
next instruction:   ret i32 %8, !dbg !140
state :0x2efaf00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   br label %45, !dbg !149
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2efcd00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144280
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144280
default offset for target address 0
base memory address 48144280
address to be dest: 2
next instruction:   ret i32 %8, !dbg !140
state :0x2efc800 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !139
next instruction:   %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %37), !dbg !179
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !181
state=0x2efc800 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !181
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %40), !dbg !184
treating as external function: printf
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efc300 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efd700 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144688
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144688
default offset for target address 0
base memory address 48144688
address to be dest: 1
next instruction:   %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %30), !dbg !166
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !168
state=0x2efaf00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !168
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48144392
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144392
default offset for target address 0
base memory address 48144392
address to be dest: 9
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
next instruction:   br label %45, !dbg !181
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !134
state=0x2fd8500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !134
 address: 48144544
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144544
default offset for target address 0
base memory address 48144544
address to be dest: 2
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2efcd00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144312
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144312
default offset for target address 0
base memory address 48144312
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !135
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2efcd00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144448
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
address to be dest: 0
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efc800 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   br label %45, !dbg !168
next instruction:   store i32 %11, i32* %result, align 4, !dbg !136
state=0x2fd8500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !136
 address: 48144640
executeMemoryOperation isWrite? 1
storing value 8
address width 64
address for memop 48144640
default offset for target address 0
base memory address 48144640
next instruction:   ret i32 %46, !dbg !192
state :0x2efc300 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144192
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144192
default offset for target address 0
base memory address 48144192
address to be dest: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=9, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000128 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:52
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !137
state=0x2fd8500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !137
 address: 48144752
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
address to be dest: 0
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2fd8a00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   store i32 1, i32* %1, align 4, !dbg !186
state=0x2fd8000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !186
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   ret i32 %46, !dbg !192
state :0x2fd8a00 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efaf00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   br label %14, !dbg !136
next instruction:   br label %45, !dbg !186
next instruction:   ret i32 %46, !dbg !192
state :0x2efaf00 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efd700 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143440
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143440
default offset for target address 0
base memory address 48143440
address to be dest: 7
next instruction:   br label %14, !dbg !136
next instruction:   br label %14, !dbg !136
next instruction:   ret i32 %46, !dbg !192
state :0x2efc800 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   br label %14, !dbg !136
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efc300 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2fd8000 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
dress 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset fnext instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2fd8a00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   ret i32 %8, !dbg !140
state :0x2fd8f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %40), !dbg !184
treating as external function: printf
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efd700 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48143360
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143360
default offset for target address 0
base memory address 48143360
address to be dest: 4
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   ret i32 %46, !dbg !192
state :0x2fd8000 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efc800 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efc300 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2fd8500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144752
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   br label %14, !dbg !136
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efaf00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2fd8000 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   br label %4, !dbg !139
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=6, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000107 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:38
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %13 = add nsw i32 %12, 1, !dbg !137
next instruction:   store i32 1, i32* %1, align 4, !dbg !186
state=0x2fd8f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !186
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efaf00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !139
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efc800 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efaf00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   br label %4, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   br label %4, !dbg !139
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efc300 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   br label %45, !dbg !186
next instruction:   store i32 %13, i32* %i, align 4, !dbg !137
state=0x2efcd00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !137
 address: 48144448
executeMemoryOperation isWrite? 1
storing value 2
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   ret i32 %8, !dbg !140
state :0x2efb900 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2fd8f00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br label %4, !dbg !139
next instruction:   %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %30), !dbg !166
treating as external function: printf
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 %46, !dbg !192
state :0x2fd8f00 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2fd8000 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2fd8500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144752
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144752
default offset for target address 0
base memory address 48144752
address to be dest: 1
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2fd8a00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   ret i32 0, !dbg !140
state :0x2efc300 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efc300 to 0x7fffe0abc4f0
next instruction:   br label %4, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2fd8500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143976
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143976
default offset for target address 0
base memory address 48143976
address to be dest: 7
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !127
state=0x2efcd00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !127
 address: 48144448
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144448
default offset for target address 0
base memory address 48144448
address to be dest: 1
next instruction:   br label %4, !dbg !139
next instruction:   ret i32 %8, !dbg !140
state :0x2efd700 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efc800 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2fd8a00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2fd8000 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %33), !dbg !171
treating as external function: printf
next instruction:   ret i32 0, !dbg !140
state :0x2efaf00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efaf00 to 0x7fffe0abc4f0
8
8
8
8
8
8
8
8
8
8
next instruction:   br label %14, !dbg !136
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2fd8f00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2fd8500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144640
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144640
default offset for target address 0
base memory address 48144640
address to be dest: 4
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !130
state=0x2efcd00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !130
 address: 48143872
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143872
default offset for target address 0
base memory address 48143872
address to be dest: 8
next instruction:   store i32 1, i32* %1, align 4, !dbg !173
state=0x2efd700 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !173
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   ret i32 0, !dbg !140
state :0x2fd8a00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2fd8a00 to 0x7fffe0abc4f0
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 0, !dbg !140
state :0x2efc800 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efc800 to 0x7fffe0abc4f0
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !131
next instruction:   br label %45, !dbg !173
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efd700 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=7, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000113 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:42
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !132
state=0x2efcd00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !132
 address: 48144312
executeMemoryOperation isWrite? 0
address width 64
address for memop 48144312
default offset for target address 0
base memory address 48144312
address to be dest: 4
next instruction:   store i32 1, i32* %1, align 4, !dbg !168
state=0x2efb900 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !168
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   ret i32 %8, !dbg !140
state :0x2fd8500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2fd8f00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !139
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 0, !dbg !140
state :0x2fd8000 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2fd8000 to 0x7fffe0abc4f0
next instruction:   %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %33), !dbg !171
treating as external function: printf
next instruction:   br i1 %7, label %9, label %14, !dbg !133
stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

stack trace=	#000000035 in loop (ru=8, base=2) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14
	#100000122 in foo (L, H) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:48
	#200000169 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 true branch 3 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:14 false branch 0 times
branching to the false successor due to reaching loop bound for the true branch
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2fd8f00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   ret i32 %46, !dbg !192
state :0x2efd700 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br label %45, !dbg !168
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   br label %14, !dbg !136
next instruction:   ret i32 %8, !dbg !140
state :0x2efcd00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   ret i32 0, !dbg !140
state :0x2fd8f00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2fd8f00 to 0x7fffe0abc4f0
next instruction:   store i32 1, i32* %1, align 4, !dbg !173
state=0x2fd8500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !173
 address: 48142936
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %37), !dbg !179
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !181
state=0x2efcd00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !181
 address: 48143264
executeMemoryOperation isWrite? 1
storing value 1
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efb900 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   br label %45, !dbg !173
next instruction:   ret i32 %46, !dbg !192
state :0x2efb900 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2fd8500 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48142936
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142936
default offset for target address 0
base memory address 48142936
next instruction:   ret i32 %46, !dbg !192
state :0x2fd8500 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143128
checking done
next instruction:   br label %14, !dbg !136
next instruction:   br label %45, !dbg !181
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efd700 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !192
state=0x2efcd00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !192
 address: 48143264
executeMemoryOperation isWrite? 0
address width 64
address for memop 48143264
default offset for target address 0
base memory address 48143264
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2fd8500 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
next instruction:   br label %14, !dbg !136
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2fd8500 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efd700 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efb900 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   ret i32 %46, !dbg !192
state :0x2efcd00 checking foo to see if an input function
checking leak in foo with 5locals 
Sensitive leak via local variable 4 in function foo at address 48143656
checking done
next instruction:   br label %4, !dbg !139
next instruction:   br label %4, !dbg !139
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efd700 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2fd8500 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br label %14, !dbg !136
next instruction:   %15 = load i32, i32* %3, align 4, !dbg !137
state=0x2efcd00 memory operation (inside bar) 
  %15 = load i32, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %15 = load i32, i32* %3, align 4, !dbg !137
address to be dest: (ReadLSB w32 0 bar_arg_2_0)
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 1 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 0, !dbg !140
state :0x2fd8500 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2fd8500 to 0x7fffe0abc4f0
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   %16 = add nsw i32 %15, 1, !dbg !137
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efb900 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 0, !dbg !140
state :0x2efd700 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efd700 to 0x7fffe0abc4f0
next instruction:   store i32 %16, i32* %3, align 4, !dbg !137
state=0x2efcd00 memory operation (inside bar) 
  store i32 %16, i32* %3, align 4, !dbg !137
 address: 48142744
executeMemoryOperation isWrite? 1
storing value (Add w32 2
          (ReadLSB w32 0 bar_arg_2_0))
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
next instruction:   br label %4, !dbg !139
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efb900 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   br label %4, !dbg !139
next instruction:   %5 = load i32, i32* %3, align 4, !dbg !123
state=0x2efcd00 memory operation (inside bar) 
  %5 = load i32, i32* %3, align 4, !dbg !123
 address: 48142744
executeMemoryOperation isWrite? 0
address width 64
address for memop 48142744
default offset for target address 0
base memory address 48142744
Is i32* (count=0) to be lazy init?
  %5 = load i32, i32* %3, align 4, !dbg !123
address to be dest: (Add w32 1
          (ReadLSB w32 0 bar_arg_2_0))
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 0, !dbg !140
state :0x2efcd00 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efcd00 to 0x7fffe0abc4f0
8
8
next instruction:   %6 = icmp slt i32 %5, 15, !dbg !127
next instruction:   br i1 %6, label %7, label %17, !dbg !128
stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

stack trace=	#000000159 in bar (L, H, i) at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69

forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 true branch 2 times
forked at /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:69 false branch 2 times
next instruction:   ret i32 0, !dbg !140
state :0x2efb900 checking bar to see if an input function
terminating state with bar
checking leak in bar with 7locals 
checking done
cloning state 0x2efb900 to 0x7fffe0abc4f0
Size of rdmap : 35

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_1)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_1)
           0)
      (And (Eq 4294967295 N0)
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 97 , 97 ]

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_1))
(And (Slt (ReadLSB w32 0 foo_low_0_1)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 91 , 91 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_1)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_1)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 97 , 97 ]

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_1))
(And (Slt (ReadLSB w32 0 foo_low_0_1)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 91 , 91 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_1)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_1)
           0)
      (And (Eq 4294967295 N0)
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 97 , 97 ]

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_1))
(And (Slt (ReadLSB w32 0 foo_low_0_1)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 91 , 91 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_1)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_1)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 97 , 97 ]

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_1))
(And (Slt (ReadLSB w32 0 foo_low_0_1)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 91 , 91 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 3
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_1))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_low_0_1)
                    1))
           (Slt N0 5))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 94 , 94 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_high_1_1)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_low_0_1)
               0))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 91 , 91 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 3
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_1))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_low_0_1)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 94 , 94 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_high_1_1)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_low_0_1)
               0))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 91 , 91 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_0))
(And (Slt (ReadLSB w32 0 foo_low_0_0)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 81 , 81 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 87 , 87 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_0))
(And (Slt (ReadLSB w32 0 foo_low_0_0)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 81 , 81 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 87 , 87 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_0))
(And (Slt (ReadLSB w32 0 foo_low_0_0)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 81 , 81 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 87 , 87 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 6
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_0))
(And (Slt (ReadLSB w32 0 foo_low_0_0)
           1)
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 81 , 81 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_high_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_low_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 0
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 87 , 87 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 3
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_low_0_0)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 84 , 84 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_high_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_low_0_0)
               0))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 81 , 81 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 3
Instruction:
  %11 = load i32, i32* %1, align 4, !dbg !134

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71

[ (Slt 0
      (ReadLSB w32 0 foo_high_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_low_0_0)
                    1))
           (Slt N0 5))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 84 , 84 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_high_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_low_0_0)
               0))
      (Eq 0
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 81 , 81 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:21
  %8 = icmp slt i32 %6, 1, !dbg !129

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:35
  %22 = icmp slt i32 %6, 0, !dbg !150

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : bar

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c:71
	=====================

>>>> Found violations at  : 1 locations.
Info Flow Summary for function 
all high sym regions: 
foo_high_1_0
offset=0, size=32
foo_high_1_1
offset=0, size=32
all low sym regions: 
foo_low_0_0
offset=0, size=32
foo_low_0_1
offset=0, size=32
return_value
offset=0, size=32
 Code loc with leaks:
/home/tuba/Documents/tools/pmguidedsymex/test/test26/test26.c 64: 



KLEE: done: #Timing Side Channel  Locs = 1
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 10
KLEE: done: maxInst = 98
KLEE: done: HAncestors = 4
KLEE: done: secretDependentUniqueObser = 6
KLEE: done: HLeaksOnStack = 1
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: secretDepStates= 16
KLEE: done: secretIndepStates= 2
KLEE: done: total instructions = 964
KLEE: done: completed paths = 18
KLEE: done: generated tests = 18
or target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
(forced) offset for target address 0
bounds check expression true
in bounds? 1
