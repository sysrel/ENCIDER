KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test1/klee-out-0"
KLEE: Using Z3 solver backend
KLEE: Logging queries that reach solver in .smt2 format to /home/tuba/Documents/tools/pmguidedsymex/test/test1/klee-out-0/solver-queries.smt2

Uncov init=813
Couldn't open file 
Using cache line mode (as default)!
KLEE: WARNING: undefined reference to function: printf
lazy init arg foo_arg_0_0
 setting low security region offset= 0 size= 32
clearing foo_arg_0_0 from high
recording address of foo_arg_0_0 51132408 as not security sensitive
lazy init arg foo_arg_1_0
 setting high security region offset= 0 size= 32
setting symbolic region high: foo_arg_1_0
recording address of foo_arg_1_0 51132464 as security sensitive 
High symbolic regions:
foo_arg_1_0
Low symbolic regions:
foo_arg_0_0
Registering publicOutputReturningFName as foo
clearing return_value from high
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51132600
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51132632
next instruction:   %3 = alloca i32, align 4
Local alloc:   %3 = alloca i32, align 4 at address 51132648
next instruction:   store i32 %L, i32* %2, align 4
reached foo
state=0x3224000 memory operation (inside foo) 
  store i32 %L, i32* %2, align 4
 address: 51132632
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_arg_0_0)
address for memop 51132632
default offset for target address 0
base memory address 51132632
next instruction:   store i32 %H, i32* %3, align 4
state=0x3224000 memory operation (inside foo) 
  store i32 %H, i32* %3, align 4
 address: 51132648
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_arg_1_0)
address for memop 51132648
default offset for target address 0
base memory address 51132648
next instruction:   %4 = load i32, i32* %3, align 4, !dbg !119
state=0x3224000 memory operation (inside foo) 
  %4 = load i32, i32* %3, align 4, !dbg !119
 address: 51132648
executeMemoryOperation isWrite? 0
address for memop 51132648
default offset for target address 0
base memory address 51132648
next instruction:   %5 = icmp sgt i32 %4, 0, !dbg !121
next instruction:   %6 = load i32, i32* %2, align 4, !dbg !122
state=0x3224000 memory operation (inside foo) 
  %6 = load i32, i32* %2, align 4, !dbg !122
 address: 51132632
executeMemoryOperation isWrite? 0
address for memop 51132632
default offset for target address 0
base memory address 51132632
next instruction:   br i1 %5, label %7, label %21, !dbg !125
next instruction:   %8 = icmp slt i32 %6, 1, !dbg !126
next instruction:   %22 = icmp slt i32 %6, 0, !dbg !144
next instruction:   br i1 %22, label %23, label %42, !dbg !147
next instruction:   br i1 %8, label %9, label %12, !dbg !127
next instruction:   %43 = call i32 @loop(i32 10, i32 2), !dbg !177
next instruction:   %13 = load i32, i32* %2, align 4, !dbg !132
state=0x3226d00 memory operation (inside foo) 
  %13 = load i32, i32* %2, align 4, !dbg !132
 address: 51132632
executeMemoryOperation isWrite? 0
address for memop 51132632
default offset for target address 0
base memory address 51132632
next instruction:   %10 = call i32 @loop(i32 3, i32 2), !dbg !128
next instruction:   %24 = load i32, i32* %3, align 4, !dbg !148
state=0x3224500 memory operation (inside foo) 
  %24 = load i32, i32* %3, align 4, !dbg !148
 address: 51132648
executeMemoryOperation isWrite? 0
address for memop 51132648
default offset for target address 0
base memory address 51132648
next instruction:   %25 = icmp sgt i32 %24, -10, !dbg !151
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51132296
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51133128
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51133032
next instruction:   %14 = icmp slt i32 %13, 5, !dbg !134
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51132752
next instruction:   br i1 %14, label %15, label %18, !dbg !135
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51132912
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51132848
next instruction:   %26 = load i32, i32* %2, align 4, !dbg !152
state=0x3224500 memory operation (inside foo) 
  %26 = load i32, i32* %2, align 4, !dbg !152
 address: 51132632
executeMemoryOperation isWrite? 0
address for memop 51132632
default offset for target address 0
base memory address 51132632
next instruction:   %16 = call i32 @loop(i32 4, i32 2), !dbg !136
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x3224a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51133128
executeMemoryOperation isWrite? 1
storing value 10
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51133088
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51132888
next instruction:   store i32 %base, i32* %2, align 4
state=0x3224a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51133032
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3224a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51132840
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51132856
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51132808
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3224000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51132296
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51132296
default offset for target address 0
base memory address 51132296
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3224a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   store i32 %base, i32* %2, align 4
state=0x3224000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51132848
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132848
default offset for target address 0
base memory address 51132848
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51132792
next instruction:   %27 = icmp eq i32 %26, -1, !dbg !155
next instruction:   %19 = call i32 @loop(i32 5, i32 2), !dbg !140
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3224a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3226d00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51133088
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133088
default offset for target address 0
base memory address 51133088
next instruction:   br i1 %25, label %28, label %35, !dbg !156
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51133408
next instruction:   br label %4, !dbg !123
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3224000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51132848
executeMemoryOperation isWrite? 0
address for memop 51132848
default offset for target address 0
base memory address 51132848
next instruction:   store i32 %base, i32* %2, align 4
state=0x3226d00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51132840
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132840
default offset for target address 0
base memory address 51132840
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3226d00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51132840
executeMemoryOperation isWrite? 0
address for memop 51132840
default offset for target address 0
base memory address 51132840
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3224000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51132888
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3226d00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51132856
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   br i1 %27, label %36, label %39, !dbg !166
next instruction:   %37 = call i32 @loop(i32 8, i32 2), !dbg !168
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51133152
next instruction:   %40 = call i32 @loop(i32 9, i32 2), !dbg !173
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51133424
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51133112
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51133160
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51133064
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51133104
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3224000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51132808
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   br i1 %27, label %29, label %32, !dbg !157
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3226d00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51132792
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51133688
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   br label %4, !dbg !123
next instruction:   br label %4, !dbg !123
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132296
executeMemoryOperation isWrite? 0
address for memop 51132296
default offset for target address 0
base memory address 51132296
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226d00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51132720
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132888
executeMemoryOperation isWrite? 0
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %33 = call i32 @loop(i32 7, i32 2), !dbg !162
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3224f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51133408
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51133192
next instruction:   store i32 %base, i32* %2, align 4
state=0x3224f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51133152
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132848
executeMemoryOperation isWrite? 0
address for memop 51132848
default offset for target address 0
base memory address 51132848
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3224f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51133152
executeMemoryOperation isWrite? 0
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226d00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133088
executeMemoryOperation isWrite? 0
address for memop 51133088
default offset for target address 0
base memory address 51133088
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132888
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %30 = call i32 @loop(i32 6, i32 2), !dbg !158
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3224f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51133160
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3224f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51133064
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   br label %4, !dbg !123
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133408
executeMemoryOperation isWrite? 0
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3226300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51133424
executeMemoryOperation isWrite? 1
storing value 9
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %base, i32* %2, align 4
state=0x3226300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51133112
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226d00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132856
executeMemoryOperation isWrite? 0
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   br label %4, !dbg !134
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3226300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3226300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3226300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br label %4, !dbg !123
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51132936
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51133256
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132808
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133160
executeMemoryOperation isWrite? 0
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %1 = alloca i32, align 4
Local alloc:   %1 = alloca i32, align 4 at address 51133272
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51133296
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51133288
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %2 = alloca i32, align 4
Local alloc:   %2 = alloca i32, align 4 at address 51133320
next instruction:   br label %4, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3225e00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51133104
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51133232
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133152
executeMemoryOperation isWrite? 0
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51133344
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3227200 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51133272
executeMemoryOperation isWrite? 1
storing value 7
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   store i32 %base, i32* %2, align 4
state=0x3225e00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51133192
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %result = alloca i32, align 4
Local alloc:   %result = alloca i32, align 4 at address 51133376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %i = alloca i32, align 4
Local alloc:   %i = alloca i32, align 4 at address 51133400
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132296
executeMemoryOperation isWrite? 0
address for memop 51132296
default offset for target address 0
base memory address 51132296
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226d00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132840
executeMemoryOperation isWrite? 0
address for memop 51132840
default offset for target address 0
base memory address 51132840
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226d00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132856
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   store i32 %ru, i32* %1, align 4
state=0x3224500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 51132936
executeMemoryOperation isWrite? 1
storing value 6
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %base, i32* %2, align 4
state=0x3227200 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51133296
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132888
executeMemoryOperation isWrite? 0
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %base, i32* %2, align 4
state=0x3224500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 51133320
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3225e00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3225e00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3227200 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3225e00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3227200 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   br label %4, !dbg !123
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133160
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   br label %4, !dbg !134
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !119
state=0x3224500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !119
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132848
executeMemoryOperation isWrite? 0
address for memop 51132848
default offset for target address 0
base memory address 51132848
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   store i32 %3, i32* %result, align 4, !dbg !120
state=0x3224500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !120
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132888
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226d00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3227200 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226d00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133088
executeMemoryOperation isWrite? 0
address for memop 51133088
default offset for target address 0
base memory address 51133088
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br label %4, !dbg !123
next instruction:   br label %4, !dbg !134
next instruction:   store i32 0, i32* %i, align 4, !dbg !121
state=0x3224500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !121
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133408
executeMemoryOperation isWrite? 0
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   br label %4, !dbg !123
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226d00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132856
executeMemoryOperation isWrite? 0
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132808
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133160
executeMemoryOperation isWrite? 0
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br label %4, !dbg !134
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226d00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132840
executeMemoryOperation isWrite? 0
address for memop 51132840
default offset for target address 0
base memory address 51132840
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133152
executeMemoryOperation isWrite? 0
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133160
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132296
executeMemoryOperation isWrite? 0
address for memop 51132296
default offset for target address 0
base memory address 51132296
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132888
executeMemoryOperation isWrite? 0
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226d00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132856
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132848
executeMemoryOperation isWrite? 0
address for memop 51132848
default offset for target address 0
base memory address 51132848
next instruction:   br label %4, !dbg !134
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132888
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226d00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226d00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133088
executeMemoryOperation isWrite? 0
address for memop 51133088
default offset for target address 0
base memory address 51133088
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   br label %4, !dbg !134
next instruction:   br label %4, !dbg !134
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132808
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133408
executeMemoryOperation isWrite? 0
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132808
executeMemoryOperation isWrite? 0
address for memop 51132808
default offset for target address 0
base memory address 51132808
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132296
executeMemoryOperation isWrite? 0
address for memop 51132296
default offset for target address 0
base memory address 51132296
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226d00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132856
executeMemoryOperation isWrite? 0
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132888
executeMemoryOperation isWrite? 0
address for memop 51132888
default offset for target address 0
base memory address 51132888
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 64
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133160
executeMemoryOperation isWrite? 0
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   ret i32 %8, !dbg !135
state :0x3224000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226d00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132840
executeMemoryOperation isWrite? 0
address for memop 51132840
default offset for target address 0
base memory address 51132840
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %10), !dbg !130
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(51132336, 16) at /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:23
next instruction:   store i32 1, i32* %1, align 4, !dbg !131
state=0x3224000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !131
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   br label %45, !dbg !131
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133152
executeMemoryOperation isWrite? 0
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3224000 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226d00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132856
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133160
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   ret i32 %46, !dbg !181
state :0x3224000 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   br label %4, !dbg !134
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   br label %4, !dbg !134
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   br label %4, !dbg !134
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133408
executeMemoryOperation isWrite? 0
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226d00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133160
executeMemoryOperation isWrite? 0
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133152
executeMemoryOperation isWrite? 0
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226d00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133088
executeMemoryOperation isWrite? 0
address for memop 51133088
default offset for target address 0
base memory address 51133088
next instruction:   br label %4, !dbg !134
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 128
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133160
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   br label %4, !dbg !134
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226d00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132856
executeMemoryOperation isWrite? 0
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 6
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133408
executeMemoryOperation isWrite? 0
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133160
executeMemoryOperation isWrite? 0
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226d00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51132840
executeMemoryOperation isWrite? 0
address for memop 51132840
default offset for target address 0
base memory address 51132840
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133152
executeMemoryOperation isWrite? 0
address for memop 51133152
default offset for target address 0
base memory address 51133152
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226d00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132856
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   br label %4, !dbg !134
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226d00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132792
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133160
executeMemoryOperation isWrite? 1
storing value 64
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226d00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132792
executeMemoryOperation isWrite? 0
address for memop 51132792
default offset for target address 0
base memory address 51132792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 256
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226d00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133088
executeMemoryOperation isWrite? 0
address for memop 51133088
default offset for target address 0
base memory address 51133088
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133064
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 7
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226d00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132856
executeMemoryOperation isWrite? 0
address for memop 51132856
default offset for target address 0
base memory address 51132856
next instruction:   br label %4, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133064
executeMemoryOperation isWrite? 0
address for memop 51133064
default offset for target address 0
base memory address 51133064
next instruction:   ret i32 %8, !dbg !135
state :0x3226d00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133408
executeMemoryOperation isWrite? 0
address for memop 51133408
default offset for target address 0
base memory address 51133408
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %16), !dbg !138
treating as external function: printf
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 1, i32* %1, align 4, !dbg !139
state=0x3226d00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !139
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133160
executeMemoryOperation isWrite? 0
address for memop 51133160
default offset for target address 0
base memory address 51133160
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br label %45, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   br label %4, !dbg !134
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3226d00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 512
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   ret i32 %8, !dbg !135
state :0x3224f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %19), !dbg !142
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !143
state=0x3224f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !143
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   br label %45, !dbg !143
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   ret i32 %46, !dbg !181
state :0x3226d00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3224f00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br label %4, !dbg !134
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   ret i32 %46, !dbg !181
state :0x3224f00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 2
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   br label %4, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 9
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 16
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   br label %4, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133032
executeMemoryOperation isWrite? 0
address for memop 51133032
default offset for target address 0
base memory address 51133032
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51132752
executeMemoryOperation isWrite? 1
storing value 2048
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 3
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   br label %4, !dbg !134
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132912
executeMemoryOperation isWrite? 1
storing value 10
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132912
executeMemoryOperation isWrite? 0
address for memop 51132912
default offset for target address 0
base memory address 51132912
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133128
executeMemoryOperation isWrite? 0
address for memop 51133128
default offset for target address 0
base memory address 51133128
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 64
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51132752
executeMemoryOperation isWrite? 0
address for memop 51132752
default offset for target address 0
base memory address 51132752
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   ret i32 %8, !dbg !135
state :0x3224a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !134
next instruction:   %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %43), !dbg !179
treating as external function: printf
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   store i32 1, i32* %1, align 4, !dbg !180
state=0x3224a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !180
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %45, !dbg !180
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 32
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   br label %4, !dbg !134
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3224a00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   ret i32 %46, !dbg !181
state :0x3224a00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 4
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   br label %4, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 64
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 128
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 6
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 64
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 64
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3224500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133320
executeMemoryOperation isWrite? 0
address for memop 51133320
default offset for target address 0
base memory address 51133320
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3224500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133376
executeMemoryOperation isWrite? 1
storing value 128
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 256
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 5
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 7
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br label %4, !dbg !134
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3224500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133400
executeMemoryOperation isWrite? 1
storing value 6
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   br label %4, !dbg !134
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 128
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3224500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133400
executeMemoryOperation isWrite? 0
address for memop 51133400
default offset for target address 0
base memory address 51133400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 6
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3224500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51132936
executeMemoryOperation isWrite? 0
address for memop 51132936
default offset for target address 0
base memory address 51132936
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3224500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133376
executeMemoryOperation isWrite? 0
address for memop 51133376
default offset for target address 0
base memory address 51133376
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3225e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133192
executeMemoryOperation isWrite? 0
address for memop 51133192
default offset for target address 0
base memory address 51133192
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   ret i32 %8, !dbg !135
state :0x3224500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %30), !dbg !160
treating as external function: printf
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   store i32 1, i32* %1, align 4, !dbg !161
state=0x3224500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !161
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   br label %45, !dbg !161
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3224500 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   ret i32 %46, !dbg !181
state :0x3224500 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 128
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3225e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133256
executeMemoryOperation isWrite? 1
storing value 512
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 6
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3225e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133288
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   br label %4, !dbg !134
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3225e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133288
executeMemoryOperation isWrite? 0
address for memop 51133288
default offset for target address 0
base memory address 51133288
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 256
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3225e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133104
executeMemoryOperation isWrite? 0
address for memop 51133104
default offset for target address 0
base memory address 51133104
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3225e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133256
executeMemoryOperation isWrite? 0
address for memop 51133256
default offset for target address 0
base memory address 51133256
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 7
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3227200 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133296
executeMemoryOperation isWrite? 0
address for memop 51133296
default offset for target address 0
base memory address 51133296
next instruction:   br label %4, !dbg !134
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   ret i32 %8, !dbg !135
state :0x3225e00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %37), !dbg !171
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !172
state=0x3225e00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !172
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3227200 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133232
executeMemoryOperation isWrite? 1
storing value 256
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   br label %45, !dbg !172
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3225e00 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3227200 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51133344
executeMemoryOperation isWrite? 1
storing value 7
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   br label %4, !dbg !134
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   ret i32 %46, !dbg !181
state :0x3225e00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3227200 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51133344
executeMemoryOperation isWrite? 0
address for memop 51133344
default offset for target address 0
base memory address 51133344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3227200 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133272
executeMemoryOperation isWrite? 0
address for memop 51133272
default offset for target address 0
base memory address 51133272
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 512
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3227200 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133232
executeMemoryOperation isWrite? 0
address for memop 51133232
default offset for target address 0
base memory address 51133232
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   ret i32 %8, !dbg !135
state :0x3227200 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %33), !dbg !164
treating as external function: printf
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 8
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br label %4, !dbg !134
next instruction:   store i32 1, i32* %1, align 4, !dbg !165
state=0x3227200 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !165
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   br label %45, !dbg !165
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3227200 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   ret i32 %46, !dbg !181
state :0x3227200 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !130
state=0x3226300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !130
 address: 51133112
executeMemoryOperation isWrite? 0
address for memop 51133112
default offset for target address 0
base memory address 51133112
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !131
next instruction:   store i32 %11, i32* %result, align 4, !dbg !132
state=0x3226300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !132
 address: 51133688
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %13 = add nsw i32 %12, 1, !dbg !133
next instruction:   store i32 %13, i32* %i, align 4, !dbg !133
state=0x3226300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !133
 address: 51132720
executeMemoryOperation isWrite? 1
storing value 9
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   br label %4, !dbg !134
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !124
state=0x3226300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !124
 address: 51132720
executeMemoryOperation isWrite? 0
address for memop 51132720
default offset for target address 0
base memory address 51132720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !126
state=0x3226300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !126
 address: 51133424
executeMemoryOperation isWrite? 0
address for memop 51133424
default offset for target address 0
base memory address 51133424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !127
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !128
state=0x3226300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !128
 address: 51133688
executeMemoryOperation isWrite? 0
address for memop 51133688
default offset for target address 0
base memory address 51133688
next instruction:   br i1 %7, label %9, label %14, !dbg !129
next instruction:   ret i32 %8, !dbg !135
state :0x3226300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %40), !dbg !175
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !176
state=0x3226300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !176
 address: 51132600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   br label %45, !dbg !176
next instruction:   %46 = load i32, i32* %1, align 4, !dbg !181
state=0x3226300 memory operation (inside foo) 
  %46 = load i32, i32* %1, align 4, !dbg !181
 address: 51132600
executeMemoryOperation isWrite? 0
address for memop 51132600
default offset for target address 0
base memory address 51132600
next instruction:   ret i32 %46, !dbg !181
state :0x3226300 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 5 in function foo at address 51132648
checking done
16
32
64
2048
128
512
256
1024
Size of rdmap : 15

===============
Found Violation at : 
diff : 24
Instruction:
  %24 = load i32, i32* %3, align 4, !dbg !148

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:36

[ (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
(And (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 110 , 110 ]

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 134 , 134 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:47
  br i1 %27, label %36, label %39, !dbg !166

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:37
  br i1 %27, label %29, label %32, !dbg !157

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %24 = load i32, i32* %3, align 4, !dbg !148

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:36

[ (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 foo_arg_0_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 122 , 122 ]

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 foo_arg_0_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 146 , 146 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:47
  br i1 %27, label %36, label %39, !dbg !166

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:37
  br i1 %27, label %29, label %32, !dbg !157

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

===============

===============
Found Violation at : 
diff : 69
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1))
           (Slt N0 5))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 83 , 83 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 57
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 95 , 95 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 84
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 54
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 122 , 122 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 122 , 122 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 146 , 146 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 42
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 110 , 110 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 110 , 110 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 134 , 134 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 78
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 146 , 146 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 66
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 68 , 68 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 134 , 134 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:35
  %22 = icmp slt i32 %6, 0, !dbg !144

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:21
  %8 = icmp slt i32 %6, 1, !dbg !126

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:36
	=====================

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c:20
	=====================

>>>> Found violations at  : 2 locations.
maxsmt disjunct: (And (Slt 0
           (ReadLSB w32 0 foo_arg_1_0_r_1))
      (Slt (ReadLSB w32 0 foo_arg_0_0)
           1))
maxsmt disjunct: (And (And (Slt 0
                (ReadLSB w32 0 foo_arg_1_0_r_2))
           (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1)))
      (Slt N0 5))
maxsmt disjunct: (And (And (Slt 0
                (ReadLSB w32 0 foo_arg_1_0_r_3))
           (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1)))
      (Eq false (Slt N0 5)))
maxsmt disjunct: (And (And (Eq false
               (Slt 0
                    N0:(ReadLSB w32 0 foo_arg_1_0_r_4)))
           (Slt 4294967286 N0))
      (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0)))
maxsmt disjunct: (And (And (And (Eq false
                    (Slt 0
                         N0:(ReadLSB w32 0 foo_arg_1_0_r_5)))
                (Slt N1:(ReadLSB w32 0 foo_arg_0_0)
                     0))
           (Slt 4294967286 N0))
      (Eq false (Eq 4294967295 N1)))
maxsmt disjunct: (And (And (Eq false
               (Slt 0
                    N0:(ReadLSB w32 0 foo_arg_1_0_r_6)))
           (Eq false (Slt 4294967286 N0)))
      (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0)))
maxsmt disjunct: (And (And (And (Eq false
                    (Slt 0
                         N0:(ReadLSB w32 0 foo_arg_1_0_r_7)))
                (Slt N1:(ReadLSB w32 0 foo_arg_0_0)
                     0))
           (Eq false (Slt 4294967286 N0)))
      (Eq false (Eq 4294967295 N1)))
maxsmt disjunct: (And (Eq false
          (Slt 0
               (ReadLSB w32 0 foo_arg_1_0_r_8)))
      (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0)))
z3 objective: (let ((a!1 (concat (select foo_arg_1_0_r_10 #x00000003)
                   (concat (select foo_arg_1_0_r_10 #x00000002)
                           (concat (select foo_arg_1_0_r_10 #x00000001)
                                   (select foo_arg_1_0_r_10 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000)))))
      (a!3 (concat (select foo_arg_1_0_r_22 #x00000003)
                   (concat (select foo_arg_1_0_r_22 #x00000002)
                           (concat (select foo_arg_1_0_r_22 #x00000001)
                                   (select foo_arg_1_0_r_22 #x00000000)))))
      (a!5 (concat (select foo_arg_1_0_r_33 #x00000003)
                   (concat (select foo_arg_1_0_r_33 #x00000002)
                           (concat (select foo_arg_1_0_r_33 #x00000001)
                                   (select foo_arg_1_0_r_33 #x00000000)))))
      (a!7 (concat (select foo_arg_1_0_r_44 #x00000003)
                   (concat (select foo_arg_1_0_r_44 #x00000002)
                           (concat (select foo_arg_1_0_r_44 #x00000001)
                                   (select foo_arg_1_0_r_44 #x00000000)))))
      (a!9 (concat (select foo_arg_1_0_r_55 #x00000003)
                   (concat (select foo_arg_1_0_r_55 #x00000002)
                           (concat (select foo_arg_1_0_r_55 #x00000001)
                                   (select foo_arg_1_0_r_55 #x00000000)))))
      (a!11 (concat (select foo_arg_1_0_r_66 #x00000003)
                    (concat (select foo_arg_1_0_r_66 #x00000002)
                            (concat (select foo_arg_1_0_r_66 #x00000001)
                                    (select foo_arg_1_0_r_66 #x00000000)))))
      (a!13 (concat (select foo_arg_1_0_r_77 #x00000003)
                    (concat (select foo_arg_1_0_r_77 #x00000002)
                            (concat (select foo_arg_1_0_r_77 #x00000001)
                                    (select foo_arg_1_0_r_77 #x00000000)))))
      (a!15 (concat (select foo_arg_1_0_r_88 #x00000003)
                    (concat (select foo_arg_1_0_r_88 #x00000002)
                            (concat (select foo_arg_1_0_r_88 #x00000001)
                                    (select foo_arg_1_0_r_88 #x00000000))))))
(let ((a!4 (ite (and (bvslt #x00000000 a!3)
                     (not (bvslt a!2 #x00000001))
                     (bvslt a!2 #x00000005))
                0.0
                1.0))
      (a!6 (ite (and (bvslt #x00000000 a!5)
                     (not (bvslt a!2 #x00000001))
                     (not (bvslt a!2 #x00000005)))
                0.0
                1.0))
      (a!8 (ite (and (not (bvslt #x00000000 a!7))
                     (bvslt #xfffffff6 a!7)
                     (= #xffffffff a!2))
                0.0
                1.0))
      (a!10 (ite (and (not (bvslt #x00000000 a!9))
                      (bvslt a!2 #x00000000)
                      (bvslt #xfffffff6 a!9)
                      (not (= #xffffffff a!2)))
                 0.0
                 1.0))
      (a!12 (ite (and (not (bvslt #x00000000 a!11))
                      (not (bvslt #xfffffff6 a!11))
                      (= #xffffffff a!2))
                 0.0
                 1.0))
      (a!14 (ite (and (not (bvslt #x00000000 a!13))
                      (bvslt a!2 #x00000000)
                      (not (bvslt #xfffffff6 a!13))
                      (not (= #xffffffff a!2)))
                 0.0
                 1.0))
      (a!16 (ite (and (not (bvslt #x00000000 a!15))
                      (not (bvslt a!2 #x00000000)))
                 0.0
                 1.0)))
  (+ (ite (and (bvslt #x00000000 a!1) (bvslt a!2 #x00000001)) 0.0 1.0)
     a!4
     a!6
     a!8
     a!10
     a!12
     a!14
     a!16)))
z3 optimization info: (declare-fun foo_arg_0_01 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_10 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_22 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_33 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_44 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_55 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_66 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_77 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun foo_arg_1_0_r_88 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_10 #x00000003)
                   (concat (select foo_arg_1_0_r_10 #x00000002)
                           (concat (select foo_arg_1_0_r_10 #x00000001)
                                   (select foo_arg_1_0_r_10 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (bvslt #x00000000 a!1) (bvslt a!2 #x00000001))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_22 #x00000003)
                   (concat (select foo_arg_1_0_r_22 #x00000002)
                           (concat (select foo_arg_1_0_r_22 #x00000001)
                                   (select foo_arg_1_0_r_22 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (bvslt #x00000000 a!1)
       (not (bvslt a!2 #x00000001))
       (bvslt a!2 #x00000005))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_33 #x00000003)
                   (concat (select foo_arg_1_0_r_33 #x00000002)
                           (concat (select foo_arg_1_0_r_33 #x00000001)
                                   (select foo_arg_1_0_r_33 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (bvslt #x00000000 a!1)
       (not (bvslt a!2 #x00000001))
       (not (bvslt a!2 #x00000005)))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_44 #x00000003)
                   (concat (select foo_arg_1_0_r_44 #x00000002)
                           (concat (select foo_arg_1_0_r_44 #x00000001)
                                   (select foo_arg_1_0_r_44 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (not (bvslt #x00000000 a!1)) (bvslt #xfffffff6 a!1) (= #xffffffff a!2))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_55 #x00000003)
                   (concat (select foo_arg_1_0_r_55 #x00000002)
                           (concat (select foo_arg_1_0_r_55 #x00000001)
                                   (select foo_arg_1_0_r_55 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (not (bvslt #x00000000 a!1))
       (bvslt a!2 #x00000000)
       (bvslt #xfffffff6 a!1)
       (not (= #xffffffff a!2)))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_66 #x00000003)
                   (concat (select foo_arg_1_0_r_66 #x00000002)
                           (concat (select foo_arg_1_0_r_66 #x00000001)
                                   (select foo_arg_1_0_r_66 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (not (bvslt #x00000000 a!1))
       (not (bvslt #xfffffff6 a!1))
       (= #xffffffff a!2))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_77 #x00000003)
                   (concat (select foo_arg_1_0_r_77 #x00000002)
                           (concat (select foo_arg_1_0_r_77 #x00000001)
                                   (select foo_arg_1_0_r_77 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (not (bvslt #x00000000 a!1))
       (bvslt a!2 #x00000000)
       (not (bvslt #xfffffff6 a!1))
       (not (= #xffffffff a!2)))) :weight 1)
(assert-soft (let ((a!1 (concat (select foo_arg_1_0_r_88 #x00000003)
                   (concat (select foo_arg_1_0_r_88 #x00000002)
                           (concat (select foo_arg_1_0_r_88 #x00000001)
                                   (select foo_arg_1_0_r_88 #x00000000)))))
      (a!2 (concat (select foo_arg_0_01 #x00000003)
                   (concat (select foo_arg_0_01 #x00000002)
                           (concat (select foo_arg_0_01 #x00000001)
                                   (select foo_arg_0_01 #x00000000))))))
  (and (not (bvslt #x00000000 a!1)) (not (bvslt a!2 #x00000000)))) :weight 1)
(check-sat)

z3 lower: 5
z3 upper: 5
# soft constraints: 8
leakage: 3
z3 stats: (:added-eqs              605
 :binary-propagations    3375
 :bv-bit2core            101
 :bv-dynamic-diseqs      19
 :bv-dynamic-eqs         285
 :bv->core-eq            285
 :conflicts              9
 :decisions              2684
 :del-clause             3849
 :final-checks           9
 :max-memory             4.82
 :maxres-cores           3
 :maxres-correction-sets 2
 :memory                 4.82
 :minimized-lits         28
 :mk-bool-var            5779
 :mk-clause              4246
 :num-allocs             2182171920
 :num-checks             12
 :propagations           5775
 :rlimit-count           39748)
leakage based on max smt 3
Info Flow Summary for function 
all high sym regions: 
foo_arg_1_0
offset=0, size=32
all low sym regions: 
foo_arg_0_0
offset=0, size=32
return_value
offset=0, size=32
 Code loc with leaks:
/home/tuba/Documents/tools/pmguidedsymex/test/test1/test1.c 62: 



KLEE: done: #Timing Side Channel  Locs = 2
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 68
KLEE: done: maxInst = 153
KLEE: done: HAncestors = 2
KLEE: done: secretDependentUniqueObser = 8
KLEE: done: leakage using maxsat = 3
KLEE: done: HLeaksOnStack = 1
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 823
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
Lazy initialization is ON 
lazy single spec file? 
Parsed Prog Model Spec 
 low function foo arg 0
 high function foo arg 1
