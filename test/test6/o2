KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test6/klee-out-0"
KLEE: Using STP solver backend
Uncov init=833
Couldn't open file 
Using cache line mode (as default)!
KLEE: WARNING: undefined reference to function: printf
arg 0 type %struct.public_t count=20
Symbolizing arg 0 of foo, address 41408608 size=160
is arg 0 type %struct.public_t* single instance? 0
to be made symbolic? 1
clearing foo_arg_0_0 from high
recording address of foo_arg_0_0 41408608 as low security insensitive
arg 1 type %struct.secret_t count=20
Symbolizing arg 1 of foo, address 41408928 size=160
is arg 1 type %struct.secret_t* single instance? 0
to be made symbolic? 1
high security regions from type def
0,32
setting symbolic region high: foo_arg_1_0
recording address of foo_arg_1_0 41408928 as high security sensitive
High symbolic regions:
foo_arg_1_0
Low symbolic regions:
foo_arg_0_0
Registering publicOutputReturningFName as foo
clearing return_value from high
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca %struct.public_t*, align 8
Alloc size: 8 or 8 vs MAX: 10240 0
adjusted alloc size: 8
next instruction:   %3 = alloca %struct.secret_t*, align 8
Alloc size: 8 or 8 vs MAX: 10240 0
adjusted alloc size: 8
next instruction:   store %struct.public_t* %L, %struct.public_t** %2, align 8
reached foo
state=0x2804000 memory operation (inside foo) 
  store %struct.public_t* %L, %struct.public_t** %2, align 8
 address: 41154768
executeMemoryOperation isWrite? 1
storing value 41408608
address for memop 41154768
default offset for target address 0
base memory address 41154768
next instruction:   store %struct.secret_t* %H, %struct.secret_t** %3, align 8
state=0x2804000 memory operation (inside foo) 
  store %struct.secret_t* %H, %struct.secret_t** %3, align 8
 address: 41154832
executeMemoryOperation isWrite? 1
storing value 41408928
address for memop 41154832
default offset for target address 0
base memory address 41154832
next instruction:   %4 = load %struct.secret_t*, %struct.secret_t** %3, align 8, !dbg !133
state=0x2804000 memory operation (inside foo) 
  %4 = load %struct.secret_t*, %struct.secret_t** %3, align 8, !dbg !133
 address: 41154832
executeMemoryOperation isWrite? 0
address for memop 41154832
default offset for target address 0
base memory address 41154832
next instruction:   %5 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %4, i32 0, i32 0, !dbg !135
extracting region from 41408928
next instruction:   %6 = load %struct.data_t*, %struct.data_t** %5, align 8, !dbg !135
state=0x2804000 memory operation (inside foo) 
  %6 = load %struct.data_t*, %struct.data_t** %5, align 8, !dbg !135
 address: 41408928
executeMemoryOperation isWrite? 0
address for memop 41408928
default offset for target address 0
base memory address 41408928
state=0x2804000 memory operation (inside foo) 
  %6 = load %struct.data_t*, %struct.data_t** %5, align 8, !dbg !135
 address: 41408928
executeMemoryOperation isWrite? 1
storing value 42516928
address for memop 41408928
default offset for target address 0
base memory address 41408928
do ranges intersect: 0,31 AND 0,63
ranges intersect: 0,31 AND 0,63
setting symbolic region high: %struct.data_t_0
lazy initialized memory object %struct.data_t_0 at 42516928 and container base 42516928 marked security sensitive
next instruction:   %7 = getelementptr inbounds %struct.data_t, %struct.data_t* %6, i32 0, i32 0, !dbg !136
extracting region from 42516928
next instruction:   %8 = load i32, i32* %7, align 4, !dbg !136
state=0x2804000 memory operation (inside foo) 
  %8 = load i32, i32* %7, align 4, !dbg !136
 address: 42516928
executeMemoryOperation isWrite? 0
address for memop 42516928
default offset for target address 0
base memory address 42516928
next instruction:   %9 = icmp sgt i32 %8, 0, !dbg !137
next instruction:   %10 = load %struct.public_t*, %struct.public_t** %2, align 8, !dbg !138
state=0x2804000 memory operation (inside foo) 
  %10 = load %struct.public_t*, %struct.public_t** %2, align 8, !dbg !138
 address: 41154768
executeMemoryOperation isWrite? 0
address for memop 41154768
default offset for target address 0
base memory address 41154768
next instruction:   %11 = getelementptr inbounds %struct.public_t, %struct.public_t* %10, i32 0, i32 0, !dbg !141
extracting region from 41408608
next instruction:   %12 = load %struct.data_t*, %struct.data_t** %11, align 8, !dbg !141
state=0x2804000 memory operation (inside foo) 
  %12 = load %struct.data_t*, %struct.data_t** %11, align 8, !dbg !141
 address: 41408608
executeMemoryOperation isWrite? 0
address for memop 41408608
default offset for target address 0
base memory address 41408608
state=0x2804000 memory operation (inside foo) 
  %12 = load %struct.data_t*, %struct.data_t** %11, align 8, !dbg !141
 address: 41408608
executeMemoryOperation isWrite? 1
storing value 42517328
address for memop 41408608
default offset for target address 0
base memory address 41408608
base address not marked as security sensitive
do ranges intersect: 0,31 AND 0,63
ranges intersect: 0,31 AND 0,63
clearing %struct.data_t_1 from high
next instruction:   %13 = getelementptr inbounds %struct.data_t, %struct.data_t* %12, i32 0, i32 0, !dbg !142
extracting region from 42517328
next instruction:   %14 = load i32, i32* %13, align 4, !dbg !142
state=0x2804000 memory operation (inside foo) 
  %14 = load i32, i32* %13, align 4, !dbg !142
 address: 42517328
executeMemoryOperation isWrite? 0
address for memop 42517328
default offset for target address 0
base memory address 42517328
next instruction:   br i1 %9, label %15, label %33, !dbg !143
extracting region from (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 0
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 0
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
read expr range: 0,8

>>>> Branch Condition : 
(Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
  br i1 %9, label %15, label %33, !dbg !143
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
  br i1 %9, label %15, label %33, !dbg !143
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 0
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 0
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
read expr range: 0,8

>>>> Branch Condition : 
(Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
  br i1 %9, label %15, label %33, !dbg !143
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
  br i1 %9, label %15, label %33, !dbg !143
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32
next instruction:   %34 = icmp slt i32 %14, 0, !dbg !164
next instruction:   %16 = icmp slt i32 %14, 1, !dbg !144
next instruction:   br i1 %16, label %17, label %20, !dbg !145
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      1)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from 1
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      1)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 1
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 %struct.data_t_1)
      1)
  br i1 %16, label %17, label %20, !dbg !145
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      1)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      1)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 1
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          1))
  br i1 %16, label %17, label %20, !dbg !145
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
has high? 0
has low? 1
next instruction:   br i1 %34, label %35, label %62, !dbg !167
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      0)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from 0
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      0)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 0
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 %struct.data_t_1)
      0)
  br i1 %34, label %35, label %62, !dbg !167
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      0)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from 0
extracting region from (Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      0)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 0
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          0))
  br i1 %34, label %35, label %62, !dbg !167
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
has high? 0
has low? 1
next instruction:   %36 = load %struct.secret_t*, %struct.secret_t** %3, align 8, !dbg !168
state=0x2804500 memory operation (inside foo) 
  %36 = load %struct.secret_t*, %struct.secret_t** %3, align 8, !dbg !168
 address: 41154832
executeMemoryOperation isWrite? 0
address for memop 41154832
default offset for target address 0
base memory address 41154832
next instruction:   %18 = call i32 @loop(i32 3, i32 2), !dbg !146
next instruction:   %21 = load %struct.public_t*, %struct.public_t** %2, align 8, !dbg !150
state=0x2804a00 memory operation (inside foo) 
  %21 = load %struct.public_t*, %struct.public_t** %2, align 8, !dbg !150
 address: 41154768
executeMemoryOperation isWrite? 0
address for memop 41154768
default offset for target address 0
base memory address 41154768
next instruction:   %63 = call i32 @loop(i32 10, i32 2), !dbg !201
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %37 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %36, i32 0, i32 0, !dbg !171
extracting region from 41408928
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x2804f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41154512
executeMemoryOperation isWrite? 1
storing value 10
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   store i32 %base, i32* %2, align 4
state=0x2804f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155216
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2804f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %38 = load %struct.data_t*, %struct.data_t** %37, align 8, !dbg !171
state=0x2804500 memory operation (inside foo) 
  %38 = load %struct.data_t*, %struct.data_t** %37, align 8, !dbg !171
 address: 41408928
executeMemoryOperation isWrite? 0
address for memop 41408928
default offset for target address 0
base memory address 41408928
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2804f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2804f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %22 = getelementptr inbounds %struct.public_t, %struct.public_t* %21, i32 0, i32 0, !dbg !152
extracting region from 41408608
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %39 = getelementptr inbounds %struct.data_t, %struct.data_t* %38, i32 0, i32 0, !dbg !172
extracting region from 42516928
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2804000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41155176
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155176
default offset for target address 0
base memory address 41155176
next instruction:   br label %4, !dbg !137
next instruction:   %40 = load i32, i32* %39, align 4, !dbg !172
state=0x2804500 memory operation (inside foo) 
  %40 = load i32, i32* %39, align 4, !dbg !172
 address: 42516928
executeMemoryOperation isWrite? 0
address for memop 42516928
default offset for target address 0
base memory address 42516928
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %41 = icmp sgt i32 %40, -10, !dbg !173
next instruction:   %23 = load %struct.data_t*, %struct.data_t** %22, align 8, !dbg !152
state=0x2804a00 memory operation (inside foo) 
  %23 = load %struct.data_t*, %struct.data_t** %22, align 8, !dbg !152
 address: 41408608
executeMemoryOperation isWrite? 0
address for memop 41408608
default offset for target address 0
base memory address 41408608
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   store i32 %base, i32* %2, align 4
state=0x2804000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155000
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155000
default offset for target address 0
base memory address 41155000
next instruction:   %24 = getelementptr inbounds %struct.data_t, %struct.data_t* %23, i32 0, i32 0, !dbg !153
extracting region from 42517328
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2804000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155000
executeMemoryOperation isWrite? 0
address for memop 41155000
default offset for target address 0
base memory address 41155000
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %42 = load %struct.public_t*, %struct.public_t** %2, align 8, !dbg !174
state=0x2804500 memory operation (inside foo) 
  %42 = load %struct.public_t*, %struct.public_t** %2, align 8, !dbg !174
 address: 41154768
executeMemoryOperation isWrite? 0
address for memop 41154768
default offset for target address 0
base memory address 41154768
next instruction:   %25 = load i32, i32* %24, align 4, !dbg !153
state=0x2804a00 memory operation (inside foo) 
  %25 = load i32, i32* %24, align 4, !dbg !153
 address: 42517328
executeMemoryOperation isWrite? 0
address for memop 42517328
default offset for target address 0
base memory address 42517328
next instruction:   %26 = icmp slt i32 %25, 5, !dbg !154
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %43 = getelementptr inbounds %struct.public_t, %struct.public_t* %42, i32 0, i32 0, !dbg !177
extracting region from 41408608
next instruction:   br i1 %26, label %27, label %30, !dbg !155
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      5)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from 5
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      5)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 5
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 %struct.data_t_1)
      5)
  br i1 %26, label %27, label %30, !dbg !155
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:37
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      5)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from 5
extracting region from (Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 %struct.data_t_1)
      5)
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 5
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 %struct.data_t_1)
          5))
  br i1 %26, label %27, label %30, !dbg !155
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:37
has high? 0
has low? 1
next instruction:   %31 = call i32 @loop(i32 5, i32 2), !dbg !160
next instruction:   %44 = load %struct.data_t*, %struct.data_t** %43, align 8, !dbg !177
state=0x2804500 memory operation (inside foo) 
  %44 = load %struct.data_t*, %struct.data_t** %43, align 8, !dbg !177
 address: 41408608
executeMemoryOperation isWrite? 0
address for memop 41408608
default offset for target address 0
base memory address 41408608
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2804000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155016
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2804000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41154976
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %28 = call i32 @loop(i32 4, i32 2), !dbg !156
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   br label %4, !dbg !137
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %45 = getelementptr inbounds %struct.data_t, %struct.data_t* %44, i32 0, i32 0, !dbg !178
extracting region from 42517328
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155176
executeMemoryOperation isWrite? 0
address for memop 41155176
default offset for target address 0
base memory address 41155176
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %4, !dbg !148
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155016
executeMemoryOperation isWrite? 0
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   %46 = load i32, i32* %45, align 4, !dbg !178
state=0x2804500 memory operation (inside foo) 
  %46 = load i32, i32* %45, align 4, !dbg !178
 address: 42517328
executeMemoryOperation isWrite? 0
address for memop 42517328
default offset for target address 0
base memory address 42517328
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %47 = icmp eq i32 %46, -1, !dbg !179
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155000
executeMemoryOperation isWrite? 0
address for memop 41155000
default offset for target address 0
base memory address 41155000
next instruction:   br i1 %41, label %48, label %55, !dbg !180
extracting region from (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
read expr range: 0,8

>>>> Branch Condition : 
(Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
  br i1 %41, label %48, label %55, !dbg !180
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
  br i1 %41, label %48, label %55, !dbg !180
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 %struct.data_t_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 %struct.data_t_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 %struct.data_t_0)
extracting region from (Read w8 3 %struct.data_t_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_0)
extracting region from (Read w8 2 %struct.data_t_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_0)
extracting region from (Read w8 1 %struct.data_t_0)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_0)
read expr range: 0,8

>>>> Branch Condition : 
(Eq false
     (Slt 4294967286
          (ReadLSB w32 0 %struct.data_t_0)))
  br i1 %41, label %48, label %55, !dbg !180
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 %struct.data_t_0)))
  br i1 %41, label %48, label %55, !dbg !180
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2805400 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41155552
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155016
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   store i32 %base, i32* %2, align 4
state=0x2805400 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155584
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   br i1 %47, label %49, label %52, !dbg !181
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
  br i1 %47, label %49, label %52, !dbg !181
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:49
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 %struct.data_t_1)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 %struct.data_t_1)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 0 %struct.data_t_1)))
  br i1 %47, label %49, label %52, !dbg !181
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:49
has high? 0
has low? 1
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2805400 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155584
executeMemoryOperation isWrite? 0
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2805400 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155568
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2805400 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155504
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   br label %4, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br i1 %47, label %56, label %59, !dbg !190
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
  br i1 %47, label %56, label %59, !dbg !190
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:59
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 %struct.data_t_1)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
read expr range: 0,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 %struct.data_t_1)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 %struct.data_t_1))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 %struct.data_t_1)
extracting region from (Read w8 3 %struct.data_t_1)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 %struct.data_t_1)
extracting region from (Read w8 2 %struct.data_t_1)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 %struct.data_t_1)
extracting region from (Read w8 1 %struct.data_t_1)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 %struct.data_t_1)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 0 %struct.data_t_1)))
  br i1 %47, label %56, label %59, !dbg !190
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:59
has high? 0
has low? 1
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %60 = call i32 @loop(i32 9, i32 2), !dbg !197
next instruction:   %57 = call i32 @loop(i32 8, i32 2), !dbg !192
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %50 = call i32 @loop(i32 6, i32 2), !dbg !182
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41154976
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155552
executeMemoryOperation isWrite? 0
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %53 = call i32 @loop(i32 7, i32 2), !dbg !186
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %4, !dbg !148
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !148
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2804a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41155560
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155560
default offset for target address 0
base memory address 41155560
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155568
executeMemoryOperation isWrite? 0
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155584
executeMemoryOperation isWrite? 0
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155176
executeMemoryOperation isWrite? 0
address for memop 41155176
default offset for target address 0
base memory address 41155176
next instruction:   store i32 %base, i32* %2, align 4
state=0x2804a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155488
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155488
default offset for target address 0
base memory address 41155488
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2804a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155488
executeMemoryOperation isWrite? 0
address for memop 41155488
default offset for target address 0
base memory address 41155488
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2804a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155344
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2804a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155288
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2806300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41155432
executeMemoryOperation isWrite? 1
storing value 9
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155016
executeMemoryOperation isWrite? 0
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   br label %4, !dbg !137
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2804500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41154904
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155568
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   br label %4, !dbg !148
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155560
executeMemoryOperation isWrite? 0
address for memop 41155560
default offset for target address 0
base memory address 41155560
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2805e00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41154928
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   store i32 %base, i32* %2, align 4
state=0x2805e00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155656
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %base, i32* %2, align 4
state=0x2806300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41154912
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2806300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2806300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2805e00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2805e00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   store i32 %base, i32* %2, align 4
state=0x2804500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155600
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155000
executeMemoryOperation isWrite? 0
address for memop 41155000
default offset for target address 0
base memory address 41155000
next instruction:   br label %4, !dbg !148
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2804500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155016
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155344
executeMemoryOperation isWrite? 0
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155552
executeMemoryOperation isWrite? 0
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2805e00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   br label %4, !dbg !137
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2806300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2804500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155568
executeMemoryOperation isWrite? 0
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   br label %4, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155488
executeMemoryOperation isWrite? 0
address for memop 41155488
default offset for target address 0
base memory address 41155488
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155584
executeMemoryOperation isWrite? 0
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2804500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155568
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   br label %4, !dbg !137
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41154976
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155344
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   store i32 %ru, i32* %1, align 4
state=0x2805900 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 41155424
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   store i32 %base, i32* %2, align 4
state=0x2805900 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 41155256
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !133
state=0x2805900 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !133
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   br label %4, !dbg !148
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   br label %4, !dbg !148
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155176
executeMemoryOperation isWrite? 0
address for memop 41155176
default offset for target address 0
base memory address 41155176
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155552
executeMemoryOperation isWrite? 0
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   br label %4, !dbg !148
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155016
executeMemoryOperation isWrite? 0
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %3, i32* %result, align 4, !dbg !134
state=0x2805900 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !134
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %4, !dbg !148
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155000
executeMemoryOperation isWrite? 0
address for memop 41155000
default offset for target address 0
base memory address 41155000
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   store i32 0, i32* %i, align 4, !dbg !135
state=0x2805900 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !135
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155016
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155560
executeMemoryOperation isWrite? 0
address for memop 41155560
default offset for target address 0
base memory address 41155560
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %4, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155568
executeMemoryOperation isWrite? 0
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   br label %4, !dbg !148
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155584
executeMemoryOperation isWrite? 0
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41154976
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br label %4, !dbg !148
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155568
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41154976
executeMemoryOperation isWrite? 0
address for memop 41154976
default offset for target address 0
base memory address 41154976
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155176
executeMemoryOperation isWrite? 0
address for memop 41155176
default offset for target address 0
base memory address 41155176
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155344
executeMemoryOperation isWrite? 0
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155016
executeMemoryOperation isWrite? 0
address for memop 41155016
default offset for target address 0
base memory address 41155016
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   ret i32 %8, !dbg !149
state :0x2804000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155488
executeMemoryOperation isWrite? 0
address for memop 41155488
default offset for target address 0
base memory address 41155488
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155344
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %18), !dbg !148
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(41154584, 16) at /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:35
next instruction:   store i32 1, i32* %1, align 4, !dbg !149
state=0x2804000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !149
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   br label %65, !dbg !149
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2804000 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   ret i32 %66, !dbg !205
state :0x2804000 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br label %4, !dbg !148
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   br label %4, !dbg !148
next instruction:   br label %4, !dbg !148
next instruction:   br label %4, !dbg !148
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155552
executeMemoryOperation isWrite? 0
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155560
executeMemoryOperation isWrite? 0
address for memop 41155560
default offset for target address 0
base memory address 41155560
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155568
executeMemoryOperation isWrite? 0
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155584
executeMemoryOperation isWrite? 0
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br label %4, !dbg !148
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155568
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155344
executeMemoryOperation isWrite? 0
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   br label %4, !dbg !148
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155552
executeMemoryOperation isWrite? 0
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155568
executeMemoryOperation isWrite? 0
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155584
executeMemoryOperation isWrite? 0
address for memop 41155584
default offset for target address 0
base memory address 41155584
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155568
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155488
executeMemoryOperation isWrite? 0
address for memop 41155488
default offset for target address 0
base memory address 41155488
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   br label %4, !dbg !148
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155344
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155504
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   br label %4, !dbg !148
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155504
executeMemoryOperation isWrite? 0
address for memop 41155504
default offset for target address 0
base memory address 41155504
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155552
executeMemoryOperation isWrite? 0
address for memop 41155552
default offset for target address 0
base memory address 41155552
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155560
executeMemoryOperation isWrite? 0
address for memop 41155560
default offset for target address 0
base memory address 41155560
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155344
executeMemoryOperation isWrite? 0
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155488
executeMemoryOperation isWrite? 0
address for memop 41155488
default offset for target address 0
base memory address 41155488
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155568
executeMemoryOperation isWrite? 0
address for memop 41155568
default offset for target address 0
base memory address 41155568
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155344
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   br label %4, !dbg !148
next instruction:   ret i32 %8, !dbg !149
state :0x2805400 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %31), !dbg !162
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !163
state=0x2805400 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !163
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155288
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br label %4, !dbg !148
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %65, !dbg !163
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155288
executeMemoryOperation isWrite? 0
address for memop 41155288
default offset for target address 0
base memory address 41155288
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155560
executeMemoryOperation isWrite? 0
address for memop 41155560
default offset for target address 0
base memory address 41155560
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 512
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155344
executeMemoryOperation isWrite? 0
address for memop 41155344
default offset for target address 0
base memory address 41155344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2805400 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   ret i32 %66, !dbg !205
state :0x2805400 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   ret i32 %8, !dbg !149
state :0x2804a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %28), !dbg !158
treating as external function: printf
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   store i32 1, i32* %1, align 4, !dbg !159
state=0x2804a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !159
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   br label %65, !dbg !159
next instruction:   br label %4, !dbg !148
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2804a00 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   ret i32 %66, !dbg !205
state :0x2804a00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 2
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   br label %4, !dbg !148
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 9
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   br label %4, !dbg !148
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155216
executeMemoryOperation isWrite? 0
address for memop 41155216
default offset for target address 0
base memory address 41155216
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155168
executeMemoryOperation isWrite? 1
storing value 2048
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   br label %4, !dbg !148
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155048
executeMemoryOperation isWrite? 1
storing value 10
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 16
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155048
executeMemoryOperation isWrite? 0
address for memop 41155048
default offset for target address 0
base memory address 41155048
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 3
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br label %4, !dbg !148
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154512
executeMemoryOperation isWrite? 0
address for memop 41154512
default offset for target address 0
base memory address 41154512
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   br label %4, !dbg !148
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155168
executeMemoryOperation isWrite? 0
address for memop 41155168
default offset for target address 0
base memory address 41155168
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   ret i32 %8, !dbg !149
state :0x2804f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %63), !dbg !203
treating as external function: printf
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 1, i32* %1, align 4, !dbg !204
state=0x2804f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !204
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   br label %65, !dbg !204
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2804f00 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   ret i32 %66, !dbg !205
state :0x2804f00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 32
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   br label %4, !dbg !148
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 4
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   br label %4, !dbg !148
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2804500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155600
executeMemoryOperation isWrite? 0
address for memop 41155600
default offset for target address 0
base memory address 41155600
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 64
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   br label %4, !dbg !148
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2804500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155536
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 5
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   br label %4, !dbg !148
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2804500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155720
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   br label %4, !dbg !148
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2804500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155720
executeMemoryOperation isWrite? 0
address for memop 41155720
default offset for target address 0
base memory address 41155720
next instruction:   br label %4, !dbg !148
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2804500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154904
executeMemoryOperation isWrite? 0
address for memop 41154904
default offset for target address 0
base memory address 41154904
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2804500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155536
executeMemoryOperation isWrite? 0
address for memop 41155536
default offset for target address 0
base memory address 41155536
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   br label %4, !dbg !148
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   ret i32 %8, !dbg !149
state :0x2804500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %50), !dbg !184
treating as external function: printf
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 1, i32* %1, align 4, !dbg !185
state=0x2804500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !185
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   br label %65, !dbg !185
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2804500 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   ret i32 %66, !dbg !205
state :0x2804500 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
16
64
32
2048
128
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155656
executeMemoryOperation isWrite? 0
address for memop 41155656
default offset for target address 0
base memory address 41155656
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 128
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155688
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155704
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155704
executeMemoryOperation isWrite? 0
address for memop 41155704
default offset for target address 0
base memory address 41155704
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41154928
executeMemoryOperation isWrite? 0
address for memop 41154928
default offset for target address 0
base memory address 41154928
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155688
executeMemoryOperation isWrite? 0
address for memop 41155688
default offset for target address 0
base memory address 41155688
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   ret i32 %8, !dbg !149
state :0x2805e00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %53), !dbg !188
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !189
state=0x2805e00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !189
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   br label %65, !dbg !189
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2805e00 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   ret i32 %66, !dbg !205
state :0x2805e00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 6
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2805900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41155256
executeMemoryOperation isWrite? 0
address for memop 41155256
default offset for target address 0
base memory address 41155256
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 256
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2805900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155608
executeMemoryOperation isWrite? 1
storing value 512
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 7
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   br label %4, !dbg !148
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2805900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155736
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2805900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155736
executeMemoryOperation isWrite? 0
address for memop 41155736
default offset for target address 0
base memory address 41155736
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2805900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155424
executeMemoryOperation isWrite? 0
address for memop 41155424
default offset for target address 0
base memory address 41155424
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2805900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155608
executeMemoryOperation isWrite? 0
address for memop 41155608
default offset for target address 0
base memory address 41155608
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   ret i32 %8, !dbg !149
state :0x2805900 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %57), !dbg !195
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !196
state=0x2805900 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !196
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   br label %65, !dbg !196
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2805900 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   ret i32 %66, !dbg !205
state :0x2805900 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 512
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 8
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !144
state=0x2806300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !144
 address: 41154912
executeMemoryOperation isWrite? 0
address for memop 41154912
default offset for target address 0
base memory address 41154912
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !145
next instruction:   store i32 %11, i32* %result, align 4, !dbg !146
state=0x2806300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !146
 address: 41155624
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %13 = add nsw i32 %12, 1, !dbg !147
next instruction:   store i32 %13, i32* %i, align 4, !dbg !147
state=0x2806300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !147
 address: 41155640
executeMemoryOperation isWrite? 1
storing value 9
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   br label %4, !dbg !148
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !138
state=0x2806300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !138
 address: 41155640
executeMemoryOperation isWrite? 0
address for memop 41155640
default offset for target address 0
base memory address 41155640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !140
state=0x2806300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !140
 address: 41155432
executeMemoryOperation isWrite? 0
address for memop 41155432
default offset for target address 0
base memory address 41155432
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !141
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !142
state=0x2806300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !142
 address: 41155624
executeMemoryOperation isWrite? 0
address for memop 41155624
default offset for target address 0
base memory address 41155624
next instruction:   br i1 %7, label %9, label %14, !dbg !143
next instruction:   ret i32 %8, !dbg !149
state :0x2806300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %60), !dbg !199
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !200
state=0x2806300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !200
 address: 41154792
executeMemoryOperation isWrite? 1
storing value 1
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   br label %65, !dbg !200
next instruction:   %66 = load i32, i32* %1, align 4, !dbg !205
state=0x2806300 memory operation (inside foo) 
  %66 = load i32, i32* %1, align 4, !dbg !205
 address: 41154792
executeMemoryOperation isWrite? 0
address for memop 41154792
default offset for target address 0
base memory address 41154792
next instruction:   ret i32 %66, !dbg !205
state :0x2806300 checking foo to see if an input function
terminating state with foo
checking leak in foo with 4locals 
checking done
256
512
1024
Size of rdmap : 15

===============
Found Violation at : 
diff : 24
Instruction:
  %36 = load %struct.secret_t*, %struct.secret_t** %3, align 8, !dbg !168

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 %struct.data_t_0)))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 %struct.data_t_1)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 162 , 162 ]

[ (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 %struct.data_t_1)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 138 , 138 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:59
  br i1 %47, label %56, label %59, !dbg !190

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:49
  br i1 %47, label %49, label %52, !dbg !181

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %36 = load %struct.secret_t*, %struct.secret_t** %3, align 8, !dbg !168

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 %struct.data_t_0)))
(And (Eq 4294967295
          (ReadLSB w32 0 %struct.data_t_1))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 150 , 150 ]

[ (Slt 4294967286
      (ReadLSB w32 0 %struct.data_t_0))
(And (Eq 4294967295
          (ReadLSB w32 0 %struct.data_t_1))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 126 , 126 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:59
  br i1 %47, label %56, label %59, !dbg !190

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:49
  br i1 %47, label %49, label %52, !dbg !181

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

===============

===============
Found Violation at : 
diff : 86
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 162 , 162 ]

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (Slt (ReadLSB w32 0 %struct.data_t_1)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 162 , 162 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 138 , 138 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 74
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 150 , 150 ]

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (Slt (ReadLSB w32 0 %struct.data_t_1)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 150 , 150 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 126 , 126 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 62
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (Slt (ReadLSB w32 0 %struct.data_t_1)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 138 , 138 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 50
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (Slt (ReadLSB w32 0 %struct.data_t_1)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 %struct.data_t_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 126 , 126 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 84
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (Slt (ReadLSB w32 0 %struct.data_t_1)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 76 , 76 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 %struct.data_t_1)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 53
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 107 , 107 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 %struct.data_t_1)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 65
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32

[ (Slt 0
      (ReadLSB w32 0 %struct.data_t_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 %struct.data_t_1)
                    1))
           (Slt N0 5))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 95 , 95 ]

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 %struct.data_t_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 %struct.data_t_1)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 160 , 160 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:47
  %34 = icmp slt i32 %14, 0, !dbg !164

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:33
  %16 = icmp slt i32 %14, 1, !dbg !144

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:48
	=====================

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test6/test6.c:32
	=====================

>>>> Found violations at  : 2 locations.
Info Flow Summary for function 
all high sym regions: 
%struct.data_t_0
offset=0, size=32
foo_arg_1_0
offset=0, size=32
all low sym regions: 
%struct.data_t_1
offset=0, size=32
foo_arg_0_0
offset=0, size=32
return_value
offset=0, size=32
 Code loc with leaks:

KLEE: done: #Timing Side Channel  Locs = 2
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 76
KLEE: done: maxInst = 163
KLEE: done: HAncestors = 2
KLEE: done: HLeaksOnStack = 0
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 843
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
Lazy initialization is ON 
lazy single spec file? 
 low function foo arg 0
 high function foo arg 1
