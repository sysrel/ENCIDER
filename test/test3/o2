KLEE: output directory is "/home/tuba/Documents/tools/pmguidedsymex/test/test3/klee-out-0"
KLEE: Using STP solver backend
Uncov init=820
Couldn't open file 
Using cache line mode (as default)!
KLEE: WARNING: undefined reference to function: printf
lazy init arg foo_arg_0_0
 setting low security region offset= 0 size= 32
clearing foo_arg_0_0 from high
recording address of foo_arg_0_0 54269952 as not security sensitive
lazy init arg foo_arg_1_0
 setting high security region offset= 0 size= 32
setting symbolic region high: foo_arg_1_0
recording address of foo_arg_1_0 54270008 as security sensitive 
High symbolic regions:
foo_arg_1_0
Low symbolic regions:
foo_arg_0_0
Registering publicOutputReturningFName as foo
clearing return_value from high
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %L = alloca %struct.public_t, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %H = alloca %struct.secret_t, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0
extracting region from 54270176
next instruction:   store i32 %L.coerce, i32* %2, align 4
reached foo
state=0x34d2000 memory operation (inside foo) 
  store i32 %L.coerce, i32* %2, align 4
 address: 54270176
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_arg_0_0)
address for memop 54270176
default offset for target address 0
base memory address 54270176
next instruction:   %3 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0
extracting region from 54270192
next instruction:   store i32 %H.coerce, i32* %3, align 4
state=0x34d2000 memory operation (inside foo) 
  store i32 %H.coerce, i32* %3, align 4
 address: 54270192
executeMemoryOperation isWrite? 1
storing value (ReadLSB w32 0 foo_arg_1_0)
address for memop 54270192
default offset for target address 0
base memory address 54270192
next instruction:   %4 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !127
extracting region from 54270192
next instruction:   %5 = load i32, i32* %4, align 4, !dbg !127
state=0x34d2000 memory operation (inside foo) 
  %5 = load i32, i32* %4, align 4, !dbg !127
 address: 54270192
executeMemoryOperation isWrite? 0
address for memop 54270192
default offset for target address 0
base memory address 54270192
next instruction:   %6 = icmp sgt i32 %5, 0, !dbg !129
next instruction:   %7 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0, !dbg !130
extracting region from 54270176
next instruction:   %8 = load i32, i32* %7, align 4, !dbg !130
state=0x34d2000 memory operation (inside foo) 
  %8 = load i32, i32* %7, align 4, !dbg !130
 address: 54270176
executeMemoryOperation isWrite? 0
address for memop 54270176
default offset for target address 0
base memory address 54270176
next instruction:   br i1 %6, label %9, label %24, !dbg !133
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %6, label %9, label %24, !dbg !133
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %6, label %9, label %24, !dbg !133
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 0
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %6, label %9, label %24, !dbg !133
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %6, label %9, label %24, !dbg !133
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28
next instruction:   %25 = icmp slt i32 %8, 0, !dbg !152
next instruction:   %10 = icmp slt i32 %8, 1, !dbg !134
next instruction:   br i1 %25, label %26, label %47, !dbg !155
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 0
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 0
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
  br i1 %25, label %26, label %47, !dbg !155
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 0
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          0))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      0)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 0
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          0))
  br i1 %25, label %26, label %47, !dbg !155
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
has high? 0
has low? 1
next instruction:   br i1 %10, label %11, label %14, !dbg !135
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 1
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 1
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
  br i1 %10, label %11, label %14, !dbg !135
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          1))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      1)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 1
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          1))
  br i1 %10, label %11, label %14, !dbg !135
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
has high? 0
has low? 1
next instruction:   %12 = call i32 @loop(i32 3, i32 2), !dbg !136
next instruction:   %27 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !156
extracting region from 54270192
next instruction:   %28 = load i32, i32* %27, align 4, !dbg !156
state=0x34d2500 memory operation (inside foo) 
  %28 = load i32, i32* %27, align 4, !dbg !156
 address: 54270192
executeMemoryOperation isWrite? 0
address for memop 54270192
default offset for target address 0
base memory address 54270192
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %48 = call i32 @loop(i32 10, i32 2), !dbg !185
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %15 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0, !dbg !140
extracting region from 54270176
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %16 = load i32, i32* %15, align 4, !dbg !140
state=0x34d2f00 memory operation (inside foo) 
  %16 = load i32, i32* %15, align 4, !dbg !140
 address: 54270176
executeMemoryOperation isWrite? 0
address for memop 54270176
default offset for target address 0
base memory address 54270176
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %29 = icmp sgt i32 %28, -10, !dbg !159
next instruction:   %17 = icmp slt i32 %16, 5, !dbg !142
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br i1 %17, label %18, label %21, !dbg !143
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 5
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 5
expr has high=0 0,32

>>>> Branch Condition : 
(Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
  br i1 %17, label %18, label %21, !dbg !143
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:33
has high? 0
has low? 1
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from 5
extracting region from (Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          5))
extracting region from false
extracting region from (Slt (ReadLSB w32 0 foo_arg_0_0)
      5)
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
extracting region from 5
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Slt (ReadLSB w32 0 foo_arg_0_0)
          5))
  br i1 %17, label %18, label %21, !dbg !143
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:33
has high? 0
has low? 1
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
reached loop
state=0x34d2a00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270336
executeMemoryOperation isWrite? 1
storing value 10
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d2a00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270344
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %22 = call i32 @loop(i32 5, i32 2), !dbg !148
next instruction:   %19 = call i32 @loop(i32 4, i32 2), !dbg !144
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d2000 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54269824
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54269824
default offset for target address 0
base memory address 54269824
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d2a00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d2000 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270448
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270448
default offset for target address 0
base memory address 54270448
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %30 = getelementptr inbounds %struct.public_t, %struct.public_t* %L, i32 0, i32 0, !dbg !160
extracting region from 54270176
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d2a00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %31 = load i32, i32* %30, align 4, !dbg !160
state=0x34d2500 memory operation (inside foo) 
  %31 = load i32, i32* %30, align 4, !dbg !160
 address: 54270176
executeMemoryOperation isWrite? 0
address for memop 54270176
default offset for target address 0
base memory address 54270176
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d2a00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d2000 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270448
executeMemoryOperation isWrite? 0
address for memop 54270448
default offset for target address 0
base memory address 54270448
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d2000 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270496
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %32 = icmp eq i32 %31, -1, !dbg !163
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d3400 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270552
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d2f00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270584
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270584
default offset for target address 0
base memory address 54270584
next instruction:   br i1 %29, label %33, label %40, !dbg !164
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %29, label %33, label %40, !dbg !164
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44
has high? 1
has low? 0
Projection on high

>>>> Projection : (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
  br i1 %29, label %33, label %40, !dbg !164
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=1 0,32
extracting region from (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
extracting region from false
extracting region from (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
extracting region from 4294967286
extracting region from (ReadLSB w32 0 foo_arg_1_0)
extracting region from (Read w8 3 foo_arg_1_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_1_0)
extracting region from (Read w8 2 foo_arg_1_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_1_0)
extracting region from (Read w8 1 foo_arg_1_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_1_0)
read expr range: 0,8

>>>> Branch Condition : 
(Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %29, label %33, label %40, !dbg !164
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44
has high? 1
has low? 0
Projection on high

>>>> Projection : (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
  br i1 %29, label %33, label %40, !dbg !164
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d3400 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270560
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d3400 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270560
executeMemoryOperation isWrite? 0
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   br label %4, !dbg !131
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d3400 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270624
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d2f00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270544
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270544
default offset for target address 0
base memory address 54270544
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d2000 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270600
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   br i1 %32, label %34, label %37, !dbg !165
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
  br i1 %32, label %34, label %37, !dbg !165
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:45
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
  br i1 %32, label %34, label %37, !dbg !165
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:45
has high? 0
has low? 1
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d2f00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270544
executeMemoryOperation isWrite? 0
address for memop 54270544
default offset for target address 0
base memory address 54270544
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d3400 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270632
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br label %4, !dbg !131
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d2f00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270536
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %35 = call i32 @loop(i32 6, i32 2), !dbg !166
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54269824
executeMemoryOperation isWrite? 0
address for memop 54269824
default offset for target address 0
base memory address 54269824
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br i1 %32, label %41, label %44, !dbg !174
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
  br i1 %32, label %41, label %44, !dbg !174
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:55
has high? 0
has low? 1
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
read expr range: 0,8
extracting region from (Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
extracting region from false
extracting region from (Eq 4294967295
     (ReadLSB w32 0 foo_arg_0_0))
extracting region from 4294967295
extracting region from (ReadLSB w32 0 foo_arg_0_0)
extracting region from (Read w8 3 foo_arg_0_0)
do ranges intersect: 0,31 AND 24,31
ranges intersect: 0,31 AND 24,31
read expr range: 24,8
extracting region from (ReadLSB w24 0 foo_arg_0_0)
extracting region from (Read w8 2 foo_arg_0_0)
do ranges intersect: 0,31 AND 16,23
ranges intersect: 0,31 AND 16,23
read expr range: 16,8
extracting region from (ReadLSB w16 0 foo_arg_0_0)
extracting region from (Read w8 1 foo_arg_0_0)
do ranges intersect: 0,31 AND 8,15
ranges intersect: 0,31 AND 8,15
read expr range: 8,8
extracting region from (Read w8 0 foo_arg_0_0)
do ranges intersect: 0,31 AND 0,7
ranges intersect: 0,31 AND 0,7
read expr range: 0,8
expr has high=0 0,32

>>>> Branch Condition : 
(Eq false
     (Eq 4294967295
         (ReadLSB w32 0 foo_arg_0_0)))
  br i1 %32, label %41, label %44, !dbg !174
	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:55
has high? 0
has low? 1
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %42 = call i32 @loop(i32 8, i32 2), !dbg !176
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270496
executeMemoryOperation isWrite? 0
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %45 = call i32 @loop(i32 9, i32 2), !dbg !181
next instruction:   br label %4, !dbg !131
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d2f00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270640
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270448
executeMemoryOperation isWrite? 0
address for memop 54270448
default offset for target address 0
base memory address 54270448
next instruction:   br label %4, !dbg !131
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %38 = call i32 @loop(i32 7, i32 2), !dbg !170
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270496
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270552
executeMemoryOperation isWrite? 0
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270584
executeMemoryOperation isWrite? 0
address for memop 54270584
default offset for target address 0
base memory address 54270584
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %1 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d3900 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270776
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %2 = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d3900 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270832
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270600
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270624
executeMemoryOperation isWrite? 0
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %result = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   br label %4, !dbg !142
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270560
executeMemoryOperation isWrite? 0
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d3900 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270624
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d4300 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270800
executeMemoryOperation isWrite? 1
storing value 9
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d3e00 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270712
executeMemoryOperation isWrite? 1
storing value 7
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %i = alloca i32, align 4
Alloc size: 4 or 4 vs MAX: 10240 0
adjusted alloc size: 4
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %ru, i32* %1, align 4
state=0x34d2500 memory operation (inside loop) 
  store i32 %ru, i32* %1, align 4
 address: 54270760
executeMemoryOperation isWrite? 1
storing value 6
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54269824
executeMemoryOperation isWrite? 0
address for memop 54269824
default offset for target address 0
base memory address 54269824
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d3e00 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270856
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270536
executeMemoryOperation isWrite? 0
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d3e00 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d2500 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270880
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %base, i32* %2, align 4
state=0x34d4300 memory operation (inside loop) 
  store i32 %base, i32* %2, align 4
 address: 54270904
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270496
executeMemoryOperation isWrite? 0
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d2500 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270544
executeMemoryOperation isWrite? 0
address for memop 54270544
default offset for target address 0
base memory address 54270544
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d3e00 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d3e00 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   br label %4, !dbg !142
next instruction:   %3 = load i32, i32* %2, align 4, !dbg !127
state=0x34d4300 memory operation (inside loop) 
  %3 = load i32, i32* %2, align 4, !dbg !127
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d4300 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d4300 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d3900 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   br label %4, !dbg !131
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   store i32 %3, i32* %result, align 4, !dbg !128
state=0x34d2500 memory operation (inside loop) 
  store i32 %3, i32* %result, align 4, !dbg !128
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270448
executeMemoryOperation isWrite? 0
address for memop 54270448
default offset for target address 0
base memory address 54270448
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270552
executeMemoryOperation isWrite? 0
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d2500 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270496
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270536
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270624
executeMemoryOperation isWrite? 0
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   br label %4, !dbg !131
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br label %4, !dbg !131
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270560
executeMemoryOperation isWrite? 0
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270624
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270600
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   br label %4, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   store i32 0, i32* %i, align 4, !dbg !129
state=0x34d3900 memory operation (inside loop) 
  store i32 0, i32* %i, align 4, !dbg !129
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br label %4, !dbg !131
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   br label %4, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br label %4, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270552
executeMemoryOperation isWrite? 0
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54269824
executeMemoryOperation isWrite? 0
address for memop 54269824
default offset for target address 0
base memory address 54269824
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270624
executeMemoryOperation isWrite? 0
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270496
executeMemoryOperation isWrite? 0
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270584
executeMemoryOperation isWrite? 0
address for memop 54270584
default offset for target address 0
base memory address 54270584
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270536
executeMemoryOperation isWrite? 0
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2000 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270448
executeMemoryOperation isWrite? 0
address for memop 54270448
default offset for target address 0
base memory address 54270448
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2000 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270496
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270544
executeMemoryOperation isWrite? 0
address for memop 54270544
default offset for target address 0
base memory address 54270544
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br label %4, !dbg !142
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2000 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270560
executeMemoryOperation isWrite? 0
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270624
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2000 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270600
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   br label %4, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2000 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270600
executeMemoryOperation isWrite? 0
address for memop 54270600
default offset for target address 0
base memory address 54270600
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2000 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54269824
executeMemoryOperation isWrite? 0
address for memop 54269824
default offset for target address 0
base memory address 54269824
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270536
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2000 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270496
executeMemoryOperation isWrite? 0
address for memop 54270496
default offset for target address 0
base memory address 54270496
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   ret i32 %8, !dbg !143
state :0x34d2000 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br label %4, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 64
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %12), !dbg !138
treating as external function: printf
KLEE: WARNING ONCE: calling external: printf(54269880, 16) at /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:31
next instruction:   store i32 1, i32* %1, align 4, !dbg !139
state=0x34d2000 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !139
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br label %50, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270584
executeMemoryOperation isWrite? 0
address for memop 54270584
default offset for target address 0
base memory address 54270584
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d2000 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270536
executeMemoryOperation isWrite? 0
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   ret i32 %51, !dbg !189
state :0x34d2000 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   br label %4, !dbg !142
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270544
executeMemoryOperation isWrite? 0
address for memop 54270544
default offset for target address 0
base memory address 54270544
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270552
executeMemoryOperation isWrite? 0
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   br label %4, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270624
executeMemoryOperation isWrite? 0
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270536
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270560
executeMemoryOperation isWrite? 0
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270624
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 128
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   br label %4, !dbg !142
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270552
executeMemoryOperation isWrite? 0
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270624
executeMemoryOperation isWrite? 0
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3400 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270560
executeMemoryOperation isWrite? 0
address for memop 54270560
default offset for target address 0
base memory address 54270560
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3400 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270624
executeMemoryOperation isWrite? 1
storing value 64
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 6
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3400 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270632
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270584
executeMemoryOperation isWrite? 0
address for memop 54270584
default offset for target address 0
base memory address 54270584
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270536
executeMemoryOperation isWrite? 0
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2f00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270544
executeMemoryOperation isWrite? 0
address for memop 54270544
default offset for target address 0
base memory address 54270544
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3400 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270632
executeMemoryOperation isWrite? 0
address for memop 54270632
default offset for target address 0
base memory address 54270632
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3400 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270552
executeMemoryOperation isWrite? 0
address for memop 54270552
default offset for target address 0
base memory address 54270552
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2f00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270536
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3400 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270624
executeMemoryOperation isWrite? 0
address for memop 54270624
default offset for target address 0
base memory address 54270624
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   br label %4, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 256
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2f00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270640
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 7
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br label %4, !dbg !142
next instruction:   ret i32 %8, !dbg !143
state :0x34d3400 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %22), !dbg !150
treating as external function: printf
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2f00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270640
executeMemoryOperation isWrite? 0
address for memop 54270640
default offset for target address 0
base memory address 54270640
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   store i32 1, i32* %1, align 4, !dbg !151
state=0x34d3400 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !151
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %50, !dbg !151
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d3400 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2f00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270584
executeMemoryOperation isWrite? 0
address for memop 54270584
default offset for target address 0
base memory address 54270584
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2f00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270536
executeMemoryOperation isWrite? 0
address for memop 54270536
default offset for target address 0
base memory address 54270536
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   ret i32 %51, !dbg !189
state :0x34d3400 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   ret i32 %8, !dbg !143
state :0x34d2f00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %19), !dbg !146
treating as external function: printf
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 512
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   store i32 1, i32* %1, align 4, !dbg !147
state=0x34d2f00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !147
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br label %50, !dbg !147
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d2f00 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   ret i32 %51, !dbg !189
state :0x34d2f00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 2
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   br label %4, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 9
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   br label %4, !dbg !142
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   br label %4, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 16
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2a00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270344
executeMemoryOperation isWrite? 0
address for memop 54270344
default offset for target address 0
base memory address 54270344
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2a00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270400
executeMemoryOperation isWrite? 1
storing value 2048
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 3
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %4, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2a00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270384
executeMemoryOperation isWrite? 1
storing value 10
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   br label %4, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2a00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270384
executeMemoryOperation isWrite? 0
address for memop 54270384
default offset for target address 0
base memory address 54270384
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2a00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270336
executeMemoryOperation isWrite? 0
address for memop 54270336
default offset for target address 0
base memory address 54270336
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2a00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270400
executeMemoryOperation isWrite? 0
address for memop 54270400
default offset for target address 0
base memory address 54270400
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   br label %4, !dbg !142
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   ret i32 %8, !dbg !143
state :0x34d2a00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %48), !dbg !187
treating as external function: printf
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   store i32 1, i32* %1, align 4, !dbg !188
state=0x34d2a00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !188
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   br label %50, !dbg !188
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 32
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d2a00 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   ret i32 %51, !dbg !189
state :0x34d2a00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 64
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 4
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 64
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 64
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   br label %4, !dbg !142
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   br label %4, !dbg !142
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 64
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d2500 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270880
executeMemoryOperation isWrite? 0
address for memop 54270880
default offset for target address 0
base memory address 54270880
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d2500 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270952
executeMemoryOperation isWrite? 1
storing value 128
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 128
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 5
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %4, !dbg !142
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 128
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d2500 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54271000
executeMemoryOperation isWrite? 1
storing value 6
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 6
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   br label %4, !dbg !142
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   br label %4, !dbg !142
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 6
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d2500 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54271000
executeMemoryOperation isWrite? 0
address for memop 54271000
default offset for target address 0
base memory address 54271000
next instruction:   br label %4, !dbg !142
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d2500 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270760
executeMemoryOperation isWrite? 0
address for memop 54270760
default offset for target address 0
base memory address 54270760
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d2500 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270952
executeMemoryOperation isWrite? 0
address for memop 54270952
default offset for target address 0
base memory address 54270952
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   ret i32 %8, !dbg !143
state :0x34d2500 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 256
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %35), !dbg !168
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !169
state=0x34d2500 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !169
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   br label %50, !dbg !169
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 128
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d2500 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3e00 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270856
executeMemoryOperation isWrite? 0
address for memop 54270856
default offset for target address 0
base memory address 54270856
next instruction:   ret i32 %51, !dbg !189
state :0x34d2500 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
16
64
32
2048
128
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3e00 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270936
executeMemoryOperation isWrite? 1
storing value 256
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 7
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br label %4, !dbg !142
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3e00 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270968
executeMemoryOperation isWrite? 1
storing value 7
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3e00 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270968
executeMemoryOperation isWrite? 0
address for memop 54270968
default offset for target address 0
base memory address 54270968
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3e00 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270712
executeMemoryOperation isWrite? 0
address for memop 54270712
default offset for target address 0
base memory address 54270712
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3e00 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270936
executeMemoryOperation isWrite? 0
address for memop 54270936
default offset for target address 0
base memory address 54270936
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   ret i32 %8, !dbg !143
state :0x34d3e00 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 6
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %38), !dbg !172
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !173
state=0x34d3e00 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !173
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d3900 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270832
executeMemoryOperation isWrite? 0
address for memop 54270832
default offset for target address 0
base memory address 54270832
next instruction:   br label %50, !dbg !173
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d3e00 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   ret i32 %51, !dbg !189
state :0x34d3e00 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d3900 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270792
executeMemoryOperation isWrite? 1
storing value 512
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d3900 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270888
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 256
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d3900 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270888
executeMemoryOperation isWrite? 0
address for memop 54270888
default offset for target address 0
base memory address 54270888
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 7
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %4, !dbg !142
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d3900 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270776
executeMemoryOperation isWrite? 0
address for memop 54270776
default offset for target address 0
base memory address 54270776
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d3900 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270792
executeMemoryOperation isWrite? 0
address for memop 54270792
default offset for target address 0
base memory address 54270792
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   ret i32 %8, !dbg !143
state :0x34d3900 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %42), !dbg !179
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !180
state=0x34d3900 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !180
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br label %50, !dbg !180
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 512
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d3900 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   ret i32 %51, !dbg !189
state :0x34d3900 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 8
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   %10 = load i32, i32* %2, align 4, !dbg !138
state=0x34d4300 memory operation (inside loop) 
  %10 = load i32, i32* %2, align 4, !dbg !138
 address: 54270904
executeMemoryOperation isWrite? 0
address for memop 54270904
default offset for target address 0
base memory address 54270904
next instruction:   %11 = mul nsw i32 %8, %10, !dbg !139
next instruction:   store i32 %11, i32* %result, align 4, !dbg !140
state=0x34d4300 memory operation (inside loop) 
  store i32 %11, i32* %result, align 4, !dbg !140
 address: 54270824
executeMemoryOperation isWrite? 1
storing value 1024
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   %12 = load i32, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  %12 = load i32, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %13 = add nsw i32 %12, 1, !dbg !141
next instruction:   store i32 %13, i32* %i, align 4, !dbg !141
state=0x34d4300 memory operation (inside loop) 
  store i32 %13, i32* %i, align 4, !dbg !141
 address: 54270984
executeMemoryOperation isWrite? 1
storing value 9
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   br label %4, !dbg !142
next instruction:   %5 = load i32, i32* %i, align 4, !dbg !132
state=0x34d4300 memory operation (inside loop) 
  %5 = load i32, i32* %i, align 4, !dbg !132
 address: 54270984
executeMemoryOperation isWrite? 0
address for memop 54270984
default offset for target address 0
base memory address 54270984
next instruction:   %6 = load i32, i32* %1, align 4, !dbg !134
state=0x34d4300 memory operation (inside loop) 
  %6 = load i32, i32* %1, align 4, !dbg !134
 address: 54270800
executeMemoryOperation isWrite? 0
address for memop 54270800
default offset for target address 0
base memory address 54270800
next instruction:   %7 = icmp slt i32 %5, %6, !dbg !135
next instruction:   %8 = load i32, i32* %result, align 4, !dbg !136
state=0x34d4300 memory operation (inside loop) 
  %8 = load i32, i32* %result, align 4, !dbg !136
 address: 54270824
executeMemoryOperation isWrite? 0
address for memop 54270824
default offset for target address 0
base memory address 54270824
next instruction:   br i1 %7, label %9, label %14, !dbg !137
next instruction:   ret i32 %8, !dbg !143
state :0x34d4300 checking loop to see if an input function
checking leak in loop with 4locals 
checking done
next instruction:   %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %45), !dbg !183
treating as external function: printf
next instruction:   store i32 1, i32* %1, align 4, !dbg !184
state=0x34d4300 memory operation (inside foo) 
  store i32 1, i32* %1, align 4, !dbg !184
 address: 54270152
executeMemoryOperation isWrite? 1
storing value 1
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   br label %50, !dbg !184
next instruction:   %51 = load i32, i32* %1, align 4, !dbg !189
state=0x34d4300 memory operation (inside foo) 
  %51 = load i32, i32* %1, align 4, !dbg !189
 address: 54270152
executeMemoryOperation isWrite? 0
address for memop 54270152
default offset for target address 0
base memory address 54270152
next instruction:   ret i32 %51, !dbg !189
state :0x34d4300 checking foo to see if an input function
terminating state with foo
checking leak in foo with 6locals 
Sensitive leak via local variable 1 in function foo
Sensitive leak via local variable 5 in function foo
checking done
256
512
1024
Size of rdmap : 15

===============
Found Violation at : 
diff : 24
Instruction:
  %27 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !156

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44

[ (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
(And (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 116 , 116 ]

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq 4294967295
          (ReadLSB w32 0 foo_arg_0_0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 140 , 140 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:55
  br i1 %32, label %41, label %44, !dbg !174

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:45
  br i1 %32, label %34, label %37, !dbg !165

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %27 = getelementptr inbounds %struct.secret_t, %struct.secret_t* %H, i32 0, i32 0, !dbg !156

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44

[ (Slt 4294967286
      (ReadLSB w32 0 foo_arg_1_0))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 foo_arg_0_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 128 , 128 ]

[ (Eq false
     (Slt 4294967286
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Eq 4294967295
              (ReadLSB w32 0 foo_arg_0_0)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 152 , 152 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:55
  br i1 %32, label %41, label %44, !dbg !174

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:45
  br i1 %32, label %34, label %37, !dbg !165

foo

Predecessor : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

===============

===============
Found Violation at : 
diff : 68
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 156 , 156 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1))
           (Slt N0 5))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 88 , 88 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 56
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 156 , 156 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (And (Eq false
               (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
                    1))
           (Eq false (Slt N0 5)))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 100 , 100 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 84
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (Eq false
     (Slt 0
          (ReadLSB w32 0 foo_arg_1_0)))
(And (Eq false
          (Slt (ReadLSB w32 0 foo_arg_0_0)
               0))
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 156 , 156 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 72 , 72 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 56
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 128 , 128 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 72 , 72 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 128 , 128 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 152 , 152 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 44
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 116 , 116 ]

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 72 , 72 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 24
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Slt 4294967286 N0))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 116 , 116 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 140 , 140 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 80
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 72 , 72 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq false (Eq 4294967295 N0))
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 152 , 152 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============

===============
Found Violation at : 
diff : 68
Instruction:
  %1 = alloca i32, align 4

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28

[ (Slt 0
      (ReadLSB w32 0 foo_arg_1_0))
(And (Slt (ReadLSB w32 0 foo_arg_0_0)
           1)
      (Eq 1
          (ReadLSB w32 0 return_value)))
 ]   ---->  [ 72 , 72 ]

[ (And (Eq false
          (Slt 0
               N0:(ReadLSB w32 0 foo_arg_1_0)))
      (Eq false (Slt 4294967286 N0)))
(And (Slt N0:(ReadLSB w32 0 foo_arg_0_0)
           0)
      (And (Eq 4294967295 N0)
           (Eq 1
               (ReadLSB w32 0 return_value))))
 ]   ---->  [ 140 , 140 ]

Successors : 

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:43
  %25 = icmp slt i32 %8, 0, !dbg !152

foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:29
  %10 = icmp slt i32 %8, 1, !dbg !134

foo

Predecessor : 

===============




>>>> Listing violations :  

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:44
	=====================

	=====================
	Function : foo

	>>>> /home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c:28
	=====================

>>>> Found violations at  : 2 locations.
Info Flow Summary for function 
all high sym regions: 
foo_arg_1_0
offset=0, size=32
all low sym regions: 
foo_arg_0_0
offset=0, size=32
return_value
offset=0, size=32
 Code loc with leaks:
/home/tuba/Documents/tools/pmguidedsymex/test/test3/test3.c 70: 



KLEE: done: #Timing Side Channel  Locs = 2
KLEE: done: #Cache Side Channel  Locs = 0
KLEE: done: minInst = 72
KLEE: done: maxInst = 157
KLEE: done: HAncestors = 2
KLEE: done: HLeaksOnStack = 1
KLEE: done: HLMixedConstraints = 0
KLEE: done: HVars= 0
KLEE: done: LVars= 0
KLEE: done: total instructions = 830
KLEE: done: completed paths = 8
KLEE: done: generated tests = 8
Lazy initialization is ON 
lazy single spec file? 
Parsed Prog Model Spec 
 low function foo arg 0
 high function foo arg 1
